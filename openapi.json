{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Crelate API Reference",
    "description" : "\r\n# Overview\r\nThe Crelate Api is built on HTTP and is RESTful. We return JSON responses and has predictable URL resources. Every endpoint requires a [valid api key](#section/Overview/API-Key-Management) in order to successfully use the API. \r\n\r\n## Disclaimer\r\nThe Crelate API is currently in beta status. As such, it may change at any time without notice.\r\n\r\n## Previous Documentation\r\n<a href='/api/pub/v1/docs/g/index' target='_blank'>Previous documentation styling with **TRY IT OUT** feature.</a>\r\n\r\n## API Key Management\r\nA Crelate API key can be acquired from the application under <a href='https://help.crelate.com/en/articles/4120535-find-and-manage-your-api-key' target='_blank'>Settings -> My Settings &amp; Preferences</a>.\r\n\r\nYour organization administrator will need to <a href='https://help.crelate.com/en/articles/4120534-api-key-management-and-documentation' target='_blank'>enable API access for non-admin users</a>. Administrators can enable API access for other users by turning on the API access in\r\nSettings -> Advanced Settings -> User Roles.\r\n\r\nYou can turn off API access or regenerate your API key at any time. After disabling or regenerating your API key, existing API processes will begin to fail.\r\n\r\nWhen making HTTP requests, the API key should be specified as a querystring parameter like so:\r\n```html\r\nhttps://app.crelate.com/api/pub/v1/contacts/2057720a-2e8e-4feb-8e44-d8dcf943be5a/?api_key=7e5b949f90924f64afa5c8fed81b6e41\r\n```\r\n\r\n## Lookups\r\nCrelate uses lookups in cases where one record needs to refer to another. For example, an account record can refer to a billing contact.\r\nIn the API, these lookups are represented with Id, FirstName and LastName fields. The account record has three properties for billing contact:\r\nAdditionalContact_Billing_Id, AdditionalContact_Billing_FirstName and AdditionalContact_Billing_LastName.\r\n\r\nWhen saving an account, Crelate decides how to handle the incoming data based on these rules:\r\n - If the Id field is specified, the contact record with the given Id is attached to the account record. In this case, the FirstName and LastName fields are ignored.\r\n - If the Id field is blank, and a FirstName and LastName is specified, a new contact record will be created with the given FirstName and LastName. This new contact record will be attached to the account as the billing contact.\r\n\r\nThe Crelate API handles all lookups based on the these rules. Lookup fields can be identified by the suffix _Id.\r\n\r\n## Required Attributes\r\nWhen saving a record, the following attributes are required. If an invalid record is submitted an HTTP 500 status code will be returned with a list of the missing fields included in the body.\r\n- Company: Name\r\n- Job: Name\r\n- Note: Body\r\n- Task: Body\r\n\r\n## Custom Fields\r\nCrelate provides up to 80 custom fields on Jobs, Contacts, and Companies. These fields are named CustomField1, CustomField2, ... CustomField80. Each custom field will accept a single type: __string__, __date__, __number__, or a __custom picklist__.\r\n\r\n_Please note:_ custom picklist fields are **not** supported by the API at this time.\r\n - CustomField1 - 10:  string\r\n - CustomField11 - 20: number\r\n - CustomField21 - 30: date\r\n - ~~CustomField31 - 40: custom picklist~~\r\n - CustomField41 - 50: string\r\n - CustomField51 - 60: number\r\n - CustomField61 - 70: date\r\n - ~~CustomField71 - 80: custom picklist~~\r\n\r\n## Tags \r\nTags are supported for various record types in the Crelate API. When saving a record, the tags object should contain keys that correspond to the names of each tag category in your Crelate organization. The tags for the default category can be specified with a key of 'Default'. If your Crelate organization had two tag categories, the default category and a category called Skills, the tags object would be:\r\n```\r\n{\r\n\t... other fields ...\r\n\r\n\tTags: {\r\n\t'Default': [ 'High Priority', '' ],\r\n\t'Skills': [ 'Tech', '.NET', 'SQL' ]\r\n\t}\r\n}\r\n```\r\n\r\n## Date/Time handling\r\nAll dates are expected to be supplied as IS0 8601 format in the UTC timezone. For example '2017-01-01T15:00:00Z'. If dates are supplied in any other format or timezone, the operation may fail or you may encounter unpredictable results.\r\n\r\n## Zapier integration\r\n<a href='https://zapier.com' target='_blank'>Zapier</a> is an online integration service which allow you to create business automation processes through a web interface. Zapier offers connectivity to a over 1500 third party services including Crelate.\r\n<a href='https://zapier.com/apps/crelate/integrations' target='_blank'>Get Started With Crelate + Zapier</a>.\r\n\r\n## How to generate client code\r\n<a href='https://swagger.io' target='_blank'>Swagger</a> is an document format which enables delivery of a portable service definition for REST API services. Crelate uses this format to describe our API services. To generate client code in your language of choice:\r\n- Copy the [Crelate service definition JSON](/api/pub/v1)\r\n- Generate client code. Visit <a href='swagger.io' target='_blank'>http://editor.swagger.io</a> and paste the Crelate service definition JSON. (File -> Paste JSON)\r\n- Once the Crelate definition is imported, select 'Generate Client' from the menu and select a lauguage. A zip file will be downloaded which contains the client code library.\r\n- If you are using the .NET framework, <a href='https://github.com/NSwag/NSwag' target='blank'>NSwag</a> can be used to generate a C# client library.\r\n",
    "termsOfService" : "https://www.crelate.com/terms",
    "contact" : {
      "name" : "Crelate Support",
      "email" : "support@crelate.com"
    },
    "version" : "v1"
  },
  "servers" : [ {
    "url" : "https://app.crelate.com/"
  } ],
  "tags" : [ {
    "name" : "Applications",
    "description" : "\r\nIn Crelate, applications store information about an individual applicant when they apply. This API exposes many of the functions found in the Intake tab in Crelate, from approving and rejecting applicants to downloading an applicant's resume. \r\n\r\n## Creating Applications\r\nAt this time, the API does not support creating an application that is not attached to a job. In order to create an application, please [create an application that is attached to a job](#operation/PostJobPostingApplication).\r\n"
  }, {
    "name" : "Companies",
    "description" : "\r\nIn Crelate, jobs and contacts can belong to a company. This API allows you to manage your companies by creating, updating, retrieving, and deleting them.\r\n"
  }, {
    "name" : "Contacts",
    "description" : "\r\nContacts hold information about an individual. This API allows you to manage your contacts by creating, updating, retrieving, and deleting them. It also provides additional functionality from viewing placements to managing the jobs a particular contact is on.\r\n"
  }, {
    "name" : "Delivery Types",
    "description" : "\r\nDelivery Types consists of Time Types and Expense Types\r\n"
  }, {
    "name" : "Domain",
    "description" : "\r\nBecause Crelate offers an extensive amount of flexibility, many of our endpoints require information that is unique to your account such as the way [you organize your recruiting workflow](#operation/GetWorkflowTypes) or how you classify attachments. This API provides information about _your_ particular account. \r\n"
  }, {
    "name" : "Expense Types",
    "description" : "\r\nExpense Types for setting expense information.\r\n"
  }, {
    "name" : "Exports",
    "description" : "\r\nAn export is a backup of your entire account. This API allows you to retrieve an individual export, request an export, or see all exports ever requested for your account. It makes available the functionality found under Settings -> Advanced -> Data Export.\r\n\r\n_Please Note:_ Export limits are still enforced from this API. If you request an export before you're allowed, it will fail and we'll let you know when you can next request one.\r\n\r\n<a href='https://help.crelate.com/en/articles/4120425-exporting-your-database' target='_blank'>Learn More About Exports In Crelate</a>\r\n"
  }, {
    "name" : "Job Postings",
    "description" : "\r\nIn Crelate, job postings are a way to publicly display your internal jobs. This endpoint allows you to manage the job postings that are exposed on your Job Portal. Create, Retrieve, Search, Update, and Delete job postings from this API.\r\n\r\n<a href='https://help.crelate.com/en/articles/4120291-enabling-your-job-portal-and-publishing-jobs' target='_blank'>Learn More About Job Postings</a>\r\n"
  }, {
    "name" : "Jobs",
    "description" : "\r\nIn Crelate, jobs store information about a particular position. From job postings to workflows, jobs helps users organize their open recruitment and staffing requests.\r\n"
  }, {
    "name" : "Notes",
    "description" : "\r\nA note is a type of activity available in Crelate. It's used to store text information. This API allows you to create, read, update, and delete individual notes.\r\n"
  }, {
    "name" : "Tasks",
    "description" : "\r\nTasks are scheduled activities in Crelate. This API exposed CRUD operations for tasks that are not regarding a Job, Contact, or Company.\r\n\r\nYou can also create tasks that are regarding a [Contact](#operation/PostContactTask),[Job](#operation/PostJobTask), or [Company](#operation/PostCompanyTask)\r\n"
  }, {
    "name" : "Time Types",
    "description" : "\r\nTime Types for setting time keeping information.\r\n"
  } ],
  "paths" : {
    "/api/pub/v1/accounts/{accountId}/activities" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "retrieve activities for a company",
        "description" : "This endpoint returns all activities for a particular company. The activities returned are ordered by most recent first.\r\nA paginated list of activities will be returned to you with a maximum of 500 activities per request. If no take is\r\nspecified, 50 will be returned.",
        "operationId" : "CompanyActivities",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startUtc",
          "in" : "query",
          "description" : "optional, retrieves all activities that were created on or after this date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endUtc",
          "in" : "query",
          "description" : "optional, retrieves all activities that were created on or before this date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetActivitiesResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetActivitiesResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "StartUtc must be before EndUtc.",
            "content" : { }
          },
          "404" : {
            "description" : "Company not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/applications" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "retrieve applications",
        "description" : "The get all applications endpoint returns all of the applications ever created for your account. This endpoint\r\nautomatically sorts the response so that the most recent applications will be returned first.\r\nA paginated list of applications will be returned to you with a maximum of 500 applications per request. If no\r\ntake is specified, 50 will be returned.\r\n[Get all applications for a specific job](#operations/GetAllJobApplications)",
        "operationId" : "GetAllApplications",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetApplicationResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetApplicationResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/applications/{applicationId}" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "retrieve application",
        "description" : "The retrieve an application endpoint returns information about a particular application by its ID. The application\r\nID is stored in a field call 'Id'.",
        "operationId" : "GetApplication",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetApplicationResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetApplicationResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "There is no application with that Id.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/applications/{applicationId}/attachments/{attachmentId}" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "retrieve attachment content",
        "description" : "This endpoint returns the content of an application\r\nThe attachment is a Base64 encoded string found in the Content of the response. The attachment type and length are\r\nfound under the ContentType and ContentLength headers respectively.",
        "operationId" : "GetApplicationAttachment",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "application identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamContent"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamContent"
                }
              }
            }
          },
          "404" : {
            "description" : "There is either no application or application attachment with that Id.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/applications/approve" : {
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "approve application",
        "description" : "This endpoint will approve an application. In order to successfully make the request, provide a request object\r\nthat contains: <br />\r\n### Request Object\r\n- ApplicationId: the id of the application to approve\r\n- MatchedContactId: (optional) the id of an already existing contact that this application is a match of. This\r\nwill merge this application with that contact.\r\n- IgnorePossibleMatches: (optional - defaults to false) a boolean that, if set to true, will ignore matches,\r\ncreate a new contact, and block it. Or if set to false, will look for matches and require MatchedContactId to be\r\nprovided if there is a match.\r\n- Note: a note to be added to the contact when they are approved, may be required depending on your Crelate\r\nsettings\r\n### BadRequest - 400\r\nIf the request is poorly formed, a 400 status code and a detailed response will be provided indicating the problem\r\nand the steps to resolve it.\r\nBad Request Response:\r\n- Message: A string that explains in human readable language why the request was rejected\r\n- ContactMatches: A list of matches that the system found. Use this to provide a MatchedContactId. If the\r\nMatchedContactId provided in the request is not in this list, the request will be rejected (error code 4001)\r\n- FailureCode: An integer that is one of several possible values:\r\n- 4001 = BadContactMatchId (the application has possible matched, a MatchedContactId is required or set\r\nIgnorePossibleMatches to true)\r\n- 4002 = ContactMatchIdRequired (a match was found but no MatchedContactId was provided)\r\n- 4004 = NullApplicationId (an application id was not provided in the request)\r\n- 4005 = ApplicationIsNotNew (the application has already been approved, rejected, or marked as spam)\r\n- 4006 = ActivityNoteRequired (provide a note in Note)",
        "operationId" : "ApproveApplication",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "approve application request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApproveApplicantWorkflowAction"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApproveApplicantWorkflowAction"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApproveApplicantWorkflowAction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiApplicationResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiApplicationResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/applications/reject" : {
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "reject application",
        "description" : "This endpoint will reject an application. In order to successfully make the request, provide a request object that\r\ncontains: <br />\r\n### Request Object\r\n- ApplicationId: the id of the application to reject\r\n- MatchedContactId: (optional) the id of an already existing contact that this application is a match of. This\r\nwill merge this application with that contact.\r\n- IgnorePossibleMatches: (optional - defaults to false) a boolean that, if set to true, will ignore matches,\r\ncreate a new contact, and block it. Or if set to false, will look for matches and require MatchedContactId to be\r\nprovided if there is a match.\r\n- PassReasonNote: a note to be added to the contact when they are passed, may be required depending on your\r\nCrelate settings\r\n- PassReasonId: an identifier for a pass reason, this may be required depending on your Crelate settings.\r\n[Find a list of valid pass reasons for your account](#domain/GetEEOCPassReasons)\r\n### BadRequest - 400\r\nIf the request is poorly formed, a 400 status code and a detailed response will be provided indicating the problem\r\nand the steps to resolve it.\r\nBad Request Response:\r\n- Message: A string that explains in human readable language why the request was rejected\r\n- ContactMatches: A list of matches that the system found. Use this to provide a MatchedContactId. If the\r\nMatchedContactId provided in the request is not in this list, the request will be rejected (error code 4001)\r\n- FailureCode: An integer that is one of several possible values:\r\n- 4001 = BadContactMatchId(the application has possible matched, a MatchedContactId is required or set\r\nIgnorePossibleMatches to true)\r\n- 4002 = ContactMatchIdRequired  (a match was found but no MatchedContactId was provided)\r\n- 4003 = PassReasonRequired (A pass reason is required to reject a candidate, please provide [a pass reason in\r\nPassReasonId](#operation/GetEEOCPassReasons))\r\n- 4004 = NullApplicationId (an application id was not provided in the request)\r\n- 4005 = ApplicationIsNotNew (the application has already been approved, rejected, or marked as spam)\r\n- 4006 = ActivityNoteRequired (provide a note in PassReasonNote)",
        "operationId" : "RejectApplication",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "reject application request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RejectApplicantWorkflowAction"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RejectApplicantWorkflowAction"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/RejectApplicantWorkflowAction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiApplicationResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiApplicationResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/applications/spam" : {
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "set application as spam",
        "description" : "This endpoint will mark an application as spam and blocks the applicant. When a contact is blocked, they are no\r\nlonger visible and any future applications from that contact will be ignored. In order to successfully make the\r\nrequest, provide a request object that contains: <br />\r\n### Request Object\r\n- ApplicationId: the id of the application to mark as spam\r\n- MatchedContactId: (optional) the id of an already existing contact that this application is a match of. This\r\nwill merge this application with that contact and block it. <br /><br />\r\n- IgnorePossibleMatches: (optional - defaults to false) a boolean that, if set to true, will ignore matches,\r\ncreate a new contact, and block it. Or if set to false, will look for matches and require MatchedContactId to be\r\nprovided if there is a match.\r\n### BadRequest - 400\r\nIf the request is poorly formed, a 400 status code and a detailed response will be provided indicating the problem\r\nand the steps to resolve it.\r\nBad Request Response:\r\n- Message: A string that explains in human readable language why the request was rejected\r\n- ContactMatches: A list of matches that the system found. Use this to provide a MatchedContactId. If the\r\nMatchedContactId provided in the request is not in this list, the request will be rejected (error code 4001)\r\n- FailureCode: An integer that is one of several possible values:\r\n- 4001 = BadContactMatchId (the application has possible matched, a MatchedContactId is required or set\r\nIgnorePossibleMatches to true)\r\n- 4002 = ContactMatchIdRequired  (a match was found but no MatchedContactId was provided)\r\n- 4004 = NullApplicationId (an application id was not provided in the request)\r\n- 4005 = ApplicationIsNotNew  (the application has already been approved, rejected, or marked as spam)",
        "operationId" : "BlockApplication",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "block application request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicantWorkflowAction"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicantWorkflowAction"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicantWorkflowAction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiApplicationResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiApplicationResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/applications/status/{statusId}" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "retrieve applications by status",
        "description" : "This endpoint returns all applications with a particular status. To successfully query this endpoint, you must\r\nprovide a valid status Id. This endpoint automatically sorts the response so that the most recent applications\r\nwill be returned first.\r\nA paginated list of applications will be returned to you with a maximum of 500 applications per request. If no\r\ntake is specified, 50 will be returned.\r\n[Find a list of your account's valid application statuses](#operation/GetApplicationStatuses)\r\n[Get all applications with a particular status for a specific job](#operations/GetAllJobApplications)",
        "operationId" : "GetAllApplicationsByStatus",
        "parameters" : [ {
          "name" : "statusId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetApplicationResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetApplicationResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/companies" : {
      "post" : {
        "tags" : [ "Companies" ],
        "summary" : "create company",
        "description" : "This endpoint creates a company.",
        "operationId" : "PostCompany",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAccountRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAccountRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAccountRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "471" : {
            "description" : "Duplicate record found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/companies/{companyId}" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "retrieve company",
        "description" : "This endpoint retrieves a specific company.",
        "operationId" : "GetCompany",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetAccountResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetAccountResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "A company with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Companies" ],
        "summary" : "update company",
        "description" : "This endpoint updates a particular company.\r\nTo partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PutCompany",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAccountRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAccountRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAccountRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A company with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Companies" ],
        "summary" : "delete company",
        "description" : "This endpoint deletes a particular company.",
        "operationId" : "DeleteCompany",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A company with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/companies/{companyId}/attachments" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "retrieve attachment",
        "description" : "This endpoint returns information about the attachments for a particular job. This does _not_ return the\r\nattachment itself.",
        "operationId" : "GetAllCompanyAttachments",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiAttachmentResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiAttachmentResponseList"
                }
              }
            }
          },
          "404" : {
            "description" : "A company with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Companies" ],
        "summary" : "create attachment",
        "description" : "This endpoint adds an attachment to a company. You may [provide a document type](#operation/GetDocumentTypes) to\r\norganize your document in Crelate.\r\nThe Content field should contain a Base64 encoded string representing the contents of the resume, the FileName\r\nshould be the original resume filename including the extension.",
        "operationId" : "PostCompanyAttachment",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAttachmentRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAttachmentRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAttachmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/companies/{companyId}/attachments/{attachmentId}" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "retrieve attachment content",
        "description" : "This endpoint returns an attachment for a particular company.\r\nThe attachment is a stream found in the Content of the response. The attachment type and length are found under\r\nthe ContentType and ContentLength headers respectively.",
        "operationId" : "GetCompanyAttachmentContent",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "An attachment with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Companies" ],
        "summary" : "delete attachment",
        "description" : "This endpoint deletes and attachment for a company.",
        "operationId" : "DeleteCompanyAttachment",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "job identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "An attachment with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/companies/{companyId}/notes" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "retrieve notes",
        "description" : "This endpoint returns all notes for a particular company. The notes returned are ordered by most recent first.\r\nA paginated list of notes will be returned to you with a maximum of 500 notes per request. If no take is\r\nspecified, 50 will be returned.",
        "operationId" : "GetAllCompanyNotes",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Companies" ],
        "summary" : "create note",
        "description" : "This endpoint creates a note activity regarding the specified company.",
        "operationId" : "PostCompanyNote",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A company with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/companies/{companyId}/notes/{noteId}" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "retrieve note",
        "description" : "This endpoint retrieves a not for the specified company.",
        "operationId" : "GetCompanyNote",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "A company with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Companies" ],
        "summary" : "update note",
        "description" : "This endpoint updates a note for the specified company.\r\nTo partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PutCompanyNote",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A note with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Companies" ],
        "summary" : "delete note",
        "description" : "This endpoint deletes a note for the specified company",
        "operationId" : "DeleteCompanyNote",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A note with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/companies/{companyId}/tasks" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "retrieve tasks",
        "description" : "This endpoint returns all tasks for a particular company. The tasks returned are ordered by due date descending.\r\nA paginated list of tasks will be returned to you with a maximum of 500 tasks per request. If no take is\r\nspecified, 50 will be returned.",
        "operationId" : "GetAllCompanyTasks",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetTaskResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetTaskResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Companies" ],
        "summary" : "create task",
        "description" : "This endpoint creates a task for the specified company.",
        "operationId" : "PostCompanyTask",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A company with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/companies/{companyId}/tasks/{taskId}" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "retrieve task",
        "description" : "This endpoint retrieves a task for the specified company.",
        "operationId" : "GetCompanyTask",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetTaskResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetTaskResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "A company with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Companies" ],
        "summary" : "update task",
        "description" : "This endpoint updates a note for the specified company.\r\nTo partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PutCompanyTask",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A task with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Companies" ],
        "summary" : "delete task",
        "description" : "This endpoint deletes a task for the specified company",
        "operationId" : "DeleteCompanyTask",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A task with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/companies/lists/{listId}" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "retrieve companies by list id",
        "description" : "This endpoint retrieves a list of companies belonging to a specific list id provided.\r\nA paginated list of companies will be returned to you with a maximum of 500 companies per request. If no take is\r\nspecified, 50 will be returned. You can retrieve a list of all company list ids and names from [this endpoint.](#operation/GetCompanyLists)",
        "operationId" : "GetAccountsByList",
        "parameters" : [ {
          "name" : "listId",
          "in" : "path",
          "description" : "guid of the list id containing companies",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetAccountResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetAccountResponseList"
                }
              }
            }
          },
          "204" : {
            "description" : "No companies found.",
            "content" : { }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/companies/recent" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "retrieve recent companies",
        "description" : "This endpoint retrieves a list of companies that were created or updated within a certain minute based time frame\r\ninclusively. You may optionally filter by record type.\r\nA paginated list of jobs will be returned to you with a maximum of 500 jobs per request. If no take is specified,\r\n50 will be returned.\r\nExample: To retrieve all companies updated or created within the last hour, query this endpoint and set\r\nmodified=60",
        "operationId" : "GetRecentCompany",
        "parameters" : [ {
          "name" : "modified",
          "in" : "query",
          "description" : "modified within x number of minutes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "filter by record type, acceptable options are null, 0, 1, 2, 3, 4, 5, 6, 7\r\ndefaults to 0, 0 = All contacts regardless of record type\r\nnull = contacts without a record type\r\nStandard: 1 = Customer, 2 = Potential Customer,\r\nCombined: 3 = Customer and Potential Customer\r\ne.g. type 7 will select only contacts who are all three types",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetAccountResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetAccountResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/contacts" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve contacts by email",
        "description" : "This endpoint retrieves a list of contacts by email address.",
        "operationId" : "GetContactByEmail",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "email address",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetContactResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetContactResponseList"
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "create contact",
        "description" : "This endpoint creates a contact.",
        "operationId" : "PostContact",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveContactRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveContactRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveContactRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "471" : {
            "description" : "Duplicate Found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/contacts/{contactId}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve contact",
        "description" : "This endpoint retrieves a specific contact by id.",
        "operationId" : "GetContact",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetContactResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetContactResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "A contact with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Contacts" ],
        "summary" : "update contact",
        "description" : "This endpoint updates a specific contact\r\nTo partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PutContact",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveContactRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveContactRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveContactRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A contact with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Contacts" ],
        "summary" : "delete contact",
        "description" : "This endpoint deletes a specific contact",
        "operationId" : "DeleteContact",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A contact with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/contacts/{contactId}/activities" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve activities for a contact",
        "description" : "This endpoint returns all activities for a particular contact. The activities returned are ordered by most recent first.\r\nA paginated list of activities will be returned to you with a maximum of 500 activities per request. If no take is\r\nspecified, 50 will be returned.",
        "operationId" : "ContactActivities",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startUtc",
          "in" : "query",
          "description" : "optional, retrieves all activities that were created on or after this date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endUtc",
          "in" : "query",
          "description" : "optional, retrieves all activities that were created on or before this date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetActivitiesResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetActivitiesResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "StartUtc must be before EndUtc.",
            "content" : { }
          },
          "404" : {
            "description" : "Contact not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/contacts/{contactId}/attachments" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve attachment",
        "description" : "This endpoint returns information about the attachments for a particular job. This does _not_ return the\r\nattachment itself.",
        "operationId" : "GetContactAttachments",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiAttachmentResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiAttachmentResponseList"
                }
              }
            }
          },
          "404" : {
            "description" : "A contact with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "create attachment",
        "description" : "This endpoint adds an attachment to a particular contact. You may [provide a document\r\ntype](#operation/GetDocumentTypes) to organize your document in Crelate.\r\nThe Content field should contain a Base64 encoded string representing the contents of the resume, the FileName\r\nshould be the original resume filename including the extension.",
        "operationId" : "PostContactAttachment",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAttachmentRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAttachmentRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAttachmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/contacts/{contactId}/attachments/{attachmentId}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve attachment content",
        "description" : "This endpoint returns an attachment for a particular job.\r\nThe attachment is a stream found in the Content of the response. The attachment type and length are found under\r\nthe ContentType and ContentLength headers respectively.",
        "operationId" : "GetContactAttachmentContent",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "An attachment with that id was not found.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Contacts" ],
        "summary" : "delete attachment",
        "description" : "This endpoint allows you to delete an attachment from a contact. The attachment specificed must exist on the\r\ncontact to successfully return.",
        "operationId" : "DeleteContactAttachment",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "contact identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "A job with that id was not found",
            "content" : { }
          },
          "404" : {
            "description" : "An attachment with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/contacts/{contactId}/email" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieves all emails from a contact",
        "description" : "This endpoint retrieves emails that are associated with the contact that have been sent or\r\nreceived. It excludes bulk emails.",
        "operationId" : "GetEmails",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "Id of the contact that the email is linked with.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "Crelate API key.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "Skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "Retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetEmailsResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetEmailsResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "appends email to a contact",
        "description" : "This endpoint appends an email to a contact.",
        "operationId" : "PostEmail",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "Id of the contact that the email will be linked with.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "Crelate API key.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body containing the email information.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveContactEmailRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveContactEmailRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveContactEmailRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/contacts/{contactId}/jobs" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve jobs",
        "description" : "This endpoint returns all the jobs the contact is associated with.",
        "operationId" : "GetContactJobs",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "contact identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiGetContactJob"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiGetContactJob"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "This contact is not on any jobs",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/contacts/{contactId}/jobs/{jobId}" : {
      "put" : {
        "tags" : [ "Contacts" ],
        "summary" : "update contact",
        "description" : "This endpoint updates the status of a contact on a job with the provided [workflow item\r\nstatus](#operation/GetWorkflowStatuses).\r\nTo partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PublicApiV1_PutContactJobStatus",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "contact identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "job identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipWorkflowRules",
          "in" : "query",
          "description" : "skips configured workflow rules. (Default: true)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveWorkflowItemStatusRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveWorkflowItemStatusRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveWorkflowItemStatusRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A contact with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "append job",
        "description" : "This endpoint adds a contact to a job with the provided [workflow item status](#operation/GetWorkflowStatuses).",
        "operationId" : "PostContactJob",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "contact identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "job identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveWorkflowItemStatusRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveWorkflowItemStatusRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveWorkflowItemStatusRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A contact with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Contacts" ],
        "summary" : "remove job",
        "description" : "This endpoint deletes a contact from a job. This merely removes the association between the contact and the job.\r\nIt does **not** delete the contact or the job.",
        "operationId" : "DeleteContactJob",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A contact with the provided id was not found on the specified job",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/contacts/{contactId}/notes" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve notes",
        "description" : "This endpoint returns all notes for a particular contact. The notes returned are ordered by most recent first.\r\nA paginated list of notes will be returned to you with a maximum of 500 notes per request. If no take is\r\nspecified, 50 will be returned.",
        "operationId" : "PublicApiV1_ContactNotes",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "create note",
        "description" : "This endpoint creates a note activity on the specified contact",
        "operationId" : "PostContactNote",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A contact with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/contacts/{contactId}/notes/{noteId}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve note",
        "description" : "This endpoint returns a specific note on a contact.",
        "operationId" : "GetContactNote",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "A note with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Contacts" ],
        "summary" : "update note",
        "description" : "This endpoint updates an existing note on a contact.\r\nTo partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PutContactNote",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A note with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Contacts" ],
        "summary" : "delete note",
        "description" : "This endpoint deletes a specific note on a contact.",
        "operationId" : "DeleteContactNote",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A note with that id was not found on the specified job.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/contacts/{contactId}/placements" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve placements",
        "description" : "This endpoint returns a list of placements associated with the contact.\r\nA paginated list of placements will be returned to you with a maximum of 500 placements per request. If no take is\r\nspecified, 50 will be returned.\r\n_Please Note:_ TimeToFill is the amount of Days it took to fill the position.\r\n<a href=\"https://help.crelate.com/en/articles/4120276-open-date-start-date-close-date\" target=\"_blank\">\r\n     Learn More About Placements\r\n</a>",
        "operationId" : "PublicApiV1_GetContactPlacements",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "id for job",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiPlacementResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiPlacementResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "404" : {
            "description" : "A contact with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/contacts/{contactId}/tasks" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve tasks",
        "description" : "This endpoint returns all tasks for a particular job. The tasks returned are ordered by due date descending.\r\nA paginated list of tasks will be returned to you with a maximum of 500 tasks per request. If no take is\r\nspecified, 50 will be returned.",
        "operationId" : "GetAllContactTasks",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetTaskResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetTaskResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "create task",
        "description" : "This endpoint creates task regarding the specified contact.",
        "operationId" : "PostContactTask",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A contact with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/contacts/{contactId}/tasks/{taskId}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve task",
        "description" : "This endpoint returns a task that is regarding the specified contact",
        "operationId" : "GetContactTask",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "task identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetTaskResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetTaskResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "A task with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Contacts" ],
        "summary" : "update task",
        "description" : "This endpoint updates an existing task for the specified contact.\r\nTo partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PutContactTask",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "No contacts found on job",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Contacts" ],
        "summary" : "delete task",
        "description" : "This endpoint deletes a task that is regarding a particular contact",
        "operationId" : "DeleteContactTask",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A task with that id was not found on the specified contact",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/contacts/date" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve contacts by date range",
        "description" : "This endpoint retrieves a list of contacts created or updated within a provided start date and end date (optional).\r\nA paginated list of contact will be returned to you with a maximum of 500 jobs per request. If no take is\r\nspecified, 50 will be returned. The items are sorted by the most recent modified contact.\r\nThe start date parameter is expecting a string in the ISO-8601 format. If no endUtc is specified, the\r\nrange will be to UTC Now.\r\nExample: \"startUtc\" : \"2021-08-18T12:00\"",
        "operationId" : "GetContactsByDateRange",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startUtc",
          "in" : "query",
          "description" : "the date (UTC) to begin retrieving contacts",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endUtc",
          "in" : "query",
          "description" : "the date (UTC) to end retrieving contacts. Defaults to UTC Now if null.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "filter by record type, acceptable options are null, 0, 1, 2, 3, 4, 5, 6, 7\r\ndefaults to 0, 0 = All contacts regardless of record type\r\nnull = contacts without a record type\r\nStandard: 1 = Candidate, 2 = Sales Client Contact, 4 = Lead Contact\r\nCombined: 3 = 1 and 2, 5 = 1 and 4, 6 = 2 and 4, 7 = 1 and 2 and 4]\r\ne.g. type 7 will select only contacts who are all three types",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetContactResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetContactResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Date Range. Start date must be in the past.",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/contacts/lists/{listId}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve contacts by list id",
        "description" : "This endpoint retrieves a list of contacts belonging to a specific list id provided.\r\nA paginated list of contact will be returned to you with a maximum of 500 contacts per request. If no take is\r\nspecified, 50 will be returned. You can retrieve a list of all contact list ids and names from [this endpoint.](#operation/GetContactLists)",
        "operationId" : "GetContactsByList",
        "parameters" : [ {
          "name" : "listId",
          "in" : "path",
          "description" : "guid of the list id containing contacts",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetContactResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetContactResponseList"
                }
              }
            }
          },
          "204" : {
            "description" : "No contacts found.",
            "content" : { }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/contacts/recent" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "retrieve recent contacts",
        "description" : "This endpoint retrieves a list of contacts created or updated within a provided minute based time frame.\r\nYou may optionally specify a status id or name in order to retrieve all contacts with a particular status. [See\r\nwhat statuses are available in your account.](#operation/WorkflowStatuses)\r\nA paginated list of contact will be returned to you with a maximum of 500 jobs per request. If no take is\r\nspecified, 50 will be returned.\r\nFor Example: To return all contacts updated or created within the last hour, set modified=60",
        "operationId" : "GetRecentContacts",
        "parameters" : [ {
          "name" : "modified",
          "in" : "query",
          "description" : "modified within x number of minutes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "filter by record type, acceptable options are null, 0, 1, 2, 3, 4, 5, 6, 7\r\ndefaults to 0, 0 = All contacts regardless of record type\r\nnull = contacts without a record type\r\nStandard: 1 = Candidate, 2 = Sales Client Contact, 4 = Lead Contact\r\nCombined: 3 = 1 and 2, 5 = 1 and 4, 6 = 2 and 4, 7 = 1 and 2 and 4]\r\ne.g. type 7 will select only contacts who are all three types",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetContactResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetContactResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/deliverytypes" : {
      "get" : {
        "tags" : [ "Delivery Types" ],
        "summary" : "Retrieve Delivery Types List",
        "description" : "Retrieves a list of Delivery Types (Time Types or Expense Types).",
        "operationId" : "Retrieve Delivery Types List",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "If status is supplied it must equal one of: active, inactive",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "If type is supplied it must equal one of: time, expense",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "query",
          "description" : "Id of a specific job to retrieve the Delivery Types",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "object",
                      "properties" : { }
                    }
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "object",
                      "properties" : { }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "If type is supplied it must equal one of: time, expense",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/deliverytypes/{deliveryTypeId}/access" : {
      "put" : {
        "tags" : [ "Delivery Types" ],
        "summary" : "Replace Access",
        "description" : "Replaces an assignments access to the specified Delivery Type.",
        "operationId" : "Replace Access",
        "parameters" : [ {
          "name" : "deliveryTypeId",
          "in" : "path",
          "description" : "Id of the delivery type to replace access to.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "jobId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "List of assignments that will have their access replaced to the delivery type.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "00000000-0000-0000-0000-000000000000"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "00000000-0000-0000-0000-000000000000"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "assignmentIds"
      },
      "post" : {
        "tags" : [ "Delivery Types" ],
        "summary" : "Grant Access",
        "description" : "Grants an assignments access to the specified Delivery Type.\r\n\r\nDelivery types must be active to grant access.",
        "operationId" : "Grant Access",
        "parameters" : [ {
          "name" : "deliveryTypeId",
          "in" : "path",
          "description" : "Id of the delivery type to grant access to.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "List of assignments that will have access to the delivery type.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "00000000-0000-0000-0000-000000000000"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "00000000-0000-0000-0000-000000000000"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "assignmentIds"
      },
      "delete" : {
        "tags" : [ "Delivery Types" ],
        "summary" : "Revoke Access",
        "description" : "Revokes an assignments access to the specified Delivery Type.\t\t///",
        "operationId" : "Revoke Access",
        "parameters" : [ {
          "name" : "deliveryTypeId",
          "in" : "path",
          "description" : "Id of the delivery type to revoke access to.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "List of assignments that will have their access revoked to the delivery type.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "assignmentIds"
      }
    },
    "/api/pub/v1/deliverytypes/{deliveryTypeId}/claimed" : {
      "get" : {
        "tags" : [ "Delivery Types" ],
        "summary" : "Is Delivery Type Claimed",
        "description" : "Determines if the delivery type is claimed for a certain scenario. \r\n\r\nUsed to check if claimed by an employee, a pay period, an assignment, and/or a job.",
        "operationId" : "Is Delivery Type Claimed",
        "parameters" : [ {
          "name" : "deliveryTypeId",
          "in" : "path",
          "description" : "Id of a Delivery Type to check if it is claimed",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "employeeId",
          "in" : "query",
          "description" : "Id of an employee to check if it is claimed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "payperiodId",
          "in" : "query",
          "description" : "Id of an Pay Period to check if it is claimed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "assignmentId",
          "in" : "query",
          "description" : "Id of an Assignement to check if it is claimed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "jobId",
          "in" : "query",
          "description" : "Id of an Job to check if it is claimed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/deliverytypes/opportunity/{opportunityId}" : {
      "get" : {
        "tags" : [ "Delivery Types" ],
        "summary" : "Retrieve Opportunity Delivery Types",
        "description" : "Retrieves all of the delivery type information of the specified Opportunity Id.",
        "operationId" : "Retrieve Opportunity Delivery Types",
        "parameters" : [ {
          "name" : "opportunityId",
          "in" : "path",
          "description" : "Id of the opportunity.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "If status is supplied it must equal one of: active, inactive",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "If type is supplied it must equal one of: time, expense",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeFullAccessInfo",
          "in" : "query",
          "description" : "If supplied, includes the full access info in the response",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OpportunityDeliveryTypeInfo"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OpportunityDeliveryTypeInfo"
                }
              }
            }
          },
          "400" : {
            "description" : "If type is supplied it must equal one of: time, expense",
            "content" : { }
          }
        }
      },
      "patch" : {
        "tags" : [ "Delivery Types" ],
        "summary" : "Update Opportunity Delivery Types",
        "description" : "Updates all of the delivery type on an Opportunity.",
        "operationId" : "Update Opportunity Delivery Types",
        "parameters" : [ {
          "name" : "opportunityId",
          "in" : "path",
          "description" : "Id of the opportunity.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "Action to take to update: add or remove",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of delivery types that will be updated on an opportunity",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Action is not allowed. Please choose either 'add' or 'remove'",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "deliveryTypeIds"
      }
    },
    "/api/pub/v1/deliverytypes/opportunitytype/{opportunityTypeId}" : {
      "get" : {
        "tags" : [ "Delivery Types" ],
        "summary" : "Retrieve Default Delivery Types For Opportunity Type",
        "description" : "Retrieves all the default Delivery Types of the specified Opportunity Type Id.",
        "operationId" : "Retrieve Default Delivery Types For Opportunity Type",
        "parameters" : [ {
          "name" : "opportunityTypeId",
          "in" : "path",
          "description" : "Id of the opportunity.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OpportunityTypeDeliveryTypesResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OpportunityTypeDeliveryTypesResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Opportunity type not found.",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/domain/applicantSources" : {
      "get" : {
        "tags" : [ "Domain" ],
        "summary" : "retrieve applicant sources",
        "description" : "This end point returns a list of applicant sources.",
        "operationId" : "GetApplicantSources",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiContactSource"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiContactSource"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/domain/applicationStatuses" : {
      "get" : {
        "tags" : [ "Domain" ],
        "summary" : "retrieve application statuses",
        "description" : "This endpoint returns a list of application statuses for your account.\r\n_Use Case:_ In order to [retrieve an application with a particular\r\nstatus](#applications/GetAllApplicationsByStatus), you must provide a valid application status.",
        "operationId" : "GetApplicationStatuses",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiApplicationStatus"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiApplicationStatus"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/domain/customFields" : {
      "get" : {
        "tags" : [ "Domain" ],
        "summary" : "retrieve custom fields",
        "description" : "Retreive metadata regarding custom fields",
        "operationId" : "GetDomainCustomFields",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetDomainCustomFieldsResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetDomainCustomFieldsResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/domain/documentTypes" : {
      "get" : {
        "tags" : [ "Domain" ],
        "summary" : "retrieve attachment types",
        "description" : "This endpoint returns a list of document types. Every document in Crelate can have an attachment type.\r\n_Use Case:_ When uploading an attachment to a [Contact](#operation/PostContactAttachment),\r\n[Job](#operation/PostJobAttachment), or [Company](#operation/PostCompanyAttachment), you can optionally specify an\r\nattachment type.",
        "operationId" : "GetDocumentTypes",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api_key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiDocumentType"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiDocumentType"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/domain/eeocPassReasons" : {
      "get" : {
        "tags" : [ "Domain" ],
        "summary" : "retrieve eeoc pass reasons",
        "description" : "This endpoint returns a list of your account's EEOC pass reasons.\r\n_Use Case:_ Depending on your account's settings, you may be required to provide a pass reason when [rejecting an\r\napplication](#applications/RejectApplication).",
        "operationId" : "GetEEOCPassReasons",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiEeocPassReason"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiEeocPassReason"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/domain/lists/companies" : {
      "get" : {
        "tags" : [ "Domain" ],
        "summary" : "retrieve company lists",
        "description" : "This end point returns a list of company lists created in your account.  _Use Case:_ [Retrieving companies on a particular list.](#operation/GetAccountsByList)",
        "operationId" : "GetCompanyLists",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiListsCategory"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiListsCategory"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/domain/lists/contacts" : {
      "get" : {
        "tags" : [ "Domain" ],
        "summary" : "retrieve contact lists",
        "description" : "This end point returns a list of contact lists created in your account.  _Use Case:_ [Retrieving contacts on a particular list.](#operation/GetContactsByList)",
        "operationId" : "GetContactLists",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiListsCategory"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiListsCategory"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/domain/lists/jobs" : {
      "get" : {
        "tags" : [ "Domain" ],
        "summary" : "retrieve job lists",
        "description" : "This end point returns a list of job lists created in your account. _Use Case:_ [Retrieving jobs on a particular list.](#operation/GetJobsByList)",
        "operationId" : "GetJobLists",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiListsCategory"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiListsCategory"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/domain/tagCategories" : {
      "get" : {
        "tags" : [ "Domain" ],
        "summary" : "retrieve tag categories",
        "description" : "This end point returns a list of tag categories created in your account. These tag categories are used when adding\r\ntags to Contacts, Companies, and Jobs.\r\n[More Info about Tags and the API](#section/Overview/Tags)",
        "operationId" : "GetTagCategories",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiTagCategory"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiTagCategory"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/domain/workflowStatuses" : {
      "get" : {
        "tags" : [ "Domain" ],
        "summary" : "retrieve workflow statuses",
        "description" : "This endpoint returns a list of workflow statuses for every workflow type. In Crelate, a workflow item status is a\r\nstage under a particular workflow type. In the app, the stages for a workflow type can be found under Settings -&gt;\r\nBasic Setup -&gt; Workflows... -&gt; {Your Particular Workflow}\r\n<a href=\"https://help.crelate.com/en/articles/4120486-creating-your-workflow-stages\" target=\"_blank\">\r\n     Learn\r\n     More About Workflows\r\n</a>\r\n_Use Case_: [Adding a contact to a job with a particular stage.](#operation/PostJobContact). First [determine what\r\ntype of workflow the job is](#operation/GetJob) and then filter for the corresponding statuses for that workflow\r\ntype from this endpoint.\r\nPass the desired status type to your endpoint.",
        "operationId" : "GetWorkflowStatuses",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiWorkflowStatus"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiWorkflowStatus"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/domain/workflowTypes" : {
      "get" : {
        "tags" : [ "Domain" ],
        "summary" : "retrieve workflow types",
        "description" : "In the app, workflow types can be found under Settings -&gt; Basic Setup -&gt; Workflows... This endpoint returns the\r\ntop level options.",
        "operationId" : "GetWorkflowTypes",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiWorkflowType"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiWorkflowType"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/expensetypes" : {
      "post" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Create",
        "description" : "Creates a new type.",
        "operationId" : "Create Expense Types",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "entity"
      }
    },
    "/api/pub/v1/expensetypes/{deliveryTypeId}/claimed" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Is Claimed",
        "description" : "Determines if the type is claimed for a certain scenario. \r\n\r\nUsed to check if claimed by an employee, a pay period, an assignment, and/or a job.",
        "operationId" : "Retrieve Is Claimed Expense Types",
        "parameters" : [ {
          "name" : "deliveryTypeId",
          "in" : "path",
          "description" : "Id of a Delivery Type to check if it is claimed",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "employeeId",
          "in" : "query",
          "description" : "Id of an employee to check if it is claimed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "payperiodId",
          "in" : "query",
          "description" : "Id of an Pay Period to check if it is claimed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "assignmentId",
          "in" : "query",
          "description" : "Id of an Assignement to check if it is claimed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "jobId",
          "in" : "query",
          "description" : "Id of an Job to check if it is claimed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/expensetypes/{id}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Retrieve",
        "description" : "Retrieves the specified type.",
        "operationId" : "Retrieve Expense Types",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object",
                    "properties" : { }
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object",
                    "properties" : { }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Update",
        "description" : "Updates the specified type.",
        "operationId" : "Update Expense Types",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "entity"
      },
      "delete" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Delete",
        "description" : "Deletes the specified type.",
        "operationId" : "Delete Expense Types",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/expensetypes/{id}/children/meanings" : {
      "post" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Update the Children Type Meanings",
        "description" : "Updates the meanings for the Child Types.",
        "operationId" : "Update the Children Type Meanings Expense Types",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityLookup"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityLookup"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityLookup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "500" : {
            "description" : "Argument out of range",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "meaningId"
      }
    },
    "/api/pub/v1/expensetypes/{id}/enable" : {
      "post" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Enable",
        "description" : "Enables the delivery type.",
        "operationId" : "Enable Expense Types",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/expensetypes/{typeId}/available" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Retrieve Placements With Access",
        "description" : "Retrieves all of the delivery type information of the specified Placement.",
        "operationId" : "Retrieve Placements With Access Expense Types",
        "parameters" : [ {
          "name" : "typeId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "payPeriodId",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "employeeId",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "includeClaimed",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeliveryAssignmentInfo"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeliveryAssignmentInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/expensetypes/available" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Retrieve Available Delivery Types",
        "description" : "Gets a list of available delivery types information that are on the assignement.",
        "operationId" : "Retrieve Available By Assignments Expense Types",
        "parameters" : [ {
          "name" : "payPeriodId",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "employeeId",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "includeClaimed",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssignmentDeliveryTypes"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssignmentDeliveryTypes"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/expensetypes/available/assignment/{assignmentId}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Retrieve Available Delivery Types",
        "description" : "Gets a list of available delivery types information that are on the assignement.",
        "operationId" : "Retrieve Available Delivery Types Expense Types",
        "parameters" : [ {
          "name" : "assignmentId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "payPeriodId",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "includeClaimed",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssignmentDeliveryTypeInfo"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssignmentDeliveryTypeInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/expensetypes/duplicatecheck" : {
      "post" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Is Duplicate Name",
        "description" : "Checks the name of the delivery type to ensure it isn't a duplicate name.",
        "operationId" : "Is Duplicate Name Expense Types",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "entity"
      }
    },
    "/api/pub/v1/expensetypes/ensure" : {
      "post" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Ensure",
        "description" : "Ensures the specified type.",
        "operationId" : "Ensure Expense Types",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "entity"
      }
    },
    "/api/pub/v1/exports" : {
      "get" : {
        "tags" : [ "Exports" ],
        "summary" : "retrieve exports",
        "description" : "This endpoint allows you to retrieve metadata about all the exports requested for your account.\r\nA paginated list of exports will be returned to you with a maximum of 500 exports per request. If no take is\r\nspecified, 50 will be returned.",
        "operationId" : "GetAllExports",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetExportResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetExportResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Exports" ],
        "summary" : "create export",
        "description" : "This endpoint allowed you to request a full database export with the option to include attachments. Specifying the\r\nIncludeModifiedAfter allows you to do an incremental export by only exporting information after the data provided\r\nin that field. Otherwise, we'll export everything.\r\n_Please Note:_ Export limits are still enforced from this endpoint. If you request an export before you're\r\nallowed, it will fail and we'll let you know when you can next request one.",
        "operationId" : "RequestExport",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveExportRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveExportRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveExportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request was poorly formed or export is not available.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/exports/{exportId}" : {
      "get" : {
        "tags" : [ "Exports" ],
        "summary" : "retrieve export",
        "description" : "This endpoint allows you to retrieve metadata about a particular export. The returned object contains a url to\r\ndownload the export.",
        "operationId" : "GetExport",
        "parameters" : [ {
          "name" : "exportId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetExportResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetExportResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "There is no export with that Id",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/exports/{exportId}/download" : {
      "get" : {
        "tags" : [ "Exports" ],
        "summary" : "download export",
        "description" : "This endpoint allows you to retrieve metadata about a particular export. The returned object contains a url to\r\ndownload the export.",
        "operationId" : "DownloadExport",
        "parameters" : [ {
          "name" : "exportId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "There is no export with that Id",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobPostings" : {
      "get" : {
        "tags" : [ "Job Postings" ],
        "summary" : "retrieve job postings",
        "description" : "This endpoint retrives a list of all job postings currently visible on your portal.\r\nA paginated list of job postings will be returned to you with a maximum of 500 job postings per request. If no\r\ntake is specified, 50 will be returned.",
        "operationId" : "GetJobPostings",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobPostingListResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobPostingListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Take must be greater than 0.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobPostings/{jobId}" : {
      "get" : {
        "tags" : [ "Job Postings" ],
        "summary" : "retrieve job posting",
        "description" : "This endpoint returns a job posting for a job. Your portal must be enabled and the job must be on the portal in\r\norder for this endpoint to return successfully.",
        "operationId" : "GetJobPosting",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobPostingResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobPostingResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "A job with that id was not found.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Job Postings" ],
        "summary" : "update job posting",
        "description" : "To partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "UpdateJobPosting",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveJobPostingRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveJobPostingRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveJobPostingRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A job with that id was not found.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Job Postings" ],
        "summary" : "delete job posting",
        "description" : "The endpoint removes a job posting from your job portal. This does not delete the description, location, or public\r\ntitle of the job in Crelate.",
        "operationId" : "DeleteJobPosting",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A job posting with that id was not found.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobPostings/{jobId}/applications" : {
      "post" : {
        "tags" : [ "Job Postings" ],
        "summary" : "create job posting",
        "description" : "This endpoint creates a job application for a specific job.\r\nThe ResumeContent field should contain a Base64 encoded string representing the contents of the resume, the\r\nResumeFilename should be the original resume filename including the extension.",
        "operationId" : "PostJobPostingApplication",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveJobApplicationRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveJobApplicationRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveJobApplicationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A job with that id was not found.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/jobPostings/recent" : {
      "get" : {
        "tags" : [ "Job Postings" ],
        "summary" : "retrieve recent job postings",
        "description" : "This endpoint retrieves a list of job postings that have been updated or created within the time frame provided.\r\nThe time frame is minute based and is inclusive.\r\nFor example: To return all job postings updated with the last hour, set modified = 60.",
        "operationId" : "GetRecentJobPostings",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modified",
          "in" : "query",
          "description" : "modified within x number of minutes ago",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobPostingListResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobPostingListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Take must be greater than 0.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobPostings/search" : {
      "get" : {
        "tags" : [ "Job Postings" ],
        "summary" : "search job postings",
        "description" : "This endpoint allows you to search your job postings. This emulates the search bar in your job portal.\r\n_Please note:_ This endpoint does not support location based queries.",
        "operationId" : "SearchJobPostings",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "search terms",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobPostingSearchResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobPostingSearchResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve all jobs",
        "description" : "This endpoint retrieves a list of jobs.",
        "operationId" : "GetJobs",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "Number of records to be skipped.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "50 records are retrieved by default. Max 500 records per request.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobListResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Jobs" ],
        "summary" : "create job",
        "description" : "This endpoint creates a job in Crelate.",
        "operationId" : "PostJob",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveJobRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveJobRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveJobRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "471" : {
            "description" : "Duplicate record found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/jobs/{jobId}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve job",
        "description" : "This endpoint retrieves a particular job.",
        "operationId" : "GetJob",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "NotFound",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Jobs" ],
        "summary" : "update job",
        "description" : "This endpoint updates a individual job.\r\nTo partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PutJob",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveJobRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveJobRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveJobRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Malformed request.",
            "content" : { }
          },
          "404" : {
            "description" : "A job with that id was not found.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Jobs" ],
        "summary" : "delete job",
        "description" : "Delete an individual job from Crelate.",
        "operationId" : "DeleteJob",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A job with that id was not found.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/{jobId}/activities" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve activities for a job",
        "description" : "This endpoint returns all activities for a particular job. The activities returned are ordered by most recent first.\r\nA paginated list of activities will be returned to you with a maximum of 500 activities per request. If no take is\r\nspecified, 50 will be returned.",
        "operationId" : "JobActivities",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startUtc",
          "in" : "query",
          "description" : "optional, retrieves all activities that were created on or after this date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endUtc",
          "in" : "query",
          "description" : "optional, retrieves all activities that were created on or before this date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetActivitiesResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetActivitiesResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "StartUtc must be before EndUtc.",
            "content" : { }
          },
          "404" : {
            "description" : "Job not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/{jobId}/applications" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve applications",
        "description" : "This endpoint returns all applications for a particular job, sorted by most recent first.\r\nA paginated list of applications will be returned to you with a maximum of 500 applications per request. If no\r\ntake is specified, 50 will be returned.\r\n[Get All Applications](#operation/GetAllApplications)",
        "operationId" : "GetJobApplications",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/{jobId}/applications/{applicationId}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve application",
        "description" : "This endpoint returns an application that is for a particular job.",
        "operationId" : "GetJobApplication",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "job identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "applicationId",
          "in" : "path",
          "description" : "application identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "An application was not found with that id",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/{jobId}/applications/{applicationId}/attachments/{attachmentId}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve application attachment content",
        "description" : "This endpoint returns the content of an application for a specific job\r\nThe attachment is a Base64 encoded string found in the Content of the response. The attachment type and length are\r\nfound under the ContentType and ContentLength headers respectively.",
        "operationId" : "GetJobApplicationAttachment",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "applicationId",
          "in" : "path",
          "description" : "application identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamContent"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamContent"
                }
              }
            }
          },
          "404" : {
            "description" : "There is either no application or application attachment with that Id.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/{jobId}/applications/status/{statusId}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve applications by status",
        "description" : "This endpoint returns all applications with a particular status for a particular job, sorted by most recent first.\r\nA paginated list of applications will be returned to you with a maximum of 500 applications per request. If no\r\ntake is specified, 50 will be returned.\r\n[Find a list of your account's valid application statuses](#operation/GetApplicationStatuses)\r\n[Get all applications with a particular status](#operation/GetAllApplicationsByStatus)",
        "operationId" : "GetJobApplicationsByStatus",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "statusId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/{jobId}/attachments" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve attachment",
        "description" : "This endpoint returns information about the attachments for a particular job. This does _not_ return the\r\nattachment itself.",
        "operationId" : "GetJobAttachments",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiAttachmentResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiAttachmentResponseList"
                }
              }
            }
          },
          "404" : {
            "description" : "A job with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Jobs" ],
        "summary" : "create attachment",
        "description" : "This endpoint adds an attachment to a particular job. You may [provide a document\r\ntype](#operation/GetDocumentTypes) to organize your document in Crelate.\r\nThe Content field should contain a Base64 encoded string representing the contents of the resume, the FileName\r\nshould be the original resume filename including the extension.",
        "operationId" : "PostJobAttachment",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAttachmentRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAttachmentRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveAttachmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/jobs/{jobId}/attachments/{attachmentId}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve attachment content",
        "description" : "This endpoint returns an attachment for a particular job.\r\nThe attachment is a stream found in the Content of the response. The attachment type and length are found under\r\nthe ContentType and ContentLength headers respectively.",
        "operationId" : "GetJobAttachment",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "An attachment with that id was not found.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Jobs" ],
        "summary" : "delete attachment",
        "description" : "This endpoint allows you to delete an attachment from a job. The attachment specificed must exist on the job to\r\nsuccessfully return.",
        "operationId" : "DeleteJobAttachment",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "job identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "A job with that id was not found",
            "content" : { }
          },
          "404" : {
            "description" : "An attachment with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v2/jobs/{jobId}/contacts" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve contacts [v2]",
        "description" : "This endpoint returns all contacts that are associated with a job.\r\nStageId and StageName refer to the stage the contact is in on that job.",
        "operationId" : "GetJobContacts_v2",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "contact identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiGetJobContact"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiGetJobContact"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "No contacts found on job",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/{jobId}/contacts" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve contacts [v1]",
        "description" : "This endpoint returns all contacts that are associated with a job.\r\nStageId and StageName refer to the stage the contact is in on that job.",
        "operationId" : "GetJobContact_v1",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "contact identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiGetJobContact"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicApiGetJobContact"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "No contacts found on job",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/{jobId}/contacts/{contactId}" : {
      "put" : {
        "tags" : [ "Jobs" ],
        "summary" : "update contact",
        "description" : "This endpoint updates the status of a contact on a job with the provided [workflow item\r\nstatus](#operation/GetWorkflowStatuses).\r\nTo partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PutJobContact",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "job identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "contactId",
          "in" : "path",
          "description" : "contact identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipWorkflowRules",
          "in" : "query",
          "description" : "skips configured workflow rules. (Default: true)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveWorkflowItemStatusRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveWorkflowItemStatusRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveWorkflowItemStatusRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A contact with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "post" : {
        "tags" : [ "Jobs" ],
        "summary" : "create contact",
        "description" : "This endpoint adds a contact to a job with the provided [workflow item status](#operation/GetWorkflowStatuses).",
        "operationId" : "PostJobContact",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "contactId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveWorkflowItemStatusRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveWorkflowItemStatusRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveWorkflowItemStatusRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A contact with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Jobs" ],
        "summary" : "delete contact",
        "description" : "This endpoint deletes a contact from a job. This merely removes the association between the contact and the job.\r\nIt does **not** delete the contact or the job.",
        "operationId" : "DeleteContactFromJob",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "contactId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A contact with that id was not found on the specified job",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/{jobId}/contacts/recent" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve recent contacts",
        "description" : "This endpoint retrieves a list of contacts added or modified for the given job within a provided minute based time frame.\r\nA paginated list of contact will be returned to you with a maximum of 500 jobs per request. If no take is\r\nspecified, 50 will be returned.\r\nFor Example: To return all contacts contacts added or modified for the given job within the last hour, set modified=60",
        "operationId" : "GetRecentJobContacts",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "modified",
          "in" : "query",
          "description" : "modified within x number of minutes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobContactsResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobContactsResponseList"
                }
              }
            }
          },
          "404" : {
            "description" : "No contacts found on job",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/{jobId}/notes" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve notes",
        "description" : "This endpoint returns all notes for a particular job. The notes returned are ordered by most recent first.\r\nA paginated list of notes will be returned to you with a maximum of 500 notes per request. If no take is\r\nspecified, 50 will be returned.",
        "operationId" : "GetAllJobNotes",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Jobs" ],
        "summary" : "create note",
        "description" : "This endpoint adds a note activity to a particular job.",
        "operationId" : "PostJobNote",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A job with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/jobs/{jobId}/notes/{noteId}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve note",
        "description" : "This endpoint returns a specific note on a job.",
        "operationId" : "GetJobNote",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "A note with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Jobs" ],
        "summary" : "update note",
        "description" : "This endpoint updates an existing note on a job.\r\nTo partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PutJobNote",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A note with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Jobs" ],
        "summary" : "delete note",
        "description" : "This endpoint deletes a note that is on a job.",
        "operationId" : "DeleteJobNote",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A note with that id was not found on the specified job.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/{jobId}/placements" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve placements",
        "description" : "This endpoint returns all placements associated with a job.\r\n_Please Note:_ TimeToFill is the amount of **days** it took to fill the position.",
        "operationId" : "GetJobPlacements",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "id for job",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiPlacementResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiPlacementResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "404" : {
            "description" : "A job with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/{jobId}/tasks" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve tasks",
        "description" : "This endpoint returns all tasks for a particular job. The tasks returned are ordered by due date descending.\r\nA paginated list of tasks will be returned to you with a maximum of 500 tasks per request. If no take is\r\nspecified, 50 will be returned.",
        "operationId" : "GetAllJobTasks",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetTaskResponseList"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetTaskResponseList"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "post" : {
        "tags" : [ "Jobs" ],
        "summary" : "create task",
        "description" : "This endpoint creates a task that is regarding the specified job",
        "operationId" : "PostJobTask",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A job with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/jobs/{jobId}/tasks/{taskId}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve task",
        "description" : "This endpoint returns a task that is regarding the specified job",
        "operationId" : "GetJobTask",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A task with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Jobs" ],
        "summary" : "update task",
        "description" : "This endpoint updates an existing task for the specified job.\r\nTo partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PutJobTask",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Malformed request",
            "content" : { }
          },
          "404" : {
            "description" : "A task with thatid was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Jobs" ],
        "summary" : "delete task",
        "description" : "This endpoint deletes a task that is regarding a particular job",
        "operationId" : "DeleteJobTask",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A task with that id was not found on the specified job",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/applications/approve" : {
      "put" : {
        "tags" : [ "Jobs" ],
        "summary" : "approve application",
        "description" : "This endpoint will approve an application. In order to successfully make the request, provide a request object\r\nthat contains: <br />\r\n### Request Object\r\n- ApplicationId: the id of the application to approve  <br /><br />\r\n- MatchedContactId: (optional) the id of an already existing contact that this application is a match of. This\r\nwill merge this application with that contact. <br /><br />\r\n- IgnorePossibleMatches: (optional - defaults to false) a boolean that, if set to true, will ignore matches,\r\ncreate a new contact, and block it. Or if set to false, will look for matches and require MatchedContactId to be\r\nprovided if there is a match. <br /><br />\r\n- Note: a note to be added to the contact when they are approved, may be required depending on your Crelate\r\nsettings\r\n### BadRequest - 400\r\nIf the request is poorly formed, a 400 status code and a detailed response will be provided indicating the problem\r\nand the steps to resolve it.\r\nBad Request Response:\r\n- Message: A string that explains in human readable language why the request was rejected\r\n- ContactMatches: A list of matches that the system found. Use this to provide a MatchedContactId. If the\r\nMatchedContactId provided in the request is not in this list, the request will be rejected (error code 4001)\r\n- FailureCode: An integer that is one of several possible values:\r\n- 4001 = BadContactMatchId (the application has possible matched, a MatchedContactId is required or set\r\nIgnorePossibleMatches to true)\r\n- 4002 = ContactMatchIdRequired (a match was found but not MatchedContactId was provided)\r\n- 4004 = NullApplicationId (an application id was not provided in the request)\r\n- 4005 = ApplicationIsNotNew (the application has already been approved, rejected, or marked as spam)\r\n- 4006 = ActivityNoteRequired (provide a note in Note)",
        "operationId" : "ApproveJobApplication",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "approve application request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApproveApplicantWorkflowAction"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApproveApplicantWorkflowAction"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApproveApplicantWorkflowAction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiApplicationResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiApplicationResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/jobs/applications/reject" : {
      "put" : {
        "tags" : [ "Jobs" ],
        "summary" : "reject application",
        "description" : "This endpoint will reject an application. In order to successfully make the request, provide a request object that\r\ncontains: <br />\r\n### Request Object\r\n- ApplicationId: the id of the application to reject  <br /><br />\r\n- MatchedContactId: (optional) the id of an already existing contact that this application is a match of. This\r\nwill merge this application with that contact. <br /><br />\r\n- IgnorePossibleMatches: (optional - defaults to false) a boolean that, if set to true, will ignore matches,\r\ncreate a new contact, and block it. Or if set to false, will look for matches and require MatchedContactId to be\r\nprovided if there is a match. <br /><br />\r\n- PassReasonNote: a note to be added to the contact when they are passed, may be required depending on your\r\nCrelate settings\r\n- PassReasonId: an identifier for a pass reason, this may be required depending on your Crelate settings. To get a\r\nlist, please GET /domain/eeocpassreasons\r\n### BadRequest - 400\r\nIf the request is poorly formed, a 400 status code and a detailed response will be provided indicating the problem\r\nand the steps to resolve it.\r\nBad Request Response:\r\n- Message: A string that explains in human readable language why the request was rejected\r\n- ContactMatches: A list of matches that the system found. Use this to provide a MatchedContactId. If the\r\nMatchedContactId provided in the request is not in this list, the request will be rejected (error code 4001)\r\n- FailureCode: An integer that is one of several possible values:\r\n- 4001 = BadContactMatchId(the application has possible matched, a MatchedContactId is required or set\r\nIgnorePossibleMatches to true)\r\n- 4002 = ContactMatchIdRequired  (a match was found but not MatchedContactId was provided)\r\n- 4003 = PassReasonRequired (A pass reason is required to reject a candidate, please provide a pass reason in\r\nPassReasonId, can be found at /domain/eeocpassreasons)\r\n- 4004 = NullApplicationId (an application id was not provided in the request)\r\n- 4005 = ApplicationIsNotNew (the application has already been approved, rejected, or marked as spam)\r\n-\t4006 = ActivityNoteRequired (provide a note in PassReasonNote)",
        "operationId" : "RejectJobApplication",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "reject application request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RejectApplicantWorkflowAction"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RejectApplicantWorkflowAction"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/RejectApplicantWorkflowAction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiApplicationResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiApplicationResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/jobs/applications/spam" : {
      "put" : {
        "tags" : [ "Jobs" ],
        "summary" : "mark application as spam",
        "description" : "This endpoint will mark an application as spam and blocks the applicant. When a contact is blocked, they are no\r\nlonger visible and any future applications from that contact will be ignored. In order to successfully make the\r\nrequest, provide a request object that contains: <br />\r\n### Request Object\r\n- ApplicationId: the id of the application to mark as spam  <br /><br />\r\n- MatchedContactId: (optional) the id of an already existing contact that this application is a match of. This\r\nwill merge this application with that contact and block it. <br /><br />\r\n- IgnorePossibleMatches: (optional - defaults to false) a boolean that, if set to true, will ignore matches,\r\ncreate a new contact, and block it. Or if set to false, will look for matches and require MatchedContactId to be\r\nprovided if there is a match. <br /><br />\r\n### BadRequest - 400\r\nIf the request is poorly formed, a 400 status code and a detailed response will be provided indicating the problem\r\nand the steps to resolve it.\r\nBad Request Response:\r\n- Message: A string that explains in human readable language why the request was rejected\r\n- ContactMatches: A list of matches that the system found. Use this to provide a MatchedContactId. If the\r\nMatchedContactId provided in the request is not in this list, the request will be rejected (error code 4001)\r\n- FailureCode: An integer that is one of several possible values:\r\n- 4001 = BadContactMatchId (the application has possible matched, a MatchedContactId is required or set\r\nIgnorePossibleMatches to true)\r\n- 4002 = ContactMatchIdRequired  (a match was found but not MatchedContactId was provided)\r\n- 4004 = NullApplicationId (an application id was not provided in the request)\r\n- 4005 = ApplicationIsNotNew  (the application has already been approved, rejected, or marked as spam)",
        "operationId" : "BlockJobApplication",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "block application request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicantWorkflowAction"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicantWorkflowAction"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicantWorkflowAction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiApplicationResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiApplicationResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/jobs/lists/{listId}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve jobs by list id",
        "description" : "This endpoint retrieves a list of jobs belonging to a specific list id provided.\r\nA paginated list of contact will be returned to you with a maximum of 500 jobs per request. If no take is\r\nspecified, 50 will be returned. You can retrieve a list of all job list ids and names from [this endpoint.](#operation/GetJobLists)",
        "operationId" : "GetJobsByList",
        "parameters" : [ {
          "name" : "listId",
          "in" : "path",
          "description" : "guid of the list id containing jobs",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobListResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobListResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No jobs found.",
            "content" : { }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/jobs/recent" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "retrieve recent jobs",
        "description" : "This endpoint retrieves a list of jobs created or updated within a provided minute based time frame.\r\nYou may optionally specify a status id or name in order to retrieve all jobs with a particular status. [See what\r\nstatuses are available in your account.](#operation/WorkflowStatuses)\r\nA paginated list of jobs will be returned to you with a maximum of 500 jobs per request. If no take is specified,\r\n50 will be returned.\r\nFor Example: To return all jobs updated or created within the last hour, set modified=60",
        "operationId" : "GetRecentJobs",
        "parameters" : [ {
          "name" : "modified",
          "in" : "query",
          "description" : "modified within x number of minutes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "skip number of records, default 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "retrieve x amount of records, limit 500, default 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "salesWorkflowItemStatusId",
          "in" : "query",
          "description" : "id of sales workflow item status",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "workflowName",
          "in" : "query",
          "description" : "name of sales workflow item status",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobListResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetJobListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "More than 500 records were requested.",
            "content" : { }
          },
          "404" : {
            "description" : "WorkflowName was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/notes" : {
      "post" : {
        "tags" : [ "Notes" ],
        "summary" : "create note",
        "description" : "The create a note endpoint is used to create a note that is not attached to a Contact, Job, or Company. The new\r\nnote will be assigned an Id, which is returned, and can be used to retrieve the note at a later time.\r\nYou can also attach a note to a [Contact](#operation/PostContactNote), [Job](#operation/PostJobNote), or\r\n[Company](#operation/PostCompanyNote).",
        "operationId" : "PostNote",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The request was poorly formed.",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/notes/{noteId}" : {
      "get" : {
        "tags" : [ "Notes" ],
        "summary" : "retrieve note",
        "description" : "This endpoint retrieves a note by its identifier.",
        "operationId" : "GetNote",
        "parameters" : [ {
          "name" : "noteId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetNoteResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "A note with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Notes" ],
        "summary" : "update note",
        "description" : "To partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PutNote",
        "parameters" : [ {
          "name" : "noteId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "The request was poorly formed.",
            "content" : { }
          },
          "404" : {
            "description" : "A note with that id was not found",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Notes" ],
        "summary" : "delete note",
        "description" : "Deletes an existing note from Crelate.",
        "operationId" : "DeleteNote",
        "parameters" : [ {
          "name" : "noteId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "404" : {
            "description" : "A note with that id was not found.",
            "content" : { }
          },
          "500" : {
            "description" : "InternalServerError",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/tasks" : {
      "post" : {
        "tags" : [ "Tasks" ],
        "summary" : "create task",
        "operationId" : "PublicApiV1_PostTask",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK (success)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      }
    },
    "/api/pub/v1/tasks/{taskId}" : {
      "get" : {
        "tags" : [ "Tasks" ],
        "summary" : "retrieve task",
        "operationId" : "PublicApiV1_GetTask",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK (success)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetTaskResponse"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicApiGetTaskResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Tasks" ],
        "summary" : "update task",
        "description" : "To partially update a record, only pass in the fields that you'd like to update.",
        "operationId" : "PublicApiV1_PutTask",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicApiSaveTaskRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK (success)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "request"
      },
      "delete" : {
        "tags" : [ "Tasks" ],
        "summary" : "delete task",
        "operationId" : "PublicApiV1_DeleteTask",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api_key",
          "in" : "query",
          "description" : "crelate api key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK (success)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : { }
          }
        }
      }
    },
    "/api/pub/v1/timetypes" : {
      "post" : {
        "tags" : [ "Time Types" ],
        "summary" : "Create",
        "description" : "Creates a new type.",
        "operationId" : "Create Time Types",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "entity"
      }
    },
    "/api/pub/v1/timetypes/{deliveryTypeId}/claimed" : {
      "get" : {
        "tags" : [ "Time Types" ],
        "summary" : "Is Claimed",
        "description" : "Determines if the type is claimed for a certain scenario. \r\n\r\nUsed to check if claimed by an employee, a pay period, an assignment, and/or a job.",
        "operationId" : "Retrieve Is Claimed Time Types",
        "parameters" : [ {
          "name" : "deliveryTypeId",
          "in" : "path",
          "description" : "Id of a Delivery Type to check if it is claimed",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "employeeId",
          "in" : "query",
          "description" : "Id of an employee to check if it is claimed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "payperiodId",
          "in" : "query",
          "description" : "Id of an Pay Period to check if it is claimed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "assignmentId",
          "in" : "query",
          "description" : "Id of an Assignement to check if it is claimed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "jobId",
          "in" : "query",
          "description" : "Id of an Job to check if it is claimed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/timetypes/{id}" : {
      "get" : {
        "tags" : [ "Time Types" ],
        "summary" : "Retrieve",
        "description" : "Retrieves the specified type.",
        "operationId" : "Retrieve Time Types",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object",
                    "properties" : { }
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object",
                    "properties" : { }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Types" ],
        "summary" : "Update",
        "description" : "Updates the specified type.",
        "operationId" : "Update Time Types",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "entity"
      },
      "delete" : {
        "tags" : [ "Time Types" ],
        "summary" : "Delete",
        "description" : "Deletes the specified type.",
        "operationId" : "Delete Time Types",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/timetypes/{id}/children/meanings" : {
      "post" : {
        "tags" : [ "Time Types" ],
        "summary" : "Update the Children Type Meanings",
        "description" : "Updates the meanings for the Child Types.",
        "operationId" : "Update the Children Type Meanings Time Types",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityLookup"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityLookup"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityLookup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "500" : {
            "description" : "Argument out of range",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "meaningId"
      }
    },
    "/api/pub/v1/timetypes/{id}/enable" : {
      "post" : {
        "tags" : [ "Time Types" ],
        "summary" : "Enable",
        "description" : "Enables the delivery type.",
        "operationId" : "Enable Time Types",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/timetypes/{typeId}/available" : {
      "get" : {
        "tags" : [ "Time Types" ],
        "summary" : "Retrieve Placements With Access",
        "description" : "Retrieves all of the delivery type information of the specified Placement.",
        "operationId" : "Retrieve Placements With Access Time Types",
        "parameters" : [ {
          "name" : "typeId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "payPeriodId",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "employeeId",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "includeClaimed",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeliveryAssignmentInfo"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeliveryAssignmentInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/timetypes/available" : {
      "get" : {
        "tags" : [ "Time Types" ],
        "summary" : "Retrieve Available Delivery Types",
        "description" : "Gets a list of available delivery types information that are on the assignement.",
        "operationId" : "Retrieve Available By Assignments Time Types",
        "parameters" : [ {
          "name" : "payPeriodId",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "employeeId",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "includeClaimed",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssignmentDeliveryTypes"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssignmentDeliveryTypes"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/timetypes/available/assignment/{assignmentId}" : {
      "get" : {
        "tags" : [ "Time Types" ],
        "summary" : "Retrieve Available Delivery Types",
        "description" : "Gets a list of available delivery types information that are on the assignement.",
        "operationId" : "Retrieve Available Delivery Types Time Types",
        "parameters" : [ {
          "name" : "assignmentId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "payPeriodId",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "includeClaimed",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssignmentDeliveryTypeInfo"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssignmentDeliveryTypeInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/pub/v1/timetypes/duplicatecheck" : {
      "post" : {
        "tags" : [ "Time Types" ],
        "summary" : "Is Duplicate Name",
        "description" : "Checks the name of the delivery type to ensure it isn't a duplicate name.",
        "operationId" : "Is Duplicate Name Time Types",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "entity"
      }
    },
    "/api/pub/v1/timetypes/ensure" : {
      "post" : {
        "tags" : [ "Time Types" ],
        "summary" : "Ensure",
        "description" : "Ensures the specified type.",
        "operationId" : "Ensure Time Types",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "entity"
      }
    }
  },
  "components" : {
    "schemas" : {
      "PublicApiGetActivitiesResponseList" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetActivityResponse"
            }
          }
        }
      },
      "PublicApiGetActivityResponse" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ActivityType_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ActivityType_Name" : {
            "type" : "string"
          },
          "AllDay" : {
            "type" : "boolean"
          },
          "Announced" : {
            "type" : "boolean"
          },
          "Attachment_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Attendees" : {
            "type" : "string"
          },
          "BCC" : {
            "type" : "string"
          },
          "CC" : {
            "type" : "string"
          },
          "ChildExperienceCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Completed" : {
            "type" : "boolean"
          },
          "CompletedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CreatedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CreatedBy_Name" : {
            "type" : "string"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Body" : {
            "type" : "string"
          },
          "AttachmentType_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AttachmentType_Name" : {
            "type" : "string"
          },
          "DueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Email_AlternateAttachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiLookupResponse"
            }
          },
          "Email_AlternateHtml" : {
            "type" : "string"
          },
          "Email_Attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiLookupResponse"
            }
          },
          "Email_FlagReason" : {
            "type" : "string"
          },
          "Email_Importance" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Email_RawHeader" : {
            "type" : "string"
          },
          "EmailStatus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "Form_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "From" : {
            "type" : "string"
          },
          "HasAlternateEmail" : {
            "type" : "boolean"
          },
          "Html" : {
            "type" : "string"
          },
          "Import_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "IsCallCompleted" : {
            "type" : "boolean"
          },
          "IsEngagement" : {
            "type" : "boolean"
          },
          "IsInvite" : {
            "type" : "boolean"
          },
          "IsReachOut" : {
            "type" : "boolean"
          },
          "Location" : {
            "type" : "string"
          },
          "Modified_On" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ModifiedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Name" : {
            "type" : "string"
          },
          "Owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiRecordOwner"
            }
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Parent_Name" : {
            "type" : "string"
          },
          "ParentActivity_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Pinned" : {
            "type" : "boolean"
          },
          "Rating" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Regarding_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Regarding_Name" : {
            "type" : "string"
          },
          "Subject" : {
            "type" : "string"
          },
          "Timezone" : {
            "$ref" : "#/components/schemas/PublicApiLookupResponse"
          },
          "To" : {
            "type" : "string"
          },
          "When" : {
            "type" : "string",
            "format" : "date-time"
          },
          "WhenEnd" : {
            "type" : "string",
            "format" : "date-time"
          },
          "WhenOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "WhoAttendeeIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiLookupResponse"
            }
          }
        }
      },
      "PublicApiLookupResponse" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "PublicApiRecordOwner" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "IsPrimary" : {
            "type" : "boolean"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "PublicApiGetApplicationResponseList" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetApplicationResponse"
            }
          }
        }
      },
      "PublicApiGetApplicationResponse" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Source_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Source_Name" : {
            "type" : "string"
          },
          "PrimaryDocumentAttachment_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PrimaryDocumentAttachment_Name" : {
            "type" : "string"
          },
          "Owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiRecordOwner"
            }
          },
          "Name" : {
            "type" : "string"
          },
          "NickName" : {
            "type" : "string"
          },
          "FirstName" : {
            "type" : "string"
          },
          "FirstName_Parsed" : {
            "type" : "string"
          },
          "MiddleName" : {
            "type" : "string"
          },
          "LastName" : {
            "type" : "string"
          },
          "LastName_Parsed" : {
            "type" : "string"
          },
          "Email_Parsed" : {
            "type" : "string"
          },
          "PhoneNumber_Parsed" : {
            "type" : "string"
          },
          "City_Parsed" : {
            "type" : "string"
          },
          "State_Parsed" : {
            "type" : "string"
          },
          "ZipCode_Parsed" : {
            "type" : "string"
          },
          "Status_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Status_Name" : {
            "type" : "string"
          },
          "Contact_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Contact_Name" : {
            "type" : "string"
          },
          "Job_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Job_Name" : {
            "type" : "string"
          },
          "ContactSource_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ContactSource_Title" : {
            "type" : "string"
          },
          "RawHttpReferer" : {
            "type" : "string"
          },
          "Form_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Form_Name" : {
            "type" : "string"
          },
          "JobTitle" : {
            "type" : "string"
          },
          "CurrentCompany_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CurrentCompany_Name" : {
            "type" : "string"
          },
          "Address_Business_City" : {
            "type" : "string"
          },
          "Address_Business_Country" : {
            "type" : "string"
          },
          "Address_Business_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Business_Line1" : {
            "type" : "string"
          },
          "Address_Business_State" : {
            "type" : "string"
          },
          "Address_Business_ZipCode" : {
            "type" : "string"
          },
          "Address_Home_City" : {
            "type" : "string"
          },
          "Address_Home_Country" : {
            "type" : "string"
          },
          "Address_Home_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Home_Line1" : {
            "type" : "string"
          },
          "Address_Home_State" : {
            "type" : "string"
          },
          "Address_Home_ZipCode" : {
            "type" : "string"
          },
          "Address_Other_City" : {
            "type" : "string"
          },
          "Address_Other_Country" : {
            "type" : "string"
          },
          "Address_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Other_Line1" : {
            "type" : "string"
          },
          "Address_Other_State" : {
            "type" : "string"
          },
          "Address_Other_ZipCode" : {
            "type" : "string"
          },
          "EmailAddress_Other" : {
            "type" : "string"
          },
          "EmailAddress_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "EmailAddress_Personal" : {
            "type" : "string"
          },
          "EmailAddress_Personal_IsPrimary" : {
            "type" : "boolean"
          },
          "EmailAddress_Work" : {
            "type" : "string"
          },
          "EmailAddress_Work_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Fax" : {
            "type" : "string"
          },
          "PhoneNumber_Fax_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Fax_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Home" : {
            "type" : "string"
          },
          "PhoneNumber_Home_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Home_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Mobile" : {
            "type" : "string"
          },
          "PhoneNumber_Mobile_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Mobile_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Other" : {
            "type" : "string"
          },
          "PhoneNumber_Other_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Skype" : {
            "type" : "string"
          },
          "PhoneNumber_Skype_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Skype_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_WorkDirect" : {
            "type" : "string"
          },
          "PhoneNumber_WorkDirect_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_WorkDirect_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_WorkMain" : {
            "type" : "string"
          },
          "PhoneNumber_WorkMain_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_WorkMain_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Blog" : {
            "type" : "string"
          },
          "Website_Blog_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Business" : {
            "type" : "string"
          },
          "Website_Business_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Facebook" : {
            "type" : "string"
          },
          "Website_Facebook_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_LinkedIn" : {
            "type" : "string"
          },
          "Website_LinkedIn_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Other" : {
            "type" : "string"
          },
          "Website_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Personal" : {
            "type" : "string"
          },
          "Website_Personal_IsPrimary" : {
            "type" : "boolean"
          }
        }
      },
      "StreamContent" : {
        "type" : "object",
        "properties" : {
          "Headers" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/KeyValuePair[String,IEnumerable[String]]"
            }
          }
        }
      },
      "KeyValuePair[String,IEnumerable[String]]" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ApproveApplicantWorkflowAction" : {
        "required" : [ "ApplicationId" ],
        "type" : "object",
        "properties" : {
          "Note" : {
            "type" : "string"
          },
          "ApplicationId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "MatchedContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "IgnorePossibleMatches" : {
            "type" : "boolean"
          }
        }
      },
      "ApiApplicationResponse" : {
        "type" : "object",
        "properties" : {
          "ContactMatches" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetContactResponse"
            }
          },
          "FailureCode" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 4001, 4002, 4003, 4004, 4005, 4006 ]
          },
          "Message" : {
            "type" : "string"
          }
        }
      },
      "PublicApiGetContactResponse" : {
        "type" : "object",
        "properties" : {
          "Attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiAttachmentResponse"
            }
          },
          "CreatedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CreatedBy_Name" : {
            "type" : "string"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Name" : {
            "type" : "string"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Name" : {
            "type" : "string"
          },
          "Status_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Status_Name" : {
            "type" : "string"
          },
          "Record_Status_Value" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Record_Status_Name" : {
            "type" : "string"
          },
          "Address_Business_City" : {
            "type" : "string"
          },
          "Address_Business_Country" : {
            "type" : "string"
          },
          "Address_Business_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Business_Line1" : {
            "type" : "string"
          },
          "Address_Business_State" : {
            "type" : "string"
          },
          "Address_Business_ZipCode" : {
            "type" : "string"
          },
          "Address_Home_City" : {
            "type" : "string"
          },
          "Address_Home_Country" : {
            "type" : "string"
          },
          "Address_Home_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Home_Line1" : {
            "type" : "string"
          },
          "Address_Home_State" : {
            "type" : "string"
          },
          "Address_Home_ZipCode" : {
            "type" : "string"
          },
          "Address_Other_City" : {
            "type" : "string"
          },
          "Address_Other_Country" : {
            "type" : "string"
          },
          "Address_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Other_Line1" : {
            "type" : "string"
          },
          "Address_Other_State" : {
            "type" : "string"
          },
          "Address_Other_ZipCode" : {
            "type" : "string"
          },
          "CurrentPosition_Company_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CurrentPosition_Company_Name" : {
            "type" : "string"
          },
          "CurrentPosition_Title" : {
            "type" : "string"
          },
          "CurrentPosition_WhenEnd" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CurrentPosition_WhenStart" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField1" : {
            "type" : "string"
          },
          "CustomField10" : {
            "type" : "string"
          },
          "CustomField11" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField12" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField13" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField14" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField15" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField16" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField17" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField18" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField19" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField2" : {
            "type" : "string"
          },
          "CustomField20" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField21" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField22" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField23" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField24" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField25" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField26" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField27" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField28" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField29" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField3" : {
            "type" : "string"
          },
          "CustomField30" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField31" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField32" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField33" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField34" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField35" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField36" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField37" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField38" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField39" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField4" : {
            "type" : "string"
          },
          "CustomField40" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField41" : {
            "type" : "string"
          },
          "CustomField42" : {
            "type" : "string"
          },
          "CustomField43" : {
            "type" : "string"
          },
          "CustomField44" : {
            "type" : "string"
          },
          "CustomField45" : {
            "type" : "string"
          },
          "CustomField46" : {
            "type" : "string"
          },
          "CustomField47" : {
            "type" : "string"
          },
          "CustomField48" : {
            "type" : "string"
          },
          "CustomField49" : {
            "type" : "string"
          },
          "CustomField5" : {
            "type" : "string"
          },
          "CustomField50" : {
            "type" : "string"
          },
          "CustomField51" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField52" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField53" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField54" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField55" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField56" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField57" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField58" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField59" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField6" : {
            "type" : "string"
          },
          "CustomField60" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField61" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField62" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField63" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField64" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField65" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField66" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField67" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField68" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField69" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField7" : {
            "type" : "string"
          },
          "CustomField70" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField71" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField72" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField73" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField74" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField75" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField76" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField77" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField78" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField79" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField8" : {
            "type" : "string"
          },
          "CustomField80" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField9" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "Education_Accreditation_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Education_Accreditation_Name" : {
            "type" : "string"
          },
          "Education_Honors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "Education_Institution_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Education_Institution_Name" : {
            "type" : "string"
          },
          "Education_WhenEnd" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Education_WhenStart" : {
            "type" : "string",
            "format" : "date-time"
          },
          "EmailAddress_Other" : {
            "type" : "string"
          },
          "EmailAddress_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "EmailAddress_Personal" : {
            "type" : "string"
          },
          "EmailAddress_Personal_IsPrimary" : {
            "type" : "boolean"
          },
          "EmailAddress_Work" : {
            "type" : "string"
          },
          "EmailAddress_Work_IsPrimary" : {
            "type" : "boolean"
          },
          "Ethnicity_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Ethnicity_Name" : {
            "type" : "string"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "FirstName" : {
            "type" : "string"
          },
          "Gender_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Gender_Name" : {
            "type" : "string"
          },
          "KeyDate_Anniversary" : {
            "type" : "string",
            "format" : "date-time"
          },
          "KeyDate_Birthday" : {
            "type" : "string",
            "format" : "date-time"
          },
          "KeyDate_Other" : {
            "type" : "string",
            "format" : "date-time"
          },
          "LastName" : {
            "type" : "string"
          },
          "MiddleName" : {
            "type" : "string"
          },
          "NickName" : {
            "type" : "string"
          },
          "Owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiRecordOwner"
            }
          },
          "PhoneNumber_Fax" : {
            "type" : "string"
          },
          "PhoneNumber_Fax_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Fax_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Home" : {
            "type" : "string"
          },
          "PhoneNumber_Home_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Home_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Mobile" : {
            "type" : "string"
          },
          "PhoneNumber_Mobile_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Mobile_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Other" : {
            "type" : "string"
          },
          "PhoneNumber_Other_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Skype" : {
            "type" : "string"
          },
          "PhoneNumber_Skype_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Skype_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_WorkDirect" : {
            "type" : "string"
          },
          "PhoneNumber_WorkDirect_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_WorkDirect_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_WorkMain" : {
            "type" : "string"
          },
          "PhoneNumber_WorkMain_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_WorkMain_IsPrimary" : {
            "type" : "boolean"
          },
          "PreferredContactMethodType_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PreferredContactMethodType_Name" : {
            "type" : "string"
          },
          "RecordType" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "RelatedContact_Assistant_FirstName" : {
            "type" : "string"
          },
          "RelatedContact_Assistant_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "RelatedContact_Assistant_IsPrimary" : {
            "type" : "boolean"
          },
          "RelatedContact_Assistant_LastName" : {
            "type" : "string"
          },
          "RelatedContact_Other_FirstName" : {
            "type" : "string"
          },
          "RelatedContact_Other_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "RelatedContact_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "RelatedContact_Other_LastName" : {
            "type" : "string"
          },
          "RelatedContact_ReferredBy_FirstName" : {
            "type" : "string"
          },
          "RelatedContact_ReferredBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "RelatedContact_ReferredBy_IsPrimary" : {
            "type" : "boolean"
          },
          "RelatedContact_ReferredBy_LastName" : {
            "type" : "string"
          },
          "RelatedContact_Spouse_FirstName" : {
            "type" : "string"
          },
          "RelatedContact_Spouse_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "RelatedContact_Spouse_IsPrimary" : {
            "type" : "boolean"
          },
          "RelatedContact_Spouse_LastName" : {
            "type" : "string"
          },
          "Salary" : {
            "type" : "number",
            "format" : "double"
          },
          "SalaryDetails" : {
            "type" : "string"
          },
          "Salutation_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Salutation_Name" : {
            "type" : "string"
          },
          "Social_AIM" : {
            "type" : "string"
          },
          "Social_AIM_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_FacebookChat" : {
            "type" : "string"
          },
          "Social_FacebookChat_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_FaceTime" : {
            "type" : "string"
          },
          "Social_FaceTime_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_GoogleTalk" : {
            "type" : "string"
          },
          "Social_GoogleTalk_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_ICQ" : {
            "type" : "string"
          },
          "Social_ICQ_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_Other" : {
            "type" : "string"
          },
          "Social_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_Skype" : {
            "type" : "string"
          },
          "Social_Skype_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_Twitter" : {
            "type" : "string"
          },
          "Social_Twitter_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_YahooMsg" : {
            "type" : "string"
          },
          "Social_YahooMsg_IsPrimary" : {
            "type" : "boolean"
          },
          "Source_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Source_Name" : {
            "type" : "string"
          },
          "Suffix_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Suffix_Name" : {
            "type" : "string"
          },
          "Tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "Website_Blog" : {
            "type" : "string"
          },
          "Website_Blog_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Business" : {
            "type" : "string"
          },
          "Website_Business_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Facebook" : {
            "type" : "string"
          },
          "Website_Facebook_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_LinkedIn" : {
            "type" : "string"
          },
          "Website_LinkedIn_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Other" : {
            "type" : "string"
          },
          "Website_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Personal" : {
            "type" : "string"
          },
          "Website_Personal_IsPrimary" : {
            "type" : "boolean"
          }
        }
      },
      "PublicApiAttachmentResponse" : {
        "type" : "object",
        "properties" : {
          "ContentLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ContentType" : {
            "type" : "string"
          },
          "CreatedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CreatedBy_Name" : {
            "type" : "string"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "FileName" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Name" : {
            "type" : "string"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Type_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Type_Name" : {
            "type" : "string"
          }
        }
      },
      "PublicApiPicklistValue" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "RejectApplicantWorkflowAction" : {
        "required" : [ "ApplicationId" ],
        "type" : "object",
        "properties" : {
          "PassReasonId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PassReasonNote" : {
            "type" : "string"
          },
          "ApplicationId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "MatchedContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "IgnorePossibleMatches" : {
            "type" : "boolean"
          }
        }
      },
      "ApplicantWorkflowAction" : {
        "required" : [ "ApplicationId" ],
        "type" : "object",
        "properties" : {
          "ApplicationId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "MatchedContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "IgnorePossibleMatches" : {
            "type" : "boolean"
          }
        }
      },
      "PublicApiSaveAccountRequest" : {
        "type" : "object",
        "properties" : {
          "AdditionalContact_Billing_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_Billing_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_Billing_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_Billing_LastName" : {
            "type" : "string"
          },
          "AdditionalContact_Other_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_Other_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_Other_LastName" : {
            "type" : "string"
          },
          "Address_Business_City" : {
            "type" : "string"
          },
          "Address_Business_Country" : {
            "type" : "string"
          },
          "Address_Business_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Business_Line1" : {
            "type" : "string"
          },
          "Address_Business_State" : {
            "type" : "string"
          },
          "Address_Business_ZipCode" : {
            "type" : "string"
          },
          "Address_Headquarters_City" : {
            "type" : "string"
          },
          "Address_Headquarters_Country" : {
            "type" : "string"
          },
          "Address_Headquarters_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Headquarters_Line1" : {
            "type" : "string"
          },
          "Address_Headquarters_State" : {
            "type" : "string"
          },
          "Address_Headquarters_ZipCode" : {
            "type" : "string"
          },
          "Address_Other_City" : {
            "type" : "string"
          },
          "Address_Other_Country" : {
            "type" : "string"
          },
          "Address_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Other_Line1" : {
            "type" : "string"
          },
          "Address_Other_State" : {
            "type" : "string"
          },
          "Address_Other_ZipCode" : {
            "type" : "string"
          },
          "CustomField1" : {
            "type" : "string"
          },
          "CustomField10" : {
            "type" : "string"
          },
          "CustomField11" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField12" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField13" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField14" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField15" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField16" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField17" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField18" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField19" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField2" : {
            "type" : "string"
          },
          "CustomField20" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField21" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField22" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField23" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField24" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField25" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField26" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField27" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField28" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField29" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField3" : {
            "type" : "string"
          },
          "CustomField30" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField31" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField32" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField33" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField34" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField35" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField36" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField37" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField38" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField39" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField4" : {
            "type" : "string"
          },
          "CustomField40" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField41" : {
            "type" : "string"
          },
          "CustomField42" : {
            "type" : "string"
          },
          "CustomField43" : {
            "type" : "string"
          },
          "CustomField44" : {
            "type" : "string"
          },
          "CustomField45" : {
            "type" : "string"
          },
          "CustomField46" : {
            "type" : "string"
          },
          "CustomField47" : {
            "type" : "string"
          },
          "CustomField48" : {
            "type" : "string"
          },
          "CustomField49" : {
            "type" : "string"
          },
          "CustomField5" : {
            "type" : "string"
          },
          "CustomField50" : {
            "type" : "string"
          },
          "CustomField51" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField52" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField53" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField54" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField55" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField56" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField57" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField58" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField59" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField6" : {
            "type" : "string"
          },
          "CustomField60" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField61" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField62" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField63" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField64" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField65" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField66" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField67" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField68" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField69" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField7" : {
            "type" : "string"
          },
          "CustomField70" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField71" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField72" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField73" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField74" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField75" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField76" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField77" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField78" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField79" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField8" : {
            "type" : "string"
          },
          "CustomField80" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField9" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "EmailAddress_Other" : {
            "type" : "string"
          },
          "EmailAddress_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "EmailAddress_Sales" : {
            "type" : "string"
          },
          "EmailAddress_Sales_IsPrimary" : {
            "type" : "boolean"
          },
          "EmailAddress_Support" : {
            "type" : "string"
          },
          "EmailAddress_Support_IsPrimary" : {
            "type" : "boolean"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiRecordOwner"
            }
          },
          "ParentAccount_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ParentAccount_Name" : {
            "type" : "string"
          },
          "PhoneNumber_Fax" : {
            "type" : "string"
          },
          "PhoneNumber_Fax_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Fax_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Main" : {
            "type" : "string"
          },
          "PhoneNumber_Main_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Main_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Other" : {
            "type" : "string"
          },
          "PhoneNumber_Other_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Sales" : {
            "type" : "string"
          },
          "PhoneNumber_Sales_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Sales_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Skype" : {
            "type" : "string"
          },
          "PhoneNumber_Skype_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Skype_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Support" : {
            "type" : "string"
          },
          "PhoneNumber_Support_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Support_IsPrimary" : {
            "type" : "boolean"
          },
          "RecordType" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "Website_Blog" : {
            "type" : "string"
          },
          "Website_Blog_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Business" : {
            "type" : "string"
          },
          "Website_Business_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Facebook" : {
            "type" : "string"
          },
          "Website_Facebook_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_LinkedIn" : {
            "type" : "string"
          },
          "Website_LinkedIn_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Other" : {
            "type" : "string"
          },
          "Website_Other_IsPrimary" : {
            "type" : "boolean"
          }
        }
      },
      "PublicApiIdResponse" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "PublicApiGetAccountResponse" : {
        "type" : "object",
        "properties" : {
          "Attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiAttachmentResponse"
            }
          },
          "CreatedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CreatedBy_Name" : {
            "type" : "string"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Name" : {
            "type" : "string"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Status_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Status_Name" : {
            "type" : "string"
          },
          "Record_Status_Value" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Record_Status_Name" : {
            "type" : "string"
          },
          "AdditionalContact_Billing_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_Billing_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_Billing_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_Billing_LastName" : {
            "type" : "string"
          },
          "AdditionalContact_Other_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_Other_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_Other_LastName" : {
            "type" : "string"
          },
          "Address_Business_City" : {
            "type" : "string"
          },
          "Address_Business_Country" : {
            "type" : "string"
          },
          "Address_Business_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Business_Line1" : {
            "type" : "string"
          },
          "Address_Business_State" : {
            "type" : "string"
          },
          "Address_Business_ZipCode" : {
            "type" : "string"
          },
          "Address_Headquarters_City" : {
            "type" : "string"
          },
          "Address_Headquarters_Country" : {
            "type" : "string"
          },
          "Address_Headquarters_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Headquarters_Line1" : {
            "type" : "string"
          },
          "Address_Headquarters_State" : {
            "type" : "string"
          },
          "Address_Headquarters_ZipCode" : {
            "type" : "string"
          },
          "Address_Other_City" : {
            "type" : "string"
          },
          "Address_Other_Country" : {
            "type" : "string"
          },
          "Address_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Other_Line1" : {
            "type" : "string"
          },
          "Address_Other_State" : {
            "type" : "string"
          },
          "Address_Other_ZipCode" : {
            "type" : "string"
          },
          "CustomField1" : {
            "type" : "string"
          },
          "CustomField10" : {
            "type" : "string"
          },
          "CustomField11" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField12" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField13" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField14" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField15" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField16" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField17" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField18" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField19" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField2" : {
            "type" : "string"
          },
          "CustomField20" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField21" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField22" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField23" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField24" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField25" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField26" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField27" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField28" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField29" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField3" : {
            "type" : "string"
          },
          "CustomField30" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField31" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField32" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField33" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField34" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField35" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField36" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField37" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField38" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField39" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField4" : {
            "type" : "string"
          },
          "CustomField40" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField41" : {
            "type" : "string"
          },
          "CustomField42" : {
            "type" : "string"
          },
          "CustomField43" : {
            "type" : "string"
          },
          "CustomField44" : {
            "type" : "string"
          },
          "CustomField45" : {
            "type" : "string"
          },
          "CustomField46" : {
            "type" : "string"
          },
          "CustomField47" : {
            "type" : "string"
          },
          "CustomField48" : {
            "type" : "string"
          },
          "CustomField49" : {
            "type" : "string"
          },
          "CustomField5" : {
            "type" : "string"
          },
          "CustomField50" : {
            "type" : "string"
          },
          "CustomField51" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField52" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField53" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField54" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField55" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField56" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField57" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField58" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField59" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField6" : {
            "type" : "string"
          },
          "CustomField60" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField61" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField62" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField63" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField64" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField65" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField66" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField67" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField68" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField69" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField7" : {
            "type" : "string"
          },
          "CustomField70" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField71" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField72" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField73" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField74" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField75" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField76" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField77" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField78" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField79" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField8" : {
            "type" : "string"
          },
          "CustomField80" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField9" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "EmailAddress_Other" : {
            "type" : "string"
          },
          "EmailAddress_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "EmailAddress_Sales" : {
            "type" : "string"
          },
          "EmailAddress_Sales_IsPrimary" : {
            "type" : "boolean"
          },
          "EmailAddress_Support" : {
            "type" : "string"
          },
          "EmailAddress_Support_IsPrimary" : {
            "type" : "boolean"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiRecordOwner"
            }
          },
          "ParentAccount_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ParentAccount_Name" : {
            "type" : "string"
          },
          "PhoneNumber_Fax" : {
            "type" : "string"
          },
          "PhoneNumber_Fax_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Fax_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Main" : {
            "type" : "string"
          },
          "PhoneNumber_Main_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Main_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Other" : {
            "type" : "string"
          },
          "PhoneNumber_Other_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Sales" : {
            "type" : "string"
          },
          "PhoneNumber_Sales_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Sales_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Skype" : {
            "type" : "string"
          },
          "PhoneNumber_Skype_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Skype_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Support" : {
            "type" : "string"
          },
          "PhoneNumber_Support_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Support_IsPrimary" : {
            "type" : "boolean"
          },
          "RecordType" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "Website_Blog" : {
            "type" : "string"
          },
          "Website_Blog_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Business" : {
            "type" : "string"
          },
          "Website_Business_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Facebook" : {
            "type" : "string"
          },
          "Website_Facebook_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_LinkedIn" : {
            "type" : "string"
          },
          "Website_LinkedIn_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Other" : {
            "type" : "string"
          },
          "Website_Other_IsPrimary" : {
            "type" : "boolean"
          }
        }
      },
      "PublicApiAttachmentResponseList" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiAttachmentResponse"
            }
          }
        }
      },
      "PublicApiSaveAttachmentRequest" : {
        "type" : "object",
        "properties" : {
          "Content" : {
            "type" : "string"
          },
          "DocumentType" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "FileName" : {
            "type" : "string"
          },
          "IsResume" : {
            "type" : "boolean"
          }
        }
      },
      "PublicApiGetNoteResponseList" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetNoteResponse"
            }
          }
        }
      },
      "PublicApiGetNoteResponse" : {
        "type" : "object",
        "properties" : {
          "CreatedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CreatedBy_Name" : {
            "type" : "string"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Name" : {
            "type" : "string"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiRecordOwner"
            }
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Parent_Name" : {
            "type" : "string"
          },
          "Announced" : {
            "type" : "boolean"
          },
          "Body" : {
            "type" : "string"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "Pinned" : {
            "type" : "boolean"
          }
        }
      },
      "PublicApiSaveNoteRequest" : {
        "type" : "object",
        "properties" : {
          "Announced" : {
            "type" : "boolean"
          },
          "Body" : {
            "type" : "string"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "Pinned" : {
            "type" : "boolean"
          }
        }
      },
      "PublicApiGetTaskResponseList" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetTaskResponse"
            }
          }
        }
      },
      "PublicApiGetTaskResponse" : {
        "type" : "object",
        "properties" : {
          "CreatedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CreatedBy_Name" : {
            "type" : "string"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Name" : {
            "type" : "string"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiRecordOwner"
            }
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Parent_Name" : {
            "type" : "string"
          },
          "Announced" : {
            "type" : "boolean"
          },
          "Body" : {
            "type" : "string"
          },
          "Completed" : {
            "type" : "boolean"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "Pinned" : {
            "type" : "boolean"
          },
          "When" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PublicApiSaveTaskRequest" : {
        "type" : "object",
        "properties" : {
          "Announced" : {
            "type" : "boolean"
          },
          "Body" : {
            "type" : "string"
          },
          "Completed" : {
            "type" : "boolean"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "Pinned" : {
            "type" : "boolean"
          },
          "When" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PublicApiGetAccountResponseList" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetAccountResponse"
            }
          }
        }
      },
      "PublicApiGetContactResponseList" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetContactResponse"
            }
          }
        }
      },
      "PublicApiSaveContactRequest" : {
        "type" : "object",
        "properties" : {
          "Address_Business_City" : {
            "type" : "string"
          },
          "Address_Business_Country" : {
            "type" : "string"
          },
          "Address_Business_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Business_Line1" : {
            "type" : "string"
          },
          "Address_Business_State" : {
            "type" : "string"
          },
          "Address_Business_ZipCode" : {
            "type" : "string"
          },
          "Address_Home_City" : {
            "type" : "string"
          },
          "Address_Home_Country" : {
            "type" : "string"
          },
          "Address_Home_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Home_Line1" : {
            "type" : "string"
          },
          "Address_Home_State" : {
            "type" : "string"
          },
          "Address_Home_ZipCode" : {
            "type" : "string"
          },
          "Address_Other_City" : {
            "type" : "string"
          },
          "Address_Other_Country" : {
            "type" : "string"
          },
          "Address_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Other_Line1" : {
            "type" : "string"
          },
          "Address_Other_State" : {
            "type" : "string"
          },
          "Address_Other_ZipCode" : {
            "type" : "string"
          },
          "CurrentPosition_Company_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CurrentPosition_Company_Name" : {
            "type" : "string"
          },
          "CurrentPosition_Title" : {
            "type" : "string"
          },
          "CurrentPosition_WhenEnd" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CurrentPosition_WhenStart" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField1" : {
            "type" : "string"
          },
          "CustomField10" : {
            "type" : "string"
          },
          "CustomField11" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField12" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField13" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField14" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField15" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField16" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField17" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField18" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField19" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField2" : {
            "type" : "string"
          },
          "CustomField20" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField21" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField22" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField23" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField24" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField25" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField26" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField27" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField28" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField29" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField3" : {
            "type" : "string"
          },
          "CustomField30" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField31" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField32" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField33" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField34" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField35" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField36" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField37" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField38" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField39" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField4" : {
            "type" : "string"
          },
          "CustomField40" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField41" : {
            "type" : "string"
          },
          "CustomField42" : {
            "type" : "string"
          },
          "CustomField43" : {
            "type" : "string"
          },
          "CustomField44" : {
            "type" : "string"
          },
          "CustomField45" : {
            "type" : "string"
          },
          "CustomField46" : {
            "type" : "string"
          },
          "CustomField47" : {
            "type" : "string"
          },
          "CustomField48" : {
            "type" : "string"
          },
          "CustomField49" : {
            "type" : "string"
          },
          "CustomField5" : {
            "type" : "string"
          },
          "CustomField50" : {
            "type" : "string"
          },
          "CustomField51" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField52" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField53" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField54" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField55" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField56" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField57" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField58" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField59" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField6" : {
            "type" : "string"
          },
          "CustomField60" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField61" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField62" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField63" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField64" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField65" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField66" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField67" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField68" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField69" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField7" : {
            "type" : "string"
          },
          "CustomField70" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField71" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField72" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField73" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField74" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField75" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField76" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField77" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField78" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField79" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField8" : {
            "type" : "string"
          },
          "CustomField80" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField9" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "Education_Accreditation_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Education_Accreditation_Name" : {
            "type" : "string"
          },
          "Education_Honors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "Education_Institution_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Education_Institution_Name" : {
            "type" : "string"
          },
          "Education_WhenEnd" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Education_WhenStart" : {
            "type" : "string",
            "format" : "date-time"
          },
          "EmailAddress_Other" : {
            "type" : "string"
          },
          "EmailAddress_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "EmailAddress_Personal" : {
            "type" : "string"
          },
          "EmailAddress_Personal_IsPrimary" : {
            "type" : "boolean"
          },
          "EmailAddress_Work" : {
            "type" : "string"
          },
          "EmailAddress_Work_IsPrimary" : {
            "type" : "boolean"
          },
          "Ethnicity_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Ethnicity_Name" : {
            "type" : "string"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "FirstName" : {
            "type" : "string"
          },
          "Gender_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Gender_Name" : {
            "type" : "string"
          },
          "KeyDate_Anniversary" : {
            "type" : "string",
            "format" : "date-time"
          },
          "KeyDate_Birthday" : {
            "type" : "string",
            "format" : "date-time"
          },
          "KeyDate_Other" : {
            "type" : "string",
            "format" : "date-time"
          },
          "LastName" : {
            "type" : "string"
          },
          "MiddleName" : {
            "type" : "string"
          },
          "NickName" : {
            "type" : "string"
          },
          "Owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiRecordOwner"
            }
          },
          "PhoneNumber_Fax" : {
            "type" : "string"
          },
          "PhoneNumber_Fax_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Fax_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Home" : {
            "type" : "string"
          },
          "PhoneNumber_Home_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Home_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Mobile" : {
            "type" : "string"
          },
          "PhoneNumber_Mobile_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Mobile_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Other" : {
            "type" : "string"
          },
          "PhoneNumber_Other_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_Skype" : {
            "type" : "string"
          },
          "PhoneNumber_Skype_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_Skype_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_WorkDirect" : {
            "type" : "string"
          },
          "PhoneNumber_WorkDirect_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_WorkDirect_IsPrimary" : {
            "type" : "boolean"
          },
          "PhoneNumber_WorkMain" : {
            "type" : "string"
          },
          "PhoneNumber_WorkMain_Extension" : {
            "type" : "string"
          },
          "PhoneNumber_WorkMain_IsPrimary" : {
            "type" : "boolean"
          },
          "PreferredContactMethodType_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PreferredContactMethodType_Name" : {
            "type" : "string"
          },
          "RecordType" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "RelatedContact_Assistant_FirstName" : {
            "type" : "string"
          },
          "RelatedContact_Assistant_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "RelatedContact_Assistant_IsPrimary" : {
            "type" : "boolean"
          },
          "RelatedContact_Assistant_LastName" : {
            "type" : "string"
          },
          "RelatedContact_Other_FirstName" : {
            "type" : "string"
          },
          "RelatedContact_Other_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "RelatedContact_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "RelatedContact_Other_LastName" : {
            "type" : "string"
          },
          "RelatedContact_ReferredBy_FirstName" : {
            "type" : "string"
          },
          "RelatedContact_ReferredBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "RelatedContact_ReferredBy_IsPrimary" : {
            "type" : "boolean"
          },
          "RelatedContact_ReferredBy_LastName" : {
            "type" : "string"
          },
          "RelatedContact_Spouse_FirstName" : {
            "type" : "string"
          },
          "RelatedContact_Spouse_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "RelatedContact_Spouse_IsPrimary" : {
            "type" : "boolean"
          },
          "RelatedContact_Spouse_LastName" : {
            "type" : "string"
          },
          "Salary" : {
            "type" : "number",
            "format" : "double"
          },
          "SalaryDetails" : {
            "type" : "string"
          },
          "Salutation_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Salutation_Name" : {
            "type" : "string"
          },
          "Social_AIM" : {
            "type" : "string"
          },
          "Social_AIM_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_FacebookChat" : {
            "type" : "string"
          },
          "Social_FacebookChat_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_FaceTime" : {
            "type" : "string"
          },
          "Social_FaceTime_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_GoogleTalk" : {
            "type" : "string"
          },
          "Social_GoogleTalk_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_ICQ" : {
            "type" : "string"
          },
          "Social_ICQ_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_Other" : {
            "type" : "string"
          },
          "Social_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_Skype" : {
            "type" : "string"
          },
          "Social_Skype_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_Twitter" : {
            "type" : "string"
          },
          "Social_Twitter_IsPrimary" : {
            "type" : "boolean"
          },
          "Social_YahooMsg" : {
            "type" : "string"
          },
          "Social_YahooMsg_IsPrimary" : {
            "type" : "boolean"
          },
          "Source_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Source_Name" : {
            "type" : "string"
          },
          "Suffix_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Suffix_Name" : {
            "type" : "string"
          },
          "Tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "Website_Blog" : {
            "type" : "string"
          },
          "Website_Blog_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Business" : {
            "type" : "string"
          },
          "Website_Business_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Facebook" : {
            "type" : "string"
          },
          "Website_Facebook_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_LinkedIn" : {
            "type" : "string"
          },
          "Website_LinkedIn_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Other" : {
            "type" : "string"
          },
          "Website_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Personal" : {
            "type" : "string"
          },
          "Website_Personal_IsPrimary" : {
            "type" : "boolean"
          }
        }
      },
      "PublicApiGetEmailsResponseList" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetEmailResponse"
            }
          }
        }
      },
      "PublicApiGetEmailResponse" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ActivityType_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ActivityType_Name" : {
            "type" : "string"
          },
          "CreatedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CreatedBy_Name" : {
            "type" : "string"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Body" : {
            "type" : "string"
          },
          "From" : {
            "type" : "string"
          },
          "Subject" : {
            "type" : "string"
          },
          "To" : {
            "type" : "string"
          }
        }
      },
      "PublicApiSaveContactEmailRequest" : {
        "type" : "object",
        "properties" : {
          "From" : {
            "type" : "string",
            "description" : "The sender of the email address."
          },
          "To" : {
            "type" : "string",
            "description" : "Recipient email address. Multiple addresses are comma separated. Max 100."
          },
          "Subject" : {
            "type" : "string",
            "description" : "Email Subject."
          },
          "BodyPlainText" : {
            "type" : "string",
            "description" : "Email body in plain text. If both 'BodyHtml' and 'BodyPlainText exist, 'BodyPlainText' will be used."
          },
          "BodyHtml" : {
            "type" : "string",
            "description" : "Email body in HTML format."
          },
          "EmailDirection" : {
            "type" : "integer",
            "description" : "Enum defining if the email was sent to the contact or received by the contact. 0 = EmailSent, 1 = EmailReceived.",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          }
        },
        "description" : "Request body containing information about an email."
      },
      "PublicApiGetContactJob" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "StageId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "StageName" : {
            "type" : "string"
          },
          "WorkflowTypeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "WorkflowTypeName" : {
            "type" : "string"
          }
        }
      },
      "PublicApiSaveWorkflowItemStatusRequest" : {
        "type" : "object",
        "properties" : {
          "StatusId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "StatusName" : {
            "type" : "string"
          }
        }
      },
      "PublicApiPlacementResponseList" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPlacementResponse"
            }
          }
        }
      },
      "PublicApiPlacementResponse" : {
        "type" : "object",
        "properties" : {
          "BillDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "BillRate" : {
            "type" : "number",
            "format" : "double"
          },
          "Bonus" : {
            "type" : "number",
            "format" : "double"
          },
          "BurdenRate" : {
            "type" : "number",
            "format" : "double"
          },
          "BurdenRatePercentage" : {
            "type" : "number",
            "format" : "double"
          },
          "Commission" : {
            "type" : "number",
            "format" : "double"
          },
          "CreatedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CreatedBy_Name" : {
            "type" : "string"
          },
          "Discount" : {
            "type" : "number",
            "format" : "double"
          },
          "EndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Fee" : {
            "type" : "number",
            "format" : "double"
          },
          "FeePercent" : {
            "type" : "number",
            "format" : "double"
          },
          "HourlyRate" : {
            "type" : "number",
            "format" : "double"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobOpenDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Margin" : {
            "type" : "number",
            "format" : "double"
          },
          "PayRate" : {
            "type" : "number",
            "format" : "double"
          },
          "PlacedContact_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PlacedContact_Name" : {
            "type" : "string"
          },
          "Regarding_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Regarding_Title" : {
            "type" : "string"
          },
          "Salary" : {
            "type" : "number",
            "format" : "double"
          },
          "StartDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "TimeToFill" : {
            "type" : "number",
            "format" : "double"
          },
          "TotalHours" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Value" : {
            "type" : "number",
            "format" : "double"
          },
          "When" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "OpportunityDeliveryTypeInfo" : {
        "type" : "object",
        "properties" : {
          "DeliveryType" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "GrantedAssignmentCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "GrantedAssignments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeliveryAssignmentInfo"
            }
          }
        }
      },
      "DeliveryAssignmentInfo" : {
        "type" : "object",
        "properties" : {
          "AssignmentId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AssignmentName" : {
            "type" : "string"
          },
          "ContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ContactName" : {
            "type" : "string"
          },
          "JobId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobTitle" : {
            "type" : "string"
          }
        }
      },
      "OpportunityTypeDeliveryTypesResponse" : {
        "type" : "object",
        "properties" : {
          "TimeTypes" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "ExpenseTypes" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        }
      },
      "PublicApiContactSource" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "PublicApiApplicationStatus" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "PublicApiGetDomainCustomFieldsResponse" : {
        "type" : "object",
        "properties" : {
          "Companies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiDomainCustomField"
            }
          },
          "Contacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiDomainCustomField"
            }
          },
          "Jobs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiDomainCustomField"
            }
          },
          "Placements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiDomainCustomField"
            }
          }
        }
      },
      "PublicApiDomainCustomField" : {
        "type" : "object",
        "properties" : {
          "DisplayName" : {
            "type" : "string"
          },
          "FieldName" : {
            "type" : "string"
          },
          "Picklist" : {
            "$ref" : "#/components/schemas/PublicApiDomainPicklist"
          },
          "Type" : {
            "type" : "string"
          }
        }
      },
      "PublicApiDomainPicklist" : {
        "type" : "object",
        "properties" : {
          "Choices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiDomainPicklistChoice"
            }
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "PublicApiDomainPicklistChoice" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "PublicApiDocumentType" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "AllowedOn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PublicApiEeocPassReason" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "PublicApiListsCategory" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "PublicApiTagCategory" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "PublicApiWorkflowStatus" : {
        "type" : "object",
        "properties" : {
          "Description" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "WorkflowTypeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "WorkflowTypeName" : {
            "type" : "string"
          }
        }
      },
      "PublicApiWorkflowType" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "EntityLookup" : {
        "type" : "object",
        "properties" : {
          "EntityType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 150, 160, 161, 162, 163, 165, 220, 221, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 350, 500, 501, 502, 510, 511, 512, 513, 514, 700, 701, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 850, 851, 900, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 10000, 10001, 10002, 10003, 11000 ]
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Title" : {
            "type" : "string"
          },
          "ImportId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Details" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "A Crelate Entity representing the relationship and its details"
          },
          "TagCategoryId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AttachmentTypeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AutoLinkToParentPayloadEntity" : {
            "type" : "boolean"
          },
          "CreateLookupEntity" : {
            "type" : "boolean"
          }
        },
        "description" : "A \"Lookup\" to another crelate entity"
      },
      "AssignmentDeliveryTypes" : {
        "type" : "object",
        "properties" : {
          "DeliveryTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssignmentDeliveryTypeInfo"
            }
          },
          "AssignmentId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AssignmentName" : {
            "type" : "string"
          },
          "ContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ContactName" : {
            "type" : "string"
          },
          "JobId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobTitle" : {
            "type" : "string"
          }
        }
      },
      "AssignmentDeliveryTypeInfo" : {
        "type" : "object",
        "properties" : {
          "DeliveryTypeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "DeliveryTypeName" : {
            "type" : "string"
          },
          "EntityType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 150, 160, 161, 162, 163, 165, 220, 221, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 350, 500, 501, 502, 510, 511, 512, 513, 514, 700, 701, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 850, 851, 900, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 10000, 10001, 10002, 10003, 11000 ]
          }
        }
      },
      "PublicApiGetExportResponseList" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetExportResponse"
            }
          }
        }
      },
      "PublicApiGetExportResponse" : {
        "type" : "object",
        "properties" : {
          "CreatedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CreatedBy_Name" : {
            "type" : "string"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "DownloadUrlExpiresOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "DownloadUrl" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "Status" : {
            "type" : "string"
          },
          "Password" : {
            "type" : "string"
          },
          "IncludeAttachments" : {
            "type" : "boolean"
          },
          "IncludeRestrictedAttachments" : {
            "type" : "boolean"
          },
          "IncludeModifiedAfter" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PublicApiSaveExportRequest" : {
        "type" : "object",
        "properties" : {
          "IncludeAttachments" : {
            "type" : "boolean"
          },
          "IncludeRestrictedAttachments" : {
            "type" : "boolean"
          },
          "IncludeModifiedAfter" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PublicApiGetJobPostingListResponse" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetJobPostingResponse"
            }
          }
        }
      },
      "PublicApiGetJobPostingResponse" : {
        "type" : "object",
        "properties" : {
          "CreatedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CreatedBy_Name" : {
            "type" : "string"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "LastPostedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ModifiedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Name" : {
            "type" : "string"
          },
          "PrimaryOwnerName" : {
            "type" : "string"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiRecordOwner"
            }
          },
          "City" : {
            "type" : "string"
          },
          "CompanyName" : {
            "type" : "string"
          },
          "Compensation" : {
            "type" : "string"
          },
          "Country_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Country_Name" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "ExternalPrimayKey" : {
            "type" : "string"
          },
          "JobCode" : {
            "type" : "string"
          },
          "State" : {
            "type" : "string"
          },
          "Title" : {
            "type" : "string"
          },
          "UrlSlug" : {
            "type" : "string"
          },
          "Zip" : {
            "type" : "string"
          }
        }
      },
      "PublicApiSaveJobPostingRequest" : {
        "type" : "object",
        "properties" : {
          "City" : {
            "type" : "string"
          },
          "CompanyName" : {
            "type" : "string"
          },
          "Compensation" : {
            "type" : "string"
          },
          "Country_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Country_Name" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "ExternalPrimayKey" : {
            "type" : "string"
          },
          "JobCode" : {
            "type" : "string"
          },
          "State" : {
            "type" : "string"
          },
          "Title" : {
            "type" : "string"
          },
          "UrlSlug" : {
            "type" : "string"
          },
          "Zip" : {
            "type" : "string"
          }
        }
      },
      "PublicApiSaveJobApplicationRequest" : {
        "type" : "object",
        "properties" : {
          "Email" : {
            "type" : "string"
          },
          "FirstName" : {
            "type" : "string"
          },
          "LastName" : {
            "type" : "string"
          },
          "Phone" : {
            "type" : "string"
          },
          "ResumeContent" : {
            "type" : "string"
          },
          "ResumeFilename" : {
            "type" : "string"
          },
          "Source_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Source_Name" : {
            "type" : "string"
          }
        }
      },
      "PublicApiGetJobPostingSearchResponse" : {
        "type" : "object",
        "properties" : {
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetJobPostingSearchResult"
            }
          }
        }
      },
      "PublicApiGetJobPostingSearchResult" : {
        "type" : "object",
        "properties" : {
          "City" : {
            "type" : "string"
          },
          "CompanyName" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobCode" : {
            "type" : "string"
          },
          "JobNum" : {
            "type" : "integer",
            "format" : "int32"
          },
          "LastPostedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "State" : {
            "type" : "string"
          },
          "Title" : {
            "type" : "string"
          },
          "Zip" : {
            "type" : "string"
          },
          "PrimaryOwnerName" : {
            "type" : "string"
          }
        }
      },
      "PublicApiGetJobListResponse" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetJobResponse"
            }
          }
        }
      },
      "PublicApiGetJobResponse" : {
        "type" : "object",
        "properties" : {
          "AdditionalContact_Billing_Name" : {
            "type" : "string"
          },
          "AdditionalContact_Client_Name" : {
            "type" : "string"
          },
          "AdditionalContact_ExecutiveSponsor_Name" : {
            "type" : "string"
          },
          "AdditionalContact_HiringManager_Name" : {
            "type" : "string"
          },
          "AdditionalContact_InternalRecruiter_Name" : {
            "type" : "string"
          },
          "AdditionalContact_Other_Name" : {
            "type" : "string"
          },
          "Attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiAttachmentResponse"
            }
          },
          "ClosedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CreatedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CreatedBy_Name" : {
            "type" : "string"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ExpectedValue" : {
            "type" : "number",
            "format" : "double"
          },
          "ExternalEmailAddress" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobCode" : {
            "type" : "string"
          },
          "LastActivityDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "LastEngagementDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ModifiedBy_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedBy_Name" : {
            "type" : "string"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Status_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Status_Name" : {
            "type" : "string"
          },
          "TimeToClose" : {
            "type" : "number",
            "format" : "double"
          },
          "WorkflowType_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "WorkflowType_Name" : {
            "type" : "string"
          },
          "ActualValue" : {
            "type" : "number",
            "format" : "double"
          },
          "AdditionalContact_Billing_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_Billing_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_Billing_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_Billing_LastName" : {
            "type" : "string"
          },
          "AdditionalContact_Client_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_Client_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_Client_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_Client_LastName" : {
            "type" : "string"
          },
          "AdditionalContact_ExecutiveSponsor_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_ExecutiveSponsor_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_ExecutiveSponsor_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_ExecutiveSponsor_LastName" : {
            "type" : "string"
          },
          "AdditionalContact_HiringManager_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_HiringManager_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_HiringManager_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_HiringManager_LastName" : {
            "type" : "string"
          },
          "AdditionalContact_InternalRecruiter_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_InternalRecruiter_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_InternalRecruiter_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_InternalRecruiter_LastName" : {
            "type" : "string"
          },
          "AdditionalContact_Other_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_Other_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_Other_LastName" : {
            "type" : "string"
          },
          "Address_Business_City" : {
            "type" : "string"
          },
          "Address_Business_Country" : {
            "type" : "string"
          },
          "Address_Business_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Business_Line1" : {
            "type" : "string"
          },
          "Address_Business_State" : {
            "type" : "string"
          },
          "Address_Business_ZipCode" : {
            "type" : "string"
          },
          "Address_Other_City" : {
            "type" : "string"
          },
          "Address_Other_Country" : {
            "type" : "string"
          },
          "Address_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Other_Line1" : {
            "type" : "string"
          },
          "Address_Other_State" : {
            "type" : "string"
          },
          "Address_Other_ZipCode" : {
            "type" : "string"
          },
          "BillRate" : {
            "type" : "number",
            "format" : "double"
          },
          "Bonus" : {
            "type" : "number",
            "format" : "double"
          },
          "BurdenRate" : {
            "type" : "number",
            "format" : "double"
          },
          "BurdenRatePercentage" : {
            "type" : "number",
            "format" : "double"
          },
          "Commission" : {
            "type" : "number",
            "format" : "double"
          },
          "Company_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Company_Name" : {
            "type" : "string"
          },
          "Compensation" : {
            "type" : "number",
            "format" : "double"
          },
          "CompensationDetails" : {
            "type" : "string"
          },
          "CustomField1" : {
            "type" : "string"
          },
          "CustomField10" : {
            "type" : "string"
          },
          "CustomField11" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField12" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField13" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField14" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField15" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField16" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField17" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField18" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField19" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField2" : {
            "type" : "string"
          },
          "CustomField20" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField21" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField22" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField23" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField24" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField25" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField26" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField27" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField28" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField29" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField3" : {
            "type" : "string"
          },
          "CustomField30" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField31" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField32" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField33" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField34" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField35" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField36" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField37" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField38" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField39" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField4" : {
            "type" : "string"
          },
          "CustomField40" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField41" : {
            "type" : "string"
          },
          "CustomField42" : {
            "type" : "string"
          },
          "CustomField43" : {
            "type" : "string"
          },
          "CustomField44" : {
            "type" : "string"
          },
          "CustomField45" : {
            "type" : "string"
          },
          "CustomField46" : {
            "type" : "string"
          },
          "CustomField47" : {
            "type" : "string"
          },
          "CustomField48" : {
            "type" : "string"
          },
          "CustomField49" : {
            "type" : "string"
          },
          "CustomField5" : {
            "type" : "string"
          },
          "CustomField50" : {
            "type" : "string"
          },
          "CustomField51" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField52" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField53" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField54" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField55" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField56" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField57" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField58" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField59" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField6" : {
            "type" : "string"
          },
          "CustomField60" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField61" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField62" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField63" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField64" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField65" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField66" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField67" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField68" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField69" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField7" : {
            "type" : "string"
          },
          "CustomField70" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField71" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField72" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField73" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField74" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField75" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField76" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField77" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField78" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField79" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField8" : {
            "type" : "string"
          },
          "CustomField80" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField9" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "Discount" : {
            "type" : "number",
            "format" : "double"
          },
          "EstimatedCloseDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "Fee" : {
            "type" : "number",
            "format" : "double"
          },
          "FeePercent" : {
            "type" : "number",
            "format" : "double"
          },
          "HourlyRate" : {
            "type" : "number",
            "format" : "double"
          },
          "IsLead" : {
            "type" : "boolean"
          },
          "IsOnHold" : {
            "type" : "boolean"
          },
          "JobTitle_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobTitle_Name" : {
            "type" : "string"
          },
          "JobTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiSaveJobRequestJobType"
            }
          },
          "LeadSource_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "LeadSource_Name" : {
            "type" : "string"
          },
          "Margin" : {
            "type" : "number",
            "format" : "double"
          },
          "Name" : {
            "type" : "string"
          },
          "NumberOfOpenings" : {
            "type" : "integer",
            "format" : "int32"
          },
          "NumberOfPlacements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "OpportunityType_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "OpportunityType_Name" : {
            "type" : "string"
          },
          "Owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiRecordOwner"
            }
          },
          "ParentJob_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ParentJob_Name" : {
            "type" : "string"
          },
          "PayRate" : {
            "type" : "number",
            "format" : "double"
          },
          "PlacementStatus" : {
            "type" : "integer",
            "description" : "Status of a placement.\r\n\r\n0 - Unfilled, 1 - Partially Filled, 2 - Filled",
            "format" : "int32"
          },
          "PotentialValue" : {
            "type" : "number",
            "format" : "double"
          },
          "Priority_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Priority_Name" : {
            "type" : "string"
          },
          "Probability" : {
            "type" : "number",
            "format" : "double"
          },
          "Salary" : {
            "type" : "number",
            "format" : "double"
          },
          "StartDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "TotalHours" : {
            "type" : "number",
            "format" : "double"
          },
          "Website_Description" : {
            "type" : "string"
          },
          "Website_Description_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Other" : {
            "type" : "string"
          },
          "Website_Other_IsPrimary" : {
            "type" : "boolean"
          }
        }
      },
      "PublicApiSaveJobRequestJobType" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "PublicApiSaveJobRequest" : {
        "type" : "object",
        "properties" : {
          "ActualValue" : {
            "type" : "number",
            "format" : "double"
          },
          "AdditionalContact_Billing_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_Billing_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_Billing_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_Billing_LastName" : {
            "type" : "string"
          },
          "AdditionalContact_Client_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_Client_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_Client_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_Client_LastName" : {
            "type" : "string"
          },
          "AdditionalContact_ExecutiveSponsor_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_ExecutiveSponsor_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_ExecutiveSponsor_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_ExecutiveSponsor_LastName" : {
            "type" : "string"
          },
          "AdditionalContact_HiringManager_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_HiringManager_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_HiringManager_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_HiringManager_LastName" : {
            "type" : "string"
          },
          "AdditionalContact_InternalRecruiter_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_InternalRecruiter_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_InternalRecruiter_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_InternalRecruiter_LastName" : {
            "type" : "string"
          },
          "AdditionalContact_Other_FirstName" : {
            "type" : "string"
          },
          "AdditionalContact_Other_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AdditionalContact_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "AdditionalContact_Other_LastName" : {
            "type" : "string"
          },
          "Address_Business_City" : {
            "type" : "string"
          },
          "Address_Business_Country" : {
            "type" : "string"
          },
          "Address_Business_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Business_Line1" : {
            "type" : "string"
          },
          "Address_Business_State" : {
            "type" : "string"
          },
          "Address_Business_ZipCode" : {
            "type" : "string"
          },
          "Address_Other_City" : {
            "type" : "string"
          },
          "Address_Other_Country" : {
            "type" : "string"
          },
          "Address_Other_IsPrimary" : {
            "type" : "boolean"
          },
          "Address_Other_Line1" : {
            "type" : "string"
          },
          "Address_Other_State" : {
            "type" : "string"
          },
          "Address_Other_ZipCode" : {
            "type" : "string"
          },
          "BillRate" : {
            "type" : "number",
            "format" : "double"
          },
          "Bonus" : {
            "type" : "number",
            "format" : "double"
          },
          "BurdenRate" : {
            "type" : "number",
            "format" : "double"
          },
          "BurdenRatePercentage" : {
            "type" : "number",
            "format" : "double"
          },
          "Commission" : {
            "type" : "number",
            "format" : "double"
          },
          "Company_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Company_Name" : {
            "type" : "string"
          },
          "Compensation" : {
            "type" : "number",
            "format" : "double"
          },
          "CompensationDetails" : {
            "type" : "string"
          },
          "CustomField1" : {
            "type" : "string"
          },
          "CustomField10" : {
            "type" : "string"
          },
          "CustomField11" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField12" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField13" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField14" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField15" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField16" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField17" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField18" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField19" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField2" : {
            "type" : "string"
          },
          "CustomField20" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField21" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField22" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField23" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField24" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField25" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField26" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField27" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField28" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField29" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField3" : {
            "type" : "string"
          },
          "CustomField30" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField31" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField32" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField33" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField34" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField35" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField36" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField37" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField38" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField39" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField4" : {
            "type" : "string"
          },
          "CustomField40" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField41" : {
            "type" : "string"
          },
          "CustomField42" : {
            "type" : "string"
          },
          "CustomField43" : {
            "type" : "string"
          },
          "CustomField44" : {
            "type" : "string"
          },
          "CustomField45" : {
            "type" : "string"
          },
          "CustomField46" : {
            "type" : "string"
          },
          "CustomField47" : {
            "type" : "string"
          },
          "CustomField48" : {
            "type" : "string"
          },
          "CustomField49" : {
            "type" : "string"
          },
          "CustomField5" : {
            "type" : "string"
          },
          "CustomField50" : {
            "type" : "string"
          },
          "CustomField51" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField52" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField53" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField54" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField55" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField56" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField57" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField58" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField59" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField6" : {
            "type" : "string"
          },
          "CustomField60" : {
            "type" : "number",
            "format" : "double"
          },
          "CustomField61" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField62" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField63" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField64" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField65" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField66" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField67" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField68" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField69" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField7" : {
            "type" : "string"
          },
          "CustomField70" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CustomField71" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField72" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField73" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField74" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField75" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField76" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField77" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField78" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField79" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField8" : {
            "type" : "string"
          },
          "CustomField80" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiPicklistValue"
            }
          },
          "CustomField9" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "Discount" : {
            "type" : "number",
            "format" : "double"
          },
          "EstimatedCloseDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "Fee" : {
            "type" : "number",
            "format" : "double"
          },
          "FeePercent" : {
            "type" : "number",
            "format" : "double"
          },
          "HourlyRate" : {
            "type" : "number",
            "format" : "double"
          },
          "IsLead" : {
            "type" : "boolean"
          },
          "IsOnHold" : {
            "type" : "boolean"
          },
          "JobTitle_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobTitle_Name" : {
            "type" : "string"
          },
          "JobTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiSaveJobRequestJobType"
            }
          },
          "LeadSource_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "LeadSource_Name" : {
            "type" : "string"
          },
          "Margin" : {
            "type" : "number",
            "format" : "double"
          },
          "Name" : {
            "type" : "string"
          },
          "NumberOfOpenings" : {
            "type" : "integer",
            "format" : "int32"
          },
          "NumberOfPlacements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "OpportunityType_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "OpportunityType_Name" : {
            "type" : "string"
          },
          "Owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiRecordOwner"
            }
          },
          "ParentJob_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ParentJob_Name" : {
            "type" : "string"
          },
          "PayRate" : {
            "type" : "number",
            "format" : "double"
          },
          "PlacementStatus" : {
            "type" : "integer",
            "description" : "Status of a placement.\r\n\r\n0 - Unfilled, 1 - Partially Filled, 2 - Filled",
            "format" : "int32"
          },
          "PotentialValue" : {
            "type" : "number",
            "format" : "double"
          },
          "Priority_Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Priority_Name" : {
            "type" : "string"
          },
          "Probability" : {
            "type" : "number",
            "format" : "double"
          },
          "Salary" : {
            "type" : "number",
            "format" : "double"
          },
          "StartDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "TotalHours" : {
            "type" : "number",
            "format" : "double"
          },
          "Website_Description" : {
            "type" : "string"
          },
          "Website_Description_IsPrimary" : {
            "type" : "boolean"
          },
          "Website_Other" : {
            "type" : "string"
          },
          "Website_Other_IsPrimary" : {
            "type" : "boolean"
          }
        }
      },
      "PublicApiGetJobContactsResponseList" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicApiGetJobContact"
            }
          }
        }
      },
      "PublicApiGetJobContact" : {
        "type" : "object",
        "properties" : {
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Name" : {
            "type" : "string"
          },
          "StageId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "StageName" : {
            "type" : "string"
          },
          "WorkflowTypeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "WorkflowTypeName" : {
            "type" : "string"
          }
        }
      },
      "BroadcastMessage" : {
        "type" : "object",
        "properties" : {
          "Body" : {
            "type" : "string"
          },
          "Url" : {
            "type" : "string"
          },
          "Revoked" : {
            "type" : "boolean"
          },
          "Type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1, 2 ]
          },
          "PartitionKey" : {
            "type" : "string"
          },
          "RowKey" : {
            "type" : "string"
          },
          "Timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ETag" : {
            "type" : "string"
          }
        }
      },
      "BroadcastMessageCreateRequest" : {
        "type" : "object",
        "properties" : {
          "Body" : {
            "type" : "string"
          },
          "Url" : {
            "type" : "string"
          }
        }
      },
      "AppHubApiPageEventRequest" : {
        "type" : "object",
        "properties" : {
          "Group" : {
            "type" : "string"
          },
          "ExcludeConnectionId" : {
            "type" : "string"
          },
          "Payload" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "ActRequest" : {
        "type" : "object",
        "properties" : {
          "Ids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          },
          "Note" : {
            "type" : "string"
          }
        }
      },
      "IApprovalItem" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "EntityStatus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "EventDate" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "UserName" : {
            "type" : "string",
            "readOnly" : true
          },
          "EntityName" : {
            "type" : "string",
            "readOnly" : true
          },
          "Summary" : {
            "type" : "string"
          }
        }
      },
      "TaskSummary" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "EntityName" : {
            "type" : "string"
          },
          "Status" : {
            "type" : "string"
          },
          "EventDate" : {
            "type" : "string"
          },
          "UserName" : {
            "type" : "string"
          },
          "Summary" : {
            "type" : "string"
          }
        }
      },
      "PlacementsResponseEnvelope[CrelateEntity]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "Error" : {
            "$ref" : "#/components/schemas/PlacementsError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "PlacementsError" : {
        "type" : "object",
        "properties" : {
          "ErrorType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 100, 999 ]
          },
          "ErrorMessage" : {
            "type" : "string"
          },
          "ErrorTags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "StackTrace" : {
            "type" : "string"
          }
        }
      },
      "JsonCrelateEntityList" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "__moreRecords" : {
            "type" : "boolean"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Used for returning json through the API, encapsulates the CreateEntityList array\r\ninside an object that also has the __moreRecords property on it."
      },
      "BackupRequest" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "Status" : {
            "type" : "string"
          },
          "IncludeAttachments" : {
            "type" : "boolean"
          },
          "IncludeRestrictedAttachments" : {
            "type" : "boolean"
          }
        }
      },
      "BulkEmailUserState" : {
        "type" : "object",
        "properties" : {
          "DailyMessageRemaining" : {
            "type" : "integer",
            "format" : "int32"
          },
          "DailyMessageUsed" : {
            "type" : "integer",
            "format" : "int32"
          },
          "DailyMessageAllotment" : {
            "type" : "integer",
            "format" : "int32"
          },
          "PeriodMessageRemaining" : {
            "type" : "integer",
            "format" : "int32"
          },
          "PeriodMessageUsed" : {
            "type" : "integer",
            "format" : "int32"
          },
          "PeriodMessageAllotment" : {
            "type" : "integer",
            "format" : "int32"
          },
          "UserActivated" : {
            "type" : "boolean"
          },
          "UserFullName" : {
            "type" : "string"
          },
          "UserId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "NextDailyResetOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "NextPeriodResetOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "RecipientAllotment" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ApplyRequest" : {
        "type" : "object",
        "properties" : {
          "Answers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "Email" : {
            "type" : "string"
          },
          "FirstName" : {
            "type" : "string"
          },
          "MiddleName" : {
            "type" : "string"
          },
          "JobCode" : {
            "type" : "string"
          },
          "LastName" : {
            "type" : "string"
          },
          "OrganizationId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Phone" : {
            "type" : "string"
          },
          "ReferrerCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ReferrerUrl" : {
            "type" : "string"
          },
          "SourceInfo" : {
            "type" : "string"
          },
          "Resume" : {
            "$ref" : "#/components/schemas/ApplicationDocument"
          },
          "TermsAgreement" : {
            "type" : "boolean"
          },
          "Gender" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "Ethnicity" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7 ]
          },
          "Disability" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "Veteran" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          }
        }
      },
      "ApplicationDocument" : {
        "type" : "object",
        "properties" : {
          "Data" : {
            "type" : "string"
          },
          "FileName" : {
            "type" : "string"
          },
          "ContentType" : {
            "type" : "string"
          }
        }
      },
      "Form" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "Sections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FormSection"
            }
          }
        }
      },
      "FormSection" : {
        "type" : "object",
        "properties" : {
          "Fields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FormField"
            }
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "FormField" : {
        "type" : "object",
        "properties" : {
          "FormFieldTypeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "HelpText" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "IsRequired" : {
            "type" : "boolean"
          },
          "HasRating" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Name" : {
            "type" : "string"
          },
          "FieldTypeName" : {
            "type" : "string"
          },
          "PickListItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FormPickListItem"
            }
          }
        }
      },
      "FormPickListItem" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Title" : {
            "type" : "string"
          }
        }
      },
      "CareerBuilderImportResponse" : {
        "type" : "object",
        "properties" : {
          "ContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "DuplicateFound" : {
            "type" : "boolean"
          }
        }
      },
      "CareerBuilderDataResponse" : {
        "type" : "object",
        "properties" : {
          "pages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CareerBuilderProfileSummary"
            }
          },
          "totalResults" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "CareerBuilderProfileSummary" : {
        "type" : "object",
        "properties" : {
          "crelateSearchSource" : {
            "type" : "string"
          },
          "EdgeID" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Photos" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "JobTitle" : {
            "type" : "string"
          },
          "Location" : {
            "$ref" : "#/components/schemas/CareerBuilderLocation"
          },
          "TotalKeywords" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Keywords" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/CareerBuilderKeyword"
            }
          },
          "EdgeScore" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Employments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CareerBuilderEmployments"
            }
          },
          "Educations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CareerBuilderEducation"
            }
          },
          "Emails" : {
            "$ref" : "#/components/schemas/CareerBuilderEmails"
          },
          "Phones" : {
            "$ref" : "#/components/schemas/CareerBuilderPhones"
          },
          "YearsOfExperience" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ResumeLastModified" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "CareerBuilderLocation" : {
        "type" : "object",
        "properties" : {
          "Country" : {
            "type" : "string"
          },
          "CountryCode" : {
            "type" : "string"
          },
          "State" : {
            "type" : "string"
          },
          "StateCode" : {
            "type" : "string"
          },
          "County" : {
            "type" : "string"
          },
          "City" : {
            "type" : "string"
          },
          "Sublocality" : {
            "type" : "string"
          },
          "ZipCode" : {
            "type" : "string"
          },
          "AddressLine1" : {
            "type" : "string"
          },
          "AddressLine2" : {
            "type" : "string"
          },
          "Latitude" : {
            "type" : "number",
            "format" : "double"
          },
          "Longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "FreeLocation" : {
            "type" : "string"
          }
        }
      },
      "CareerBuilderKeyword" : {
        "type" : "object",
        "properties" : {
          "Keyword" : {
            "type" : "string"
          }
        }
      },
      "CareerBuilderEmployments" : {
        "type" : "object",
        "properties" : {
          "DateFrom" : {
            "$ref" : "#/components/schemas/CareerBuilderDate"
          },
          "DateCompanyStart" : {
            "$ref" : "#/components/schemas/CareerBuilderDate"
          },
          "Employer" : {
            "type" : "string"
          },
          "Position" : {
            "type" : "string"
          },
          "Source" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          }
        }
      },
      "CareerBuilderEducation" : {
        "type" : "object",
        "properties" : {
          "DateGraduated" : {
            "$ref" : "#/components/schemas/CareerBuilderDate"
          },
          "Title" : {
            "type" : "string"
          },
          "Institution" : {
            "type" : "string"
          },
          "DegreeLevel" : {
            "type" : "string"
          }
        }
      },
      "CareerBuilderEmails" : {
        "type" : "object",
        "properties" : {
          "IsAvailable" : {
            "type" : "boolean"
          },
          "Emails" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CareerBuilderPhones" : {
        "type" : "object",
        "properties" : {
          "IsAvailable" : {
            "type" : "boolean"
          },
          "Phones" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CareerBuilderDate" : {
        "type" : "object",
        "properties" : {
          "UtcYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "UtcMonth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "UtcDay" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CheckrAccountResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "api_authorized" : {
            "type" : "string"
          },
          "authorized" : {
            "type" : "string"
          },
          "error" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CheckrNodesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CheckrNodesDetails"
            }
          },
          "object" : {
            "type" : "string"
          },
          "next_href" : {
            "type" : "string"
          },
          "previous_href" : {
            "type" : "string"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "error" : {
            "type" : "string"
          }
        }
      },
      "CheckrNodesDetails" : {
        "type" : "object",
        "properties" : {
          "custom_id" : {
            "type" : "string"
          },
          "tier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "parent_custom_id" : {
            "type" : "string"
          },
          "packages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CheckrOrderRequest" : {
        "type" : "object",
        "properties" : {
          "contactId" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "packageName" : {
            "type" : "string"
          },
          "expireDate" : {
            "type" : "string"
          },
          "processItemId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "node" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "zipCode" : {
            "type" : "string"
          }
        }
      },
      "CheckrOrderResponse" : {
        "type" : "object",
        "properties" : {
          "bgReportId" : {
            "type" : "string"
          },
          "wasSuccessful" : {
            "type" : "boolean"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "CheckrPackagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CheckrPackagesDetails"
            }
          },
          "object" : {
            "type" : "string"
          },
          "next_href" : {
            "type" : "string"
          },
          "previous_href" : {
            "type" : "string"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "error" : {
            "type" : "string"
          }
        }
      },
      "CheckrPackagesDetails" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "object" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string"
          },
          "screenings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CheckrScreening"
            }
          }
        }
      },
      "CheckrScreening" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "subtype" : {
            "type" : "string"
          }
        }
      },
      "CheckrRefeshReportRequest" : {
        "type" : "object",
        "properties" : {
          "externalPrimaryKey" : {
            "type" : "string"
          }
        }
      },
      "CheckrRefeshReportResponse" : {
        "type" : "object",
        "properties" : {
          "html" : {
            "type" : "string"
          },
          "error" : {
            "type" : "string"
          }
        }
      },
      "PortalCandidateHistory" : {
        "type" : "object",
        "properties" : {
          "ContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "WorkflowItemId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Results" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "MoreRecords" : {
            "type" : "boolean"
          },
          "TotalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CpGetCandidateRequest" : {
        "type" : "object",
        "properties" : {
          "PortalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "WorkflowItemId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ContactColumns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CpCandidateSummary" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ContactFullName" : {
            "type" : "string"
          },
          "ContactFirstName" : {
            "type" : "string"
          },
          "ExecutiveSummary" : {
            "type" : "string",
            "description" : "Executive summary of the candidate (This is HTML)"
          },
          "ExecutiveSummaryPreview" : {
            "type" : "string",
            "description" : "Shortened version of the executive summary that does not have any line-breaks in it (This is still HTML)"
          },
          "ExecutiveSummaryDisplay" : {
            "type" : "string",
            "description" : "Text-only version of the executive summary (this is plain text, not html)"
          },
          "ExecutiveSummaryUpdatedByName" : {
            "type" : "string"
          },
          "ExecutiveSummaryUpdatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Task" : {
            "$ref" : "#/components/schemas/CpSummaryTaskResponse"
          },
          "Feedback" : {
            "type" : "string"
          },
          "FeedbackRating" : {
            "type" : "integer",
            "format" : "int32"
          },
          "FeedbackResult" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Viewed" : {
            "type" : "boolean"
          },
          "RecruitingStage" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Rating" : {
            "type" : "number",
            "format" : "double"
          },
          "Ratings" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "JobId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortalAttachmentInfo"
            }
          },
          "ExperienceId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "DispositionStatus" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "FeedbackGivenDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "CpSummaryTaskResponse" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PastDue" : {
            "type" : "boolean"
          },
          "VerbId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Job" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Contact" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "When" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Display" : {
            "type" : "string",
            "readOnly" : true
          },
          "CreatedBy" : {
            "$ref" : "#/components/schemas/EntityLookup"
          }
        }
      },
      "PortalAttachmentInfo" : {
        "type" : "object",
        "properties" : {
          "AttachmentId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "AttachmentTypeId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Name" : {
            "type" : "string"
          },
          "SortOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "IsImage" : {
            "type" : "boolean"
          }
        }
      },
      "CpGetJobCandidatesRequest" : {
        "type" : "object",
        "properties" : {
          "PortalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "EntityName" : {
            "type" : "string"
          },
          "EntityId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Columns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CustomFormCompletedForm" : {
        "type" : "object",
        "properties" : {
          "Experience" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "FormDefinition" : {
            "$ref" : "#/components/schemas/CustomFormDefinition"
          },
          "Form" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "FormResponses" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        }
      },
      "CustomFormDefinition" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "description" : "Id of the Form Definition",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "FormTypeId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Name" : {
            "type" : "string",
            "description" : "Name of the Form.  This should be required by the client on creation/update"
          },
          "Layout" : {
            "type" : "array",
            "description" : "Json array that describes the basic layout of the form",
            "items" : {
              "$ref" : "#/components/schemas/CustomFormLayoutSection"
            }
          },
          "FormFieldEntities" : {
            "type" : "array",
            "description" : "List of all of the Form Fields on the Form Definition",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "IsActive" : {
            "type" : "boolean",
            "description" : "If this is true, then it is available for use"
          },
          "Color" : {
            "type" : "string"
          },
          "FormNamePrefix" : {
            "type" : "string"
          },
          "VerbIds" : {
            "$ref" : "#/components/schemas/MultiEntityLookup"
          }
        },
        "description" : "Describes a CustomFormDefintion"
      },
      "CustomFormLayoutSection" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string",
            "description" : "Name of the section"
          },
          "FormFields" : {
            "type" : "array",
            "description" : "Ids of the Form Fields that are in this section",
            "items" : {
              "$ref" : "#/components/schemas/CustomFormLayoutField"
            }
          }
        },
        "description" : "These are section layout objects"
      },
      "MultiEntityLookup" : {
        "type" : "object",
        "properties" : {
          "Lookups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EntityLookup"
            }
          }
        },
        "description" : "An array of EntityLookups uses to define a N:N relationship"
      },
      "CustomFormLayoutField" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "description" : "Id of the Form Field entity",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "FieldMappings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "description" : "Dictionary of Field Mappings. Only on core records currently and only 1 mapping per value per entity. (Long Answer With Rating Questions have 2 values)\r\nThe outer dictionary is keyed by the attribute name on the form response. The inner dictionary is keyed by EntityName and the value is name of the attribute on the record"
          }
        }
      },
      "GetNextTodoResult" : {
        "type" : "object",
        "properties" : {
          "NextJobId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "NextWorkflowItemId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CandidateCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "JobCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CpGetJobsRequest" : {
        "type" : "object",
        "properties" : {
          "PortalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CustomColumnSet" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "enum" : [ 0, 1 ]
            }
          },
          "IncludeClosed" : {
            "type" : "boolean"
          },
          "JobTitleFilter" : {
            "type" : "string"
          },
          "ColumnSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CpJobSummaryColumnSet"
            }
          },
          "Filter" : {
            "$ref" : "#/components/schemas/ColumnFilter"
          },
          "Sort" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColumnSort"
            }
          }
        }
      },
      "CpJobSummaryColumnSet" : {
        "type" : "object",
        "properties" : {
          "DisplayName" : {
            "type" : "string"
          },
          "Width" : {
            "type" : "object",
            "properties" : { }
          },
          "Attribute" : {
            "type" : "string"
          },
          "Filter" : {
            "$ref" : "#/components/schemas/CpFilterRequest"
          },
          "OrderByDirection" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          }
        }
      },
      "ColumnFilter" : {
        "type" : "object",
        "properties" : {
          "filters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColumnFilterExpression"
            }
          },
          "logic" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          }
        }
      },
      "ColumnSort" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string"
          },
          "dir" : {
            "type" : "string"
          }
        }
      },
      "CpFilterRequest" : {
        "type" : "object",
        "properties" : {
          "AttributePath" : {
            "type" : "string"
          },
          "Operator" : {
            "type" : "string"
          },
          "Operand" : {
            "type" : "string"
          }
        }
      },
      "ColumnFilterExpression" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "filters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColumnFilterExpression"
            }
          },
          "logic" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          }
        }
      },
      "ClientPortalJob" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobTitle" : {
            "type" : "string"
          },
          "JobStage" : {
            "type" : "string"
          },
          "TotalCandidates" : {
            "type" : "integer",
            "format" : "int32"
          },
          "NewCandidates" : {
            "type" : "integer",
            "format" : "int32"
          },
          "TotalActionCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AddToPortalRequest" : {
        "type" : "object",
        "properties" : {
          "PortalId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "JobId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Candidates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddToPortalCandidate"
            }
          },
          "AttachmentTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortalAttachmentType"
            }
          },
          "NotifyClients" : {
            "type" : "boolean"
          }
        }
      },
      "AddToPortalCandidate" : {
        "type" : "object",
        "properties" : {
          "ContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "WorkflowItemId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PrimaryAttachmentId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddToPortalAttachment"
            }
          },
          "ExecSummary" : {
            "type" : "string"
          },
          "ExecSummaryModified" : {
            "type" : "boolean"
          }
        }
      },
      "PortalAttachmentType" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Title" : {
            "type" : "string"
          },
          "EntityType" : {
            "type" : "integer",
            "description" : "Should be either AttachmentTypes, FormDefinitions, or MetabaseEntities (but only when Id is _Applications)",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 150, 160, 161, 162, 163, 165, 220, 221, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 350, 500, 501, 502, 510, 511, 512, 513, 514, 700, 701, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 850, 851, 900, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 10000, 10001, 10002, 10003, 11000 ]
          },
          "AllowMultiple" : {
            "type" : "boolean"
          },
          "IsResume" : {
            "type" : "boolean"
          },
          "Color" : {
            "type" : "string"
          }
        }
      },
      "AddToPortalAttachment" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Title" : {
            "type" : "string"
          },
          "AttachmentTypeId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Color" : {
            "type" : "string"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "NewClientPortalUserRequest" : {
        "type" : "object",
        "properties" : {
          "FullName" : {
            "type" : "string"
          },
          "Email" : {
            "type" : "string"
          },
          "Title" : {
            "type" : "string"
          },
          "CompanyName" : {
            "type" : "string"
          },
          "PortalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "CandidateFeedbackListItem" : {
        "type" : "object",
        "properties" : {
          "UserId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PortalUserId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "UserName" : {
            "type" : "string"
          },
          "SubmittedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "FeedbackRequestedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ViewedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "FeedbackRating" : {
            "type" : "integer",
            "format" : "int32"
          },
          "FeedbackResult" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "FeedbackExpId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "IsDisabled" : {
            "type" : "boolean"
          }
        },
        "description" : "Used in subgrid on job tab in management dialog"
      },
      "GetCandidateJobsResult" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobName" : {
            "type" : "string"
          },
          "UserList" : {
            "type" : "string"
          },
          "UserCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Rating" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "PortalAttachment" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AttachmentId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "AttachmentTypeId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          }
        }
      },
      "GetAllCandidatesOnPortalResult" : {
        "type" : "object",
        "properties" : {
          "PortalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ContactName" : {
            "type" : "string"
          },
          "Email" : {
            "type" : "string"
          },
          "ContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobList" : {
            "type" : "string"
          }
        }
      },
      "GetPortalsRequest" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "type" : "string"
          },
          "skip" : {
            "type" : "integer",
            "format" : "int32"
          },
          "take" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Sort" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColumnSort"
            }
          }
        },
        "description" : "Request used to retrieve a list of portals (used in client portal settings page)"
      },
      "NewClientPortalUsersRequest" : {
        "type" : "object",
        "properties" : {
          "UserRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortalUserRequest"
            }
          },
          "Title" : {
            "type" : "string"
          },
          "CompanyName" : {
            "type" : "string"
          },
          "PortalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "PortalUserRequest" : {
        "type" : "object",
        "properties" : {
          "FullName" : {
            "type" : "string"
          },
          "Email" : {
            "type" : "string"
          }
        }
      },
      "ClientPortalInviteResult" : {
        "type" : "object",
        "properties" : {
          "FullName" : {
            "type" : "string"
          },
          "Email" : {
            "type" : "string"
          },
          "Status" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          }
        },
        "description" : "Result of a request to invite a new user to the client portal"
      },
      "ClientPortalMgmtJobsSummary" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "PortalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "DateAdded" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CandidateCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "UserAccess" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "Submittals" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        }
      },
      "CpSaveSidePaneRequest" : {
        "type" : "object",
        "properties" : {
          "JobId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "WorkflowItemId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ExecutiveSummaryHtml" : {
            "type" : "string"
          },
          "AddedAttachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortalAttachment"
            }
          },
          "RemovedAttachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortalAttachment"
            }
          },
          "NotifyClients" : {
            "type" : "boolean"
          }
        }
      },
      "PortalUserSummary" : {
        "type" : "object",
        "properties" : {
          "Portal" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "UserId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PortalUserState" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "FullName" : {
            "type" : "string"
          },
          "Email" : {
            "type" : "string"
          },
          "Jobs" : {
            "type" : "string"
          },
          "DateAdded" : {
            "type" : "string",
            "format" : "date-time"
          },
          "LastLogIn" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "CpRecruiterInfo" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "ShortName" : {
            "type" : "string"
          },
          "Title" : {
            "type" : "string"
          },
          "Company" : {
            "type" : "string"
          },
          "Email" : {
            "type" : "string"
          },
          "EmailHashTag" : {
            "type" : "string"
          }
        }
      },
      "ClientPortalOrgState" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "IsAvailable" : {
            "type" : "boolean"
          },
          "Activated" : {
            "type" : "boolean"
          },
          "Jobs" : {
            "$ref" : "#/components/schemas/PermissionCountDetail"
          },
          "UserLimit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "BrandedPortalsAllowed" : {
            "type" : "boolean"
          },
          "Permissions" : {
            "$ref" : "#/components/schemas/ClientPortalCustomizationPermissions"
          }
        }
      },
      "PermissionCountDetail" : {
        "type" : "object",
        "properties" : {
          "Limit" : {
            "type" : "integer",
            "description" : "DefaultLimit + Gift, Used in OrgState only",
            "format" : "int32"
          },
          "Usage" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ClientPortalCustomizationPermissions" : {
        "type" : "object",
        "properties" : {
          "Logo" : {
            "type" : "boolean"
          },
          "Theme" : {
            "type" : "boolean"
          },
          "Header" : {
            "type" : "boolean"
          },
          "Footer" : {
            "type" : "boolean"
          },
          "CustomizeFeedback" : {
            "type" : "boolean"
          },
          "SharedLinkSettings" : {
            "type" : "boolean"
          },
          "ContactFieldCustomization" : {
            "type" : "boolean"
          },
          "SummarySection" : {
            "type" : "boolean"
          },
          "WeeklyReport" : {
            "$ref" : "#/components/schemas/PermissionDetail"
          },
          "PortalJobLeads" : {
            "type" : "boolean"
          },
          "WeeklyReportEmail" : {
            "type" : "boolean"
          },
          "StageNameMappings" : {
            "type" : "boolean"
          },
          "VerbNameMappings" : {
            "type" : "boolean"
          },
          "Widget" : {
            "type" : "boolean"
          }
        }
      },
      "PermissionDetail" : {
        "type" : "object",
        "properties" : {
          "Allowed" : {
            "type" : "boolean"
          },
          "Customizable" : {
            "type" : "boolean"
          }
        }
      },
      "CpFeedbackRequest" : {
        "type" : "object",
        "properties" : {
          "PortalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Rating" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Notes" : {
            "type" : "string"
          },
          "Disposition" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "ContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "FeedbackDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ExperienceId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "CpSubmittalInfo" : {
        "type" : "object",
        "properties" : {
          "SubmittedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "SubmittedBy" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "JobId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "JobName" : {
            "type" : "string"
          },
          "JobLocation" : {
            "type" : "string"
          }
        }
      },
      "CpThingsToDo" : {
        "type" : "object",
        "properties" : {
          "TotalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "NextWorkflowItemId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "SubmittedBy" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "SubmittedOn" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        }
      },
      "CpUpdateUserRequest" : {
        "type" : "object",
        "properties" : {
          "FirstName" : {
            "type" : "string"
          },
          "LastName" : {
            "type" : "string"
          },
          "CurrentPassword" : {
            "type" : "string"
          },
          "Password" : {
            "type" : "string"
          },
          "ConvertMagicLink" : {
            "type" : "boolean"
          }
        }
      },
      "CpUpdateUserResponse" : {
        "type" : "object",
        "properties" : {
          "Success" : {
            "type" : "boolean"
          },
          "Message" : {
            "type" : "string"
          }
        }
      },
      "EntityColor" : {
        "type" : "object",
        "properties" : {
          "Hex" : {
            "type" : "string"
          },
          "IsDark" : {
            "type" : "boolean"
          },
          "Rgb" : {
            "$ref" : "#/components/schemas/EntityRgbColor"
          }
        }
      },
      "EntityRgbColor" : {
        "type" : "object",
        "properties" : {
          "Blue" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Green" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Red" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CpUserDetail" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "FirstName" : {
            "type" : "string"
          },
          "LastName" : {
            "type" : "string"
          },
          "FullName" : {
            "type" : "string"
          },
          "Email" : {
            "type" : "string"
          },
          "UserState" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "PortalUserDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortalUserSummary"
            }
          }
        }
      },
      "CpUserFeedback" : {
        "type" : "object",
        "properties" : {
          "ExperienceId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PortalId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "PortalUserId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "ContactId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "JobId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Rating" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ViewedOn" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "CheckUserStatusResult" : {
        "type" : "object",
        "properties" : {
          "ExistsInOtherOrg" : {
            "type" : "boolean"
          }
        }
      },
      "ComplianceSettingsPayload" : {
        "type" : "object",
        "properties" : {
          "consentMessage" : {
            "type" : "string"
          }
        }
      },
      "ConsentRequestPayload" : {
        "type" : "object",
        "properties" : {
          "contactId" : {
            "type" : "string"
          },
          "primaryEmail" : {
            "type" : "string"
          }
        }
      },
      "PlacementsResponseEnvelope[AssignmentEnvelope]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/AssignmentEnvelope"
          },
          "Error" : {
            "$ref" : "#/components/schemas/PlacementsError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "AssignmentEnvelope" : {
        "type" : "object",
        "properties" : {
          "Assignment" : {
            "$ref" : "#/components/schemas/AssignmentSummary"
          },
          "Worksite" : {
            "$ref" : "#/components/schemas/WorksiteSummary"
          }
        }
      },
      "AssignmentSummary" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PayRate" : {
            "type" : "number",
            "format" : "double"
          },
          "StartDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "EndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "EstimatedEndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CompanyName" : {
            "type" : "string"
          },
          "JobName" : {
            "type" : "string"
          },
          "AdditionalDetails" : {
            "type" : "string"
          },
          "EntityStatus" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "WorksiteSummary" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "DressCode" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5 ]
          },
          "OtherDetails" : {
            "type" : "string"
          },
          "PhoneNumber" : {
            "type" : "string"
          },
          "FormattedAddress" : {
            "type" : "string"
          },
          "PrimaryContact" : {
            "$ref" : "#/components/schemas/PrimaryContactSummary"
          }
        }
      },
      "PrimaryContactSummary" : {
        "type" : "object",
        "properties" : {
          "FirstName" : {
            "type" : "string"
          },
          "LastName" : {
            "type" : "string"
          },
          "PhoneNumber" : {
            "type" : "string"
          },
          "Email" : {
            "type" : "string"
          }
        }
      },
      "PlacementsResponseEnvelope[IEnumerable[AssignmentHeader]]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssignmentHeader"
            }
          },
          "Error" : {
            "$ref" : "#/components/schemas/PlacementsError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "AssignmentHeader" : {
        "type" : "object",
        "properties" : {
          "PlacementId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CompanyName" : {
            "type" : "string"
          },
          "JobName" : {
            "type" : "string"
          },
          "StartDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "EndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "EstimatedEndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "EntityStatus" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PasswordResetEmailRequestBody" : {
        "type" : "object",
        "properties" : {
          "Email" : {
            "type" : "string"
          }
        }
      },
      "TimekeepingResponseEnvelope[ExpenseSummary]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/ExpenseSummary"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "ExpenseSummary" : {
        "type" : "object",
        "properties" : {
          "ExpenseId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Amount" : {
            "type" : "number",
            "format" : "double"
          },
          "Quantity" : {
            "type" : "number",
            "format" : "double"
          },
          "Total" : {
            "type" : "number",
            "format" : "double"
          },
          "EntityStatus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ExpenseDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "AssignmentJobId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "ChargeCategoryId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "ChargeCodeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AssignmentId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "ExpenseTypeId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Notes" : {
            "type" : "string"
          },
          "Type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "ReceiptAttachmentId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "PayPeriodSheetId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PayPeriodId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ErrorCode" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 4, 8, 16, 32 ]
          },
          "RejectedReason" : {
            "type" : "string"
          }
        },
        "description" : "Lightweight representation of ExpenseEntry\r\nused for list-based display."
      },
      "TimekeepingError" : {
        "type" : "object",
        "properties" : {
          "ErrorType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 100, 900, 999 ]
          },
          "ErrorMessage" : {
            "type" : "string"
          },
          "ErrorTags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "StackTrace" : {
            "type" : "string"
          }
        }
      },
      "TimekeepingResponseEnvelope[Boolean]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "boolean"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "TimekeepingResponseEnvelope[ActionableTimekeepingItemsResponse]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/ActionableTimekeepingItemsResponse"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "ActionableTimekeepingItemsResponse" : {
        "type" : "object",
        "properties" : {
          "TimeCards" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "ExpenseEntries" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "description" : "A response containing a list of time recorder-actionable timekeeping\r\nitems, such as a draft or rejected time card."
      },
      "TimekeepingResponseEnvelope[PayPeriodSummary]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/PayPeriodSummary"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "PayPeriodSummary" : {
        "type" : "object",
        "properties" : {
          "PayPeriodId" : {
            "type" : "string",
            "description" : "The pay period encompassing all time",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PayPeriodSheetId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "StartOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "EndOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "TotalHours" : {
            "type" : "number",
            "description" : "Computed value of the sum of all hours recorded for a pay period.",
            "format" : "double"
          },
          "TotalExpenseAmount" : {
            "type" : "number",
            "description" : "Computed value of the sum of all expenses for a pay period.",
            "format" : "double"
          },
          "IsSubmitted" : {
            "type" : "boolean",
            "description" : "Gets whether a pay period has been submitted."
          },
          "CanSubmit" : {
            "type" : "boolean",
            "description" : "Gets whether a pay period can be submitted."
          },
          "ErrorCode" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 4, 8, 16 ]
          },
          "TimeCards" : {
            "type" : "array",
            "description" : "All time recorded for a pay period.",
            "items" : {
              "$ref" : "#/components/schemas/MobileTimeCard"
            }
          },
          "Expenses" : {
            "type" : "array",
            "description" : "All expenses recorded for a pay period.",
            "items" : {
              "$ref" : "#/components/schemas/ExpenseSummary"
            }
          }
        }
      },
      "MobileTimeCard" : {
        "type" : "object",
        "properties" : {
          "TimeCardId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "TotalHours" : {
            "type" : "number",
            "format" : "double"
          },
          "AssignmentId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "TimeTypeId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "PayPeriodSheetId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PayPeriodId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Title" : {
            "type" : "string"
          },
          "RejectedReason" : {
            "type" : "string"
          },
          "EntityStatus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Note" : {
            "type" : "string"
          },
          "ErrorCode" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 4, 8, 16, 32, 64 ]
          },
          "Time" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileTimeEntry"
            }
          }
        }
      },
      "MobileTimeEntry" : {
        "type" : "object",
        "properties" : {
          "TimeEntryId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AssignmentId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "TimeTypeId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "TimeCardId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "TotalHours" : {
            "type" : "number",
            "description" : "Calculated field summed from {Crelate.Platform.Modules.Timekeeping.Models.Mobile.MobileTimeEntry.TimeSlots}.",
            "format" : "double"
          },
          "TimeSlots" : {
            "$ref" : "#/components/schemas/DailyTimeSlot"
          },
          "EntityStatus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "TimeEntryErrorCode" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 4, 8 ]
          },
          "TimeCardErrorCode" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 4, 8, 16, 32, 64 ]
          },
          "AssociatedWorkDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "Lightweight representation of a single TimeEntry entity, typically parented to a {Crelate.Module.TimeKeeping.Models.Mobile.MobileTimeCard}."
      },
      "DailyTimeSlot" : {
        "type" : "object",
        "properties" : {
          "ClockIn1" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ClockOut1" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ClockIn2" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ClockOut2" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TimekeepingResponseEnvelope[Guid]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "TimekeepingResponseEnvelope[IList[PayPeriodHeader]]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PayPeriodHeader"
            }
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "PayPeriodHeader" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "EndOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Status" : {
            "type" : "integer",
            "description" : "Informs the mobile client of the status of a pay period.",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3 ]
          }
        },
        "description" : "Lightweight representation of a {Crelate.Platform.Data.Models.Entity.PayPeriodEntity} for querying."
      },
      "TimekeepingResponseEnvelope[MobileTimeCard]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/MobileTimeCard"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "TimekeepingResponseEnvelope[CrelateEntity]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "UpdateTimeCardNoteRequest" : {
        "type" : "object",
        "properties" : {
          "Note" : {
            "type" : "string"
          },
          "PayPeriodSheetId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "DailyTime" : {
        "type" : "object",
        "properties" : {
          "AssociatedWorkDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "PayPeriodSheetId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PayPeriodId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "TotalHours" : {
            "type" : "number",
            "description" : "Computed value of the sum of all {Crelate.Module.TimeKeeping.Models.Mobile.DailyTime.TimeSlices} for the {Crelate.Module.TimeKeeping.Models.Mobile.DailyTime.AssociatedWorkDate}.",
            "format" : "double"
          },
          "TimeSlices" : {
            "type" : "array",
            "description" : "All time recorded for the {Crelate.Module.TimeKeeping.Models.Mobile.DailyTime.AssociatedWorkDate}, separated by charge code.",
            "items" : {
              "$ref" : "#/components/schemas/DailyTimeSlice"
            }
          }
        },
        "description" : "Wrapper class summarizing all time entered for a day, aggregating data from a\r\n{Crelate.Platform.Data.Models.Entity.TimeCardEntity} and all associated\r\n{Crelate.Platform.Data.Models.Entity.TimeEntryEntity}."
      },
      "DailyTimeSlice" : {
        "type" : "object",
        "properties" : {
          "TimeEntryId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AssignmentId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "TimeTypeId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "TimeCardId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "TotalHours" : {
            "type" : "number",
            "description" : "Calculated field summed from {Crelate.Module.TimeKeeping.Models.Mobile.DailyTimeSlice.TimeSlots}.",
            "format" : "double"
          },
          "TimeSlots" : {
            "$ref" : "#/components/schemas/DailyTimeSlot"
          },
          "Notes" : {
            "type" : "string"
          },
          "EntityStatus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "TimeEntryErrorCode" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 4, 8 ]
          },
          "TimeCardErrorCode" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 4, 8, 16, 32, 64 ]
          }
        },
        "description" : "Represents one of possibly multiple time entries for a day,\r\nwhere each entry corresponds to one charge code."
      },
      "TimekeepingResponseEnvelope[DailyTime]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/DailyTime"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "DeleteTimeEntryRequest" : {
        "type" : "object",
        "properties" : {
          "TimeEntryId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PayPeriodSheetId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "TimeCardId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AssociatedWorkDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "DiceSearchAuthorizationRequest" : {
        "type" : "object",
        "properties" : {
          "Username" : {
            "type" : "string"
          },
          "Password" : {
            "type" : "string"
          }
        }
      },
      "Credential" : {
        "type" : "object",
        "properties" : {
          "CreatedBy" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CreatedOnSystem" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Details" : {
            "type" : "string"
          },
          "Type" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "Inactive" : {
            "type" : "boolean"
          },
          "IsAuthenticated" : {
            "type" : "boolean"
          },
          "IsPrimary" : {
            "type" : "boolean"
          },
          "IsShared" : {
            "type" : "boolean"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Name" : {
            "type" : "string"
          },
          "OauthDataStore" : {
            "type" : "string"
          },
          "Password" : {
            "type" : "string"
          },
          "RefreshToken" : {
            "type" : "string"
          },
          "RefreshTokenExpiresOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ServerPassword" : {
            "type" : "string"
          },
          "ServerPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ServerUrl" : {
            "type" : "string"
          },
          "ServerUsername" : {
            "type" : "string"
          },
          "Source" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "Token" : {
            "type" : "string"
          },
          "TokenExpiresOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "UpdatedBy" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "User" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "Username" : {
            "type" : "string"
          },
          "UserNotified" : {
            "type" : "boolean"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "OrgId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ChangedProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RepoRecordLookup" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Title" : {
            "type" : "string"
          }
        }
      },
      "DiceImportResponse" : {
        "type" : "object",
        "properties" : {
          "ContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "DuplicateFound" : {
            "type" : "boolean"
          }
        }
      },
      "DiceSearchResponse" : {
        "type" : "object",
        "properties" : {
          "meta" : {
            "$ref" : "#/components/schemas/DiceSearchMetaResponse"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiceSearchDataResponse"
            }
          }
        }
      },
      "DiceSearchMetaResponse" : {
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DiceSearchDataResponse" : {
        "type" : "object",
        "properties" : {
          "crelateSearchSource" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "currentJobTitle" : {
            "type" : "string"
          },
          "imageUrl" : {
            "type" : "string"
          },
          "likelyToMove" : {
            "type" : "boolean"
          },
          "likelyToMoveScore" : {
            "type" : "number",
            "format" : "double"
          },
          "hasVeteranStatus" : {
            "type" : "boolean"
          },
          "isThirdParty" : {
            "type" : "boolean"
          },
          "yearsOfExperience" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fullName" : {
            "type" : "string"
          },
          "dateLastActive" : {
            "type" : "string"
          },
          "dateResumeLastUpdated" : {
            "type" : "string"
          },
          "workPermits" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasEmail" : {
            "type" : "boolean"
          },
          "hasPhone" : {
            "type" : "boolean"
          },
          "workPermitLocations" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "interests" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "bio" : {
            "type" : "string"
          },
          "workPerferences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiceDataWorkPerferencesResponse"
            }
          },
          "skills" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiceSkill"
            }
          },
          "socialProfiles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiceSocialProfile"
            }
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiceLocation"
            }
          },
          "education" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiceEducation"
            }
          },
          "experience" : {
            "$ref" : "#/components/schemas/DiceExperienceResponseObject"
          },
          "securityAllowance" : {
            "$ref" : "#/components/schemas/DiceSecurityAllowance"
          },
          "languages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiceLanguages"
            }
          }
        }
      },
      "DiceDataWorkPerferencesResponse" : {
        "type" : "object",
        "properties" : {
          "employmentType" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "willingToRelocate" : {
            "type" : "boolean"
          },
          "annualSalary" : {
            "$ref" : "#/components/schemas/DiceWage"
          },
          "hourlyWage" : {
            "$ref" : "#/components/schemas/DiceWage"
          }
        }
      },
      "DiceSkill" : {
        "type" : "object",
        "properties" : {
          "score" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastUsed" : {
            "type" : "integer",
            "format" : "int64"
          },
          "yearsUsed" : {
            "type" : "integer",
            "format" : "int32"
          },
          "skill" : {
            "type" : "string"
          }
        }
      },
      "DiceSocialProfile" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string"
          },
          "icon_64" : {
            "type" : "string"
          }
        }
      },
      "DiceLocation" : {
        "type" : "object",
        "properties" : {
          "countryCode" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "longitude" : {
            "type" : "integer",
            "format" : "int64"
          },
          "source" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "latitude" : {
            "type" : "integer",
            "format" : "int64"
          },
          "postalCode" : {
            "type" : "string"
          }
        }
      },
      "DiceEducation" : {
        "type" : "object",
        "properties" : {
          "org" : {
            "type" : "string"
          },
          "degree" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "DiceExperienceResponseObject" : {
        "type" : "object",
        "properties" : {
          "current" : {
            "$ref" : "#/components/schemas/DiceExperienceObject"
          },
          "history" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiceExperienceObject"
            }
          }
        }
      },
      "DiceSecurityAllowance" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "status" : {
            "type" : "boolean"
          },
          "issuingAgency" : {
            "type" : "string"
          },
          "polygraph" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          }
        }
      },
      "DiceLanguages" : {
        "type" : "object",
        "properties" : {
          "competency" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "DiceWage" : {
        "type" : "object",
        "properties" : {
          "min" : {
            "type" : "integer",
            "format" : "int64"
          },
          "max" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string"
          }
        }
      },
      "DiceExperienceObject" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "org" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "periodStart" : {
            "$ref" : "#/components/schemas/DiceDate"
          },
          "periodEnd" : {
            "$ref" : "#/components/schemas/DiceDate"
          }
        }
      },
      "DiceDate" : {
        "type" : "object",
        "properties" : {
          "year" : {
            "type" : "integer",
            "format" : "int32"
          },
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "day" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EmailCampaignRecipientResponse" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "Recipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmailCampaignRecipientExtended"
            }
          },
          "TotalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EmailCampaignRecipientExtended" : {
        "type" : "object",
        "properties" : {
          "ViewId" : {
            "type" : "string",
            "description" : "This is the view that this particular contact resides in. Can be null if selected directly for a bulk email",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ContactId" : {
            "type" : "string",
            "description" : "Contact Id of the recipient",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Email" : {
            "type" : "string",
            "description" : "Email Address for this recipient"
          },
          "JobId" : {
            "type" : "string",
            "description" : "Id of the job",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string",
            "description" : "Name of the recipient"
          },
          "Type" : {
            "type" : "integer",
            "description" : "Type of the source for this recipient",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4 ]
          },
          "WorkflowItemStatusId" : {
            "type" : "string",
            "description" : "Id of the job stage",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        },
        "description" : "This represents a recipient for an Email Campaign"
      },
      "EmailCampaignChartData" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "type" : "string"
          },
          "value" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EmailCampaignStreamResponse" : {
        "type" : "object",
        "properties" : {
          "Campaigns" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "MoreRecords" : {
            "type" : "boolean"
          }
        }
      },
      "EmailCampaignViewInfo" : {
        "type" : "object",
        "properties" : {
          "ViewId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ViewTitle" : {
            "type" : "string"
          },
          "ViewTypeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "EmailCampaignOrgState" : {
        "type" : "object",
        "properties" : {
          "Activated" : {
            "type" : "boolean"
          },
          "DailyMessageAllotment" : {
            "type" : "integer",
            "format" : "int32"
          },
          "DailyMessageRemaining" : {
            "type" : "integer",
            "format" : "int32"
          },
          "DailyMessageUsed" : {
            "type" : "integer",
            "format" : "int32"
          },
          "HasFinalVerifiedDomain" : {
            "type" : "boolean"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "LastPeriodResetOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Name" : {
            "type" : "string"
          },
          "NextDailyResetOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "NextPeriodResetOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "PeriodMessageAllotment" : {
            "type" : "integer",
            "format" : "int32"
          },
          "PeriodMessageRemaining" : {
            "type" : "integer",
            "format" : "int32"
          },
          "PeriodMessageUsed" : {
            "type" : "integer",
            "format" : "int32"
          },
          "RecipientAllotment" : {
            "type" : "integer",
            "format" : "int32"
          },
          "TemplateAttachmentsEnabled" : {
            "type" : "boolean",
            "description" : "If this is true, allows the org to include attachments set on email templates in their Email Campaign emails"
          },
          "ModuleTier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ModuleTierName" : {
            "type" : "string"
          }
        }
      },
      "EmailCampaignAddSearchRecipientsDetail" : {
        "type" : "object",
        "properties" : {
          "CampaignId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "RecipientCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Search" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "EmailcampaignAddSearchRecipientsResponse" : {
        "type" : "object",
        "properties" : {
          "MoreRecords" : {
            "type" : "boolean"
          },
          "RecordsAdded" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EmailCampaignTestTemplate" : {
        "type" : "object",
        "properties" : {
          "attachmentIds" : {
            "$ref" : "#/components/schemas/MultiEntityLookup"
          },
          "Body" : {
            "type" : "string"
          },
          "ContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "From" : {
            "type" : "string"
          },
          "RegardingId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Subject" : {
            "type" : "string"
          },
          "To" : {
            "type" : "string"
          }
        }
      },
      "EnrichSaveResponse" : {
        "type" : "object",
        "properties" : {
          "DuplicateId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Status" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1, 2, 3, 4 ]
          }
        }
      },
      "ValidateEntityMergeRequest" : {
        "type" : "object",
        "properties" : {
          "EntityName" : {
            "type" : "string"
          },
          "LeftTargetId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "RightTargetId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "ChangeRecordStatusRequestOptions" : {
        "type" : "object",
        "properties" : {
          "Reason" : {
            "type" : "string"
          }
        }
      },
      "ApiResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 100 ]
          },
          "message" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "EntityStatusDetail" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "MeaningId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "SortOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Color" : {
            "type" : "string"
          },
          "Value" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Meaning" : {
            "type" : "integer",
            "format" : "int32"
          },
          "AvailableForCreate" : {
            "type" : "boolean"
          },
          "VisibilityOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3 ]
          },
          "StyleOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "ValidTransitionMeanings" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "AllowContactOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3 ]
          },
          "ParentStatusId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "ParentStatusValue" : {
            "type" : "integer",
            "format" : "int32"
          },
          "TargetWorkflowTypeId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "ExternalPrimaryKey" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ChildStatuses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EntityStatusDetail"
            }
          },
          "IsSystemManaged" : {
            "type" : "boolean",
            "description" : "This is a virtual field, TODO: add this column into the database \r\nNOTE: Status Values of 200-255 are reserved for system statuses"
          }
        }
      },
      "EntityStatusBulkProcessRequest" : {
        "type" : "object",
        "properties" : {
          "RecordIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          },
          "Status" : {
            "type" : "integer",
            "format" : "int32"
          },
          "EntityName" : {
            "type" : "string"
          },
          "Reason" : {
            "type" : "string"
          }
        }
      },
      "SingleEntityPayload" : {
        "type" : "object",
        "properties" : {
          "EntityName" : {
            "type" : "string",
            "description" : "This is the type of entity for every entity in the payload"
          },
          "ActionPayload" : {
            "$ref" : "#/components/schemas/CrelateActionPayload"
          }
        }
      },
      "CrelateActionPayload" : {
        "type" : "object",
        "properties" : {
          "_tempIdMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/CrelateAction"
            }
          },
          "Actions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CrelateAction"
            }
          },
          "AutoPopulateLookups" : {
            "type" : "boolean"
          }
        },
        "description" : "A batch of CrelateEntities that can be sent to a Create or Update"
      },
      "CrelateAction" : {
        "type" : "object",
        "properties" : {
          "ActionType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3 ]
          },
          "SqlStatement" : {
            "type" : "string"
          },
          "StoredProcName" : {
            "type" : "string"
          },
          "SqlParameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "Entity" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "IsTempId" : {
            "type" : "boolean",
            "description" : "Set IsTempId to true to indicate that the Id on an entity being created in this action is a \"temporary\"\r\nid that should be replaced with a new Id when processing the payload. Other entities in the payload can \r\nthen reference the temporary id in a lookup, which lets you reference an entity that will be created in\r\nthe same payload, similar to using \"AutoLinkToParentPayloadEntity\", but this does not require the \r\nreferenced entity to be the first entity in the payload (though it does require the referenced record to\r\nbe *before* the referencing record)."
          },
          "SkipDupeDetection" : {
            "type" : "boolean",
            "description" : "Disable duplicate detection while processing just this action"
          },
          "DisableAutoCreatedOrModifiedFields" : {
            "type" : "boolean",
            "description" : "Disable auto populating the CreatedOn, ModifiedOn, CreatedById, and ModifiedById fields (just for this action)"
          }
        }
      },
      "EsignatureSaveRequest" : {
        "type" : "object",
        "properties" : {
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "EsignatureRequestId" : {
            "type" : "string"
          },
          "Title" : {
            "type" : "string"
          },
          "Message" : {
            "type" : "string"
          },
          "Recipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureRequestRecipient"
            }
          },
          "ArtifactTypeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ParentEntityId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "ProcessItemId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        },
        "description" : "database request"
      },
      "EsignatureRequestRecipient" : {
        "type" : "object",
        "properties" : {
          "TargetEntityId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "TargetEntityType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 150, 160, 161, 162, 163, 165, 220, 221, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 350, 500, 501, 502, 510, 511, 512, 513, 514, 700, 701, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 850, 851, 900, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 10000, 10001, 10002, 10003, 11000 ]
          },
          "Name" : {
            "type" : "string"
          },
          "EmailAddress" : {
            "type" : "string"
          },
          "EmailLookup" : {
            "$ref" : "#/components/schemas/MultiEntityLookup"
          },
          "SignOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          }
        }
      },
      "EsignatureResponseEnvelope[SaveEsignatureResponse]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/SaveEsignatureResponse"
          },
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Error" : {
            "$ref" : "#/components/schemas/EsignatureError"
          }
        }
      },
      "SaveEsignatureResponse" : {
        "type" : "object",
        "properties" : {
          "EsignatureId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ArtifactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "EsignatureError" : {
        "type" : "object",
        "properties" : {
          "ErrorType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 999 ]
          },
          "ErrorMessage" : {
            "type" : "string"
          },
          "ErrorTags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "StackTrace" : {
            "type" : "string"
          }
        }
      },
      "EsignatureResponseEnvelope[Boolean]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "boolean"
          },
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Error" : {
            "$ref" : "#/components/schemas/EsignatureError"
          }
        }
      },
      "EsignatureResponseEnvelope[EsignatureSummary]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/EsignatureSummary"
          },
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Error" : {
            "$ref" : "#/components/schemas/EsignatureError"
          }
        }
      },
      "EsignatureSummary" : {
        "type" : "object",
        "properties" : {
          "Esignature" : {
            "$ref" : "#/components/schemas/Esignature"
          },
          "Attachments" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "Recipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureRecipient"
            }
          }
        }
      },
      "Esignature" : {
        "type" : "object",
        "properties" : {
          "Attachment" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "Attachments" : {
            "$ref" : "#/components/schemas/RepoRecordMultiLookup"
          },
          "CreatedBy" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CreatedOnSystem" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Provider" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "LastSyncDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "LastErrorMessage" : {
            "type" : "string"
          },
          "Message" : {
            "type" : "string"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Parent" : {
            "$ref" : "#/components/schemas/RepoRecordLookupAny"
          },
          "ProcessItem" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "Sender" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "Source" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "Status" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 10, 20, 30, 40, 50, 60, 70, 999 ]
          },
          "Title" : {
            "type" : "string"
          },
          "UpdatedBy" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "OrgId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ChangedProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "EsignatureRecipient" : {
        "type" : "object",
        "properties" : {
          "CreatedBy" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "CreatedOnSystem" : {
            "type" : "string",
            "format" : "date-time"
          },
          "EmailAddress" : {
            "type" : "string"
          },
          "Esignature" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Name" : {
            "type" : "string"
          },
          "SignOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Source" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "Status" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 10, 20, 30, 40, 50, 60, 70, 999 ]
          },
          "Target" : {
            "$ref" : "#/components/schemas/RepoRecordLookupAny"
          },
          "Type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "UpdatedBy" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "OrgId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ChangedProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RepoRecordMultiLookup" : {
        "type" : "object",
        "properties" : {
          "Lookups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RepoRecordLookup"
            }
          }
        }
      },
      "RepoRecordLookupAny" : {
        "type" : "object",
        "properties" : {
          "Type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 138, 139, 140, 150, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 500, 501, 502, 510, 511, 512, 700, 701, 803, 900, 10000, 10001, 10002, 10003 ]
          },
          "TypeName" : {
            "type" : "string",
            "readOnly" : true
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Title" : {
            "type" : "string"
          }
        }
      },
      "EsignatureResponseEnvelope[EsignatureProviderAccount]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/EsignatureProviderAccount"
          },
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Error" : {
            "$ref" : "#/components/schemas/EsignatureError"
          }
        }
      },
      "EsignatureProviderAccount" : {
        "type" : "object",
        "properties" : {
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ProviderAccountId" : {
            "type" : "string"
          },
          "EmailAddress" : {
            "type" : "string"
          },
          "ApiRequestsRemaining" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EsignatureResponseEnvelope[EsignatureDraft]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/EsignatureDraft"
          },
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Error" : {
            "$ref" : "#/components/schemas/EsignatureError"
          }
        }
      },
      "EsignatureDraft" : {
        "type" : "object",
        "properties" : {
          "SignatureRequestId" : {
            "type" : "string"
          },
          "ClaimUrl" : {
            "type" : "string"
          }
        }
      },
      "EsignatureProviderState" : {
        "type" : "object",
        "properties" : {
          "ClientId" : {
            "type" : "string"
          },
          "CcLimit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "SignerLimit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "IsTest" : {
            "type" : "boolean"
          }
        }
      },
      "EsignatureProviderCreateTemplateRequest" : {
        "type" : "object",
        "properties" : {
          "Roles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureTemplateRequestRole"
            }
          },
          "FileOrder" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "Files" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureFile"
            }
          },
          "FileUrls" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "BlobId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "Title" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "Subject" : {
            "type" : "string"
          },
          "Message" : {
            "type" : "string"
          },
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "TemplateId" : {
            "type" : "string"
          },
          "MergeFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureMergeField"
            }
          }
        }
      },
      "EsignatureTemplateRequestRole" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "SignOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          }
        }
      },
      "EsignatureFile" : {
        "type" : "object",
        "properties" : {
          "Content" : {
            "$ref" : "#/components/schemas/Stream"
          },
          "ContentType" : {
            "type" : "string"
          },
          "FileName" : {
            "type" : "string"
          },
          "SortOrder" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EsignatureMergeField" : {
        "type" : "object",
        "properties" : {
          "Title" : {
            "type" : "string"
          },
          "Type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          }
        },
        "description" : "Used when creating a template"
      },
      "Stream" : {
        "type" : "object",
        "properties" : {
          "__identity" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "EsignatureResponseEnvelope[SaveTemplateResponse]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/SaveTemplateResponse"
          },
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Error" : {
            "$ref" : "#/components/schemas/EsignatureError"
          }
        }
      },
      "SaveTemplateResponse" : {
        "type" : "object",
        "properties" : {
          "TemplateId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "EsignatureResponseEnvelope[EsignatureTemplate]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/EsignatureTemplate"
          },
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Error" : {
            "$ref" : "#/components/schemas/EsignatureError"
          }
        }
      },
      "EsignatureTemplate" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "EsignatureProviderId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Title" : {
            "type" : "string"
          },
          "DefaultSubject" : {
            "type" : "string"
          },
          "DefaultBody" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "SignerRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureTemplateRole"
            }
          },
          "CcRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureTemplateRole"
            }
          },
          "Documents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureTemplateDocument"
            }
          },
          "FileBundleUrl" : {
            "type" : "string"
          },
          "CustomFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureCustomField"
            }
          },
          "Metadata" : {
            "$ref" : "#/components/schemas/EsignatureTemplateMetadata"
          }
        }
      },
      "EsignatureTemplateRole" : {
        "type" : "object",
        "properties" : {
          "RoleName" : {
            "type" : "string"
          },
          "SortOrder" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EsignatureTemplateDocument" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "SortOrder" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EsignatureCustomField" : {
        "type" : "object",
        "properties" : {
          "Title" : {
            "type" : "string"
          },
          "Value" : {
            "type" : "string"
          }
        },
        "description" : "Used to add values to the merge field"
      },
      "EsignatureTemplateMetadata" : {
        "type" : "object",
        "properties" : {
          "Version" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          }
        }
      },
      "EsignatureResponseEnvelope[List[EsignatureTemplate]]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureTemplate"
            }
          },
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Error" : {
            "$ref" : "#/components/schemas/EsignatureError"
          }
        }
      },
      "EsignatureResponseEnvelope[EmbeddedTemplate]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/EmbeddedTemplate"
          },
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Error" : {
            "$ref" : "#/components/schemas/EsignatureError"
          }
        }
      },
      "EmbeddedTemplate" : {
        "type" : "object",
        "properties" : {
          "TemplateId" : {
            "type" : "string",
            "description" : "ID of the Template."
          },
          "EditUrl" : {
            "type" : "string",
            "description" : "Editing URL to be used in the JavaScript SDK for Embedded Templates."
          },
          "ExpiresAt" : {
            "type" : "integer",
            "description" : "Unix timestamp when this URL will expire.",
            "format" : "int32"
          }
        },
        "description" : "Information provided for use in the HelloSign JavaScript library."
      },
      "EsignatureTemplateCreateDraftRequest" : {
        "type" : "object",
        "properties" : {
          "EsignatureProvider" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Template" : {
            "$ref" : "#/components/schemas/EsignatureTemplate"
          },
          "Recipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureTemplateRequestRecipient"
            }
          },
          "CustomFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureCustomField"
            }
          },
          "ParentEntityId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Files" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EsignatureFile"
            }
          },
          "Metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "RequesterEmailAddress" : {
            "type" : "string"
          },
          "Title" : {
            "type" : "string"
          },
          "Message" : {
            "type" : "string"
          }
        }
      },
      "EsignatureTemplateRequestRecipient" : {
        "type" : "object",
        "properties" : {
          "RoleName" : {
            "type" : "string"
          },
          "TargetEntityId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "TargetEntityType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 150, 160, 161, 162, 163, 165, 220, 221, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 350, 500, 501, 502, 510, 511, 512, 513, 514, 700, 701, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 850, 851, 900, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 10000, 10001, 10002, 10003, 11000 ]
          },
          "Name" : {
            "type" : "string"
          },
          "EmailAddress" : {
            "type" : "string"
          },
          "EmailLookup" : {
            "$ref" : "#/components/schemas/MultiEntityLookup"
          },
          "SignOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          }
        }
      },
      "SaveExtCredentialResponse" : {
        "type" : "object",
        "properties" : {
          "Authorized" : {
            "type" : "boolean"
          },
          "Created" : {
            "type" : "boolean"
          },
          "Message" : {
            "type" : "string"
          }
        }
      },
      "ExtReferralRequest" : {
        "type" : "object",
        "properties" : {
          "CompanyName" : {
            "type" : "string"
          },
          "ContactName" : {
            "type" : "string"
          },
          "Email" : {
            "type" : "string"
          },
          "Phone" : {
            "type" : "string"
          },
          "State" : {
            "type" : "string"
          }
        }
      },
      "SparkHireInterviewRequest" : {
        "type" : "object",
        "properties" : {
          "crelate_details" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SparkHireCrelateDetails"
            }
          },
          "interview_request_details" : {
            "$ref" : "#/components/schemas/SparkHireInterviewRequestDetails"
          }
        }
      },
      "SparkHireCrelateDetails" : {
        "type" : "object",
        "properties" : {
          "parentId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "SparkHireInterviewRequestDetails" : {
        "type" : "object",
        "properties" : {
          "assigned_to" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SparkHireAssignedToRequest"
            }
          },
          "email_message" : {
            "type" : "string"
          },
          "interview_question_set" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "type" : {
            "type" : "string"
          },
          "job_post" : {
            "$ref" : "#/components/schemas/SparkHireJobPostRequest"
          },
          "questions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SparkHireQuestion"
            }
          },
          "scheduled_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "timezone" : {
            "type" : "string"
          }
        }
      },
      "SparkHireAssignedToRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "SparkHireJobPostRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "SparkHireQuestion" : {
        "type" : "object",
        "properties" : {
          "takes" : {
            "type" : "integer",
            "format" : "int64"
          },
          "text" : {
            "type" : "string"
          },
          "think_time" : {
            "type" : "string"
          },
          "time_limit" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "ExtIntegrationResponse[SparkHireInterviewResponse]" : {
        "type" : "object",
        "properties" : {
          "Success" : {
            "type" : "boolean"
          },
          "Error" : {
            "type" : "boolean"
          },
          "Message" : {
            "type" : "string"
          },
          "Data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SparkHireResponseInfo[SparkHireInterviewResponse]"
            }
          }
        }
      },
      "SparkHireResponseInfo[SparkHireInterviewResponse]" : {
        "type" : "object",
        "properties" : {
          "AdditionalDetails" : {
            "$ref" : "#/components/schemas/SparkHireInterviewResponse"
          },
          "ExternalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "ParentId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "SparkHireInterviewResponse" : {
        "type" : "object",
        "properties" : {
          "assigned_to" : {
            "$ref" : "#/components/schemas/SparkHireAssignedTo"
          },
          "completed_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "job_post" : {
            "$ref" : "#/components/schemas/SparkHireJobResponse"
          },
          "scheduled_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "share_link" : {
            "$ref" : "#/components/schemas/SparkHireShareLink"
          },
          "status" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4 ]
          },
          "type" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "SparkHireAssignedTo" : {
        "type" : "object",
        "properties" : {
          "avatar" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "SparkHireJobResponse" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "created_by" : {
            "$ref" : "#/components/schemas/SparkHireCompany"
          },
          "name" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "status_updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "title" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "SparkHireShareLink" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "uuid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "status" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_by" : {
            "$ref" : "#/components/schemas/SparkHireAssignedTo"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "SparkHireCompany" : {
        "type" : "object",
        "properties" : {
          "avatar" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "SparkHireResponseInfo[SparkHireJobResponse]" : {
        "type" : "object",
        "properties" : {
          "AdditionalDetails" : {
            "$ref" : "#/components/schemas/SparkHireJobResponse"
          },
          "ExternalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "ParentId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "SparkHireResponseInfo[SparkHireQuestionSetResponse]" : {
        "type" : "object",
        "properties" : {
          "AdditionalDetails" : {
            "$ref" : "#/components/schemas/SparkHireQuestionSetResponse"
          },
          "ExternalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "ParentId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "SparkHireQuestionSetResponse" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "questions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SparkHireQuestion"
            }
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "SparkHireUserResponse" : {
        "type" : "object",
        "properties" : {
          "avatar" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "ExtResumeOrgState" : {
        "type" : "object",
        "properties" : {
          "Credits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Eligible" : {
            "type" : "boolean"
          },
          "ExternalId" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "LastRechargeOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Name" : {
            "type" : "string"
          },
          "PackageActivated" : {
            "type" : "boolean"
          },
          "PackageId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PackageStatus" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1, 91, 92 ]
          },
          "PackageStatusName" : {
            "type" : "string"
          },
          "RechargeBehavior" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1, 2 ]
          },
          "RechargeBehaviorName" : {
            "type" : "string"
          },
          "ProductCode" : {
            "type" : "string"
          },
          "RechargeQuantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "RechargeTotal" : {
            "type" : "number",
            "format" : "double"
          },
          "RemainingCredits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "UsedCredits" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ExtResumePackagePricing" : {
        "type" : "object",
        "properties" : {
          "ProductCode" : {
            "type" : "string"
          },
          "Quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Rate" : {
            "type" : "number",
            "format" : "double"
          },
          "Total" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "ExtResumeSearchResponse" : {
        "type" : "object",
        "properties" : {
          "Candidates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtResumeCandidate"
            }
          },
          "More" : {
            "type" : "boolean"
          },
          "Hits" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ExtResumeCandidate" : {
        "type" : "object",
        "properties" : {
          "FirstName" : {
            "type" : "string"
          },
          "Hometown" : {
            "type" : "string"
          },
          "LatestJobTitle" : {
            "type" : "string"
          },
          "MaxSalary" : {
            "type" : "string"
          },
          "MinSalary" : {
            "type" : "string"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "PreviousJobTitles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "Skills" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "Source" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          },
          "SourceName" : {
            "type" : "string"
          },
          "Summary" : {
            "type" : "string"
          },
          "Token" : {
            "type" : "string"
          },
          "UnlockStatus" : {
            "type" : "string"
          },
          "WillingToRelocate" : {
            "type" : "string"
          },
          "Distance" : {
            "type" : "string"
          },
          "WorkExperience" : {
            "type" : "string"
          },
          "EducationLevel" : {
            "type" : "string"
          },
          "DrivingLicense" : {
            "type" : "string"
          },
          "DesiredJobTitle" : {
            "type" : "string"
          }
        }
      },
      "ExtResumePackageUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "RechargeBehavior" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1, 2 ]
          },
          "RechargeProductId" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ExtResumeViewResponse" : {
        "type" : "object",
        "properties" : {
          "Content" : {
            "type" : "string"
          },
          "DesiredJobTitle" : {
            "type" : "string"
          },
          "DriversLicense" : {
            "type" : "boolean"
          },
          "EducationalLevel" : {
            "type" : "string"
          },
          "FirstName" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "JobType" : {
            "type" : "string"
          },
          "LastUpdatedUtc" : {
            "type" : "string"
          },
          "LatestJobTitle" : {
            "type" : "string"
          },
          "Latitude" : {
            "type" : "number",
            "format" : "double"
          },
          "Locality" : {
            "type" : "string"
          },
          "Longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "MaxExpectedSalary" : {
            "type" : "string"
          },
          "MinExpectedSalary" : {
            "type" : "string"
          },
          "Skills" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "Source" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1 ]
          },
          "SourceName" : {
            "type" : "string"
          },
          "State" : {
            "type" : "string"
          },
          "Token" : {
            "type" : "string"
          },
          "WillingToRelocate" : {
            "type" : "string"
          },
          "WillingToTravel" : {
            "type" : "integer",
            "format" : "int64"
          },
          "WorkExperience" : {
            "type" : "string"
          },
          "Zip" : {
            "type" : "string"
          }
        }
      },
      "VerbAccessRequest" : {
        "type" : "object",
        "properties" : {
          "Interviewers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EntityLookup"
            }
          },
          "VerbId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "InterviewInfo" : {
        "type" : "object",
        "properties" : {
          "Interview" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "Form" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "Contact" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "Documents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InterviewDocument"
            }
          },
          "Job" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "SchedulerId" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "InterviewDocument" : {
        "type" : "object",
        "properties" : {
          "RecordId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Name" : {
            "type" : "string"
          },
          "TypeId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Details" : {
            "type" : "string",
            "description" : "Extra details about the doc - Filename and whether it's the primary resume\r\n(this gets shown as a tooltip on the document tab)"
          },
          "SortOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "FileName" : {
            "type" : "string"
          }
        }
      },
      "OpportunityInterviewLoopResponse" : {
        "type" : "object",
        "properties" : {
          "ErrorMessage" : {
            "type" : "string"
          },
          "InterviewLoopTemplateId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "WorkFlowItemId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "QuestionItem" : {
        "type" : "object",
        "properties" : {
          "ResponseId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Value" : {
            "type" : "string"
          },
          "Question" : {
            "type" : "string"
          },
          "ProcessTitle" : {
            "type" : "string"
          },
          "Rating" : {
            "type" : "number",
            "format" : "float"
          },
          "FormRating" : {
            "type" : "number",
            "format" : "float"
          },
          "OnFormId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Category" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Activity" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Interviewer" : {
            "$ref" : "#/components/schemas/EntityLookup"
          }
        }
      },
      "ValidationResult" : {
        "type" : "object",
        "properties" : {
          "IsValid" : {
            "type" : "boolean"
          },
          "ErrorMessage" : {
            "type" : "string"
          }
        },
        "description" : "Generic validation result"
      },
      "CompanyAccountingSummary" : {
        "type" : "object",
        "properties" : {
          "AccountBalance" : {
            "type" : "number",
            "format" : "double"
          },
          "YTDSales" : {
            "type" : "number",
            "format" : "double"
          },
          "YTDPayments" : {
            "type" : "number",
            "format" : "double"
          },
          "LifetimeSales" : {
            "type" : "number",
            "format" : "double"
          },
          "LifetimePayments" : {
            "type" : "number",
            "format" : "double"
          },
          "FormattedAccountBalance" : {
            "type" : "string"
          },
          "FormattedYTDSales" : {
            "type" : "string"
          },
          "FormattedYTDPayments" : {
            "type" : "string"
          },
          "FormattedLifetimeSales" : {
            "type" : "string"
          },
          "FormattedLifetimePayments" : {
            "type" : "string"
          }
        }
      },
      "InvoiceGenerationRun" : {
        "type" : "object",
        "properties" : {
          "OrganizationId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "GenerationBatch" : {
            "type" : "string"
          },
          "Mode" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "Filter" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "From" : {
            "type" : "string",
            "format" : "date-time"
          },
          "To" : {
            "type" : "string",
            "format" : "date-time"
          },
          "RunStartedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "UserId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "TotalItemsToProcess" : {
            "type" : "integer",
            "format" : "int32"
          },
          "TotalBillableItemsUpdated" : {
            "type" : "integer",
            "format" : "int32"
          },
          "TotalInvoicesCreated" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Completed" : {
            "type" : "boolean"
          },
          "AsyncJobId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "AgingReportRequest" : {
        "type" : "object",
        "properties" : {
          "AsOf" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Filter" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "sort" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AgingReportRequestSort"
            }
          },
          "skip" : {
            "type" : "integer",
            "format" : "int32"
          },
          "take" : {
            "type" : "integer",
            "format" : "int32"
          },
          "groupByInvoice" : {
            "type" : "boolean"
          },
          "accountIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          },
          "timezoneOffset" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AgingReportRequestSort" : {
        "type" : "object",
        "properties" : {
          "dir" : {
            "type" : "string"
          },
          "field" : {
            "type" : "string"
          }
        }
      },
      "AgingReportResult" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AgingReportRow"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AgingReportRow" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AccountName" : {
            "type" : "string"
          },
          "InvoiceId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "InvoiceNum" : {
            "type" : "string"
          },
          "B0_30" : {
            "type" : "number",
            "format" : "double"
          },
          "B31_60" : {
            "type" : "number",
            "format" : "double"
          },
          "B61_90" : {
            "type" : "number",
            "format" : "double"
          },
          "B91Plus" : {
            "type" : "number",
            "format" : "double"
          },
          "Total" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "InvoiceLineItem" : {
        "type" : "object",
        "properties" : {
          "Group" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "EntityType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 150, 160, 161, 162, 163, 165, 220, 221, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 350, 500, 501, 502, 510, 511, 512, 513, 514, 700, 701, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 850, 851, 900, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 10000, 10001, 10002, 10003, 11000 ]
          },
          "InvoiceId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "PO" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "ChargeCategoryId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Amount" : {
            "type" : "number",
            "format" : "double"
          },
          "Rate" : {
            "type" : "number",
            "format" : "double"
          },
          "Quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Total" : {
            "type" : "number",
            "format" : "double"
          },
          "TaxableItemType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "Percent" : {
            "type" : "number",
            "format" : "double"
          },
          "CorrectionOf" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "InvoiceMemoId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "AdjustmentType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "AdjustmentBillableItem" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "TaxAccountId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "IsNewItem" : {
            "type" : "boolean"
          },
          "IsDeletedItem" : {
            "type" : "boolean"
          },
          "NewEntity" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "IsCorrected" : {
            "type" : "boolean"
          },
          "HasError" : {
            "type" : "boolean"
          },
          "ErrorCodes" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 4, 8, 16 ]
          }
        },
        "description" : "Represents a line item on an invoice (billable item, adjustment, tax item, or correction)"
      },
      "UpdateInvoiceItemsRequest" : {
        "type" : "object",
        "properties" : {
          "Items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceLineItem"
            }
          },
          "Note" : {
            "type" : "string"
          },
          "SendUpdate" : {
            "type" : "boolean"
          }
        },
        "description" : "Request to update line items on an invoice"
      },
      "SendEmailResponse" : {
        "type" : "object",
        "properties" : {
          "ErrorCode" : {
            "type" : "integer",
            "description" : "MailBee Error Codes\r\n   0 - OK: Successful send\r\n  50 - SocketException: This occurs when the SMTP server/port are incorrect and MailBee cannot connect\r\n  54 - ConnectionRefused: A possible valid SMTP server, but it may require a SMTP server username/password\r\n 113 - BadCredential: This one usually doesn't happen on bad username/password, but it's possible\r\n 116 - SaslAnswerRejected: Authentication failed. This happens when the username/password cannot authenticate\r\n9000 - CUSTOM The Email/Invite is currently sending.  When complete, there will be an ErrorCode or 0 for OK.  This should only really appear on the Experience in the EmailStatus field\r\n9001 - CUSTOM Unable to Send because there are no valid To addresses\r\n9002 - CUSTOM Stopped Send because there is no content to send i.e. no email body\r\n9999 - CUSTOM Current User is Unauthorized to use the credential that they have selected",
            "format" : "int32"
          },
          "InvalidEmails" : {
            "type" : "array",
            "description" : "EmailAddresses that fail to pass MailBee's email address validation",
            "items" : {
              "type" : "string"
            }
          },
          "UnsubscribedEmails" : {
            "type" : "array",
            "description" : "Email Addresses that have been unsubscribed from Crelate Emails",
            "items" : {
              "type" : "string"
            }
          },
          "ComplainedEmails" : {
            "type" : "array",
            "description" : "Email Addresses that have complained about Crelate Emails",
            "items" : {
              "type" : "string"
            }
          },
          "BouncedEmails" : {
            "type" : "array",
            "description" : "Email Addresses that have bounced from Crelate Emails",
            "items" : {
              "type" : "string"
            }
          },
          "ExperienceId" : {
            "type" : "string",
            "description" : "Id of the experience that represents the sent email",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CredentialId" : {
            "type" : "string",
            "description" : "Id of the Credential entity in Crelate",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CredentialTypeId" : {
            "type" : "string",
            "description" : "This is the CredentialTypeId  of the Credential",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "CredentialUserName" : {
            "type" : "string",
            "description" : "Username of the credential.  For emails, this is the email address of the account"
          },
          "CredentialUserId" : {
            "type" : "string",
            "description" : "User Id of the owner of the Credential",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "EnqueueSendInvoiceBatchData" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "InvoiceIds" : {
            "$ref" : "#/components/schemas/MultiEntityLookup"
          },
          "FromDate" : {
            "type" : "string",
            "description" : "Beginning of date range on InvoiceDate to query from",
            "format" : "date-time"
          },
          "ToDate" : {
            "type" : "string",
            "description" : "End of date range on InvoiceDate to query from",
            "format" : "date-time"
          }
        }
      },
      "VoidInvoiceRequest" : {
        "type" : "object",
        "properties" : {
          "VoidDate" : {
            "type" : "string",
            "description" : "This is the date that the void will be recognized",
            "format" : "date-time"
          },
          "SendUpdate" : {
            "type" : "boolean",
            "description" : "If true, send an updated voided invoice to the customer"
          }
        }
      },
      "ReconciliationReportRequest" : {
        "type" : "object",
        "properties" : {
          "DateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "DateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "timezoneOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReconciliationReportRequestSort"
            }
          }
        },
        "description" : "Data needed to run the Reconciliation Report"
      },
      "ReconciliationReportRequestSort" : {
        "type" : "object",
        "properties" : {
          "dir" : {
            "type" : "string"
          },
          "field" : {
            "type" : "string"
          }
        },
        "description" : "Sort object that is generated from the kendo grid. Schema is pre-determined"
      },
      "ReconciliationReportResult" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReconciliationReportRow"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Provides the data for the reconciliation report for a given period of time"
      },
      "ReconciliationReportRow" : {
        "type" : "object",
        "properties" : {
          "LedgerAccountId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "LedgerAccountName" : {
            "type" : "string"
          },
          "DebitsPeriod" : {
            "type" : "number",
            "format" : "double"
          },
          "CreditsPeriod" : {
            "type" : "number",
            "format" : "double"
          },
          "DebitsNet" : {
            "type" : "number",
            "format" : "double"
          },
          "CreditsNet" : {
            "type" : "number",
            "format" : "double"
          },
          "ClosingBalance" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "description" : "Describes the debits and credits for a ledger in a given period that makes up the reconciliation report"
      },
      "InvoicePaymentPayloadItem" : {
        "type" : "object",
        "properties" : {
          "PaymentTempId" : {
            "type" : "string",
            "description" : "Payment's temp Id",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Payment" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Payment details"
          },
          "InvoicePayments" : {
            "type" : "array",
            "description" : "List of all the invoice payments. Need at least one for the payment",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        }
      },
      "BatchApiResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 100 ]
          },
          "successCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errorCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          },
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiResponse"
            }
          }
        }
      },
      "MSBulkSettingRequest" : {
        "type" : "object",
        "properties" : {
          "Settings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MSSettingRequest"
            }
          }
        }
      },
      "MSSettingRequest" : {
        "type" : "object",
        "properties" : {
          "Setting" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 31, 40, 65, 66, 67, 81, 82, 83, 200, 300, 301, 400, 401, 600, 601, 602, 603, 604, 700, 701, 3000, 3001, 3002, 9000, 9001, 9002, 9003, 9004, 9950, 10400, 10500, 10600, 16000, 16001, 16002, 16003, 16004, 16005, 16006, 16007, 16008, 16009, 16010, 16011, 16012, 16013, 16014, 16015, 16016, 16017, 16018, 17000, 17100, 17200, 17300, 17400, 17500, 17501, 17503, 17504, 17505, 17506, 17507, 17508, 17509, 17510, 17511, 17512, 17513, 17600, 17800, 18000, 25001, 25002, 25003, 25004, 25201, 25202, 25203, 25204, 25205, 25400, 25401, 25800, 25801, 25802, 25803, 25804, 25805, 25806, 25807, 26000, 28100, 29100, 29101, 29102 ]
          },
          "Value" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "DuplicationCheckRequest" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "jobId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "JobPublishingDetails" : {
        "type" : "object",
        "properties" : {
          "RemainingCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "TotalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SetStateRequest" : {
        "type" : "object",
        "properties" : {
          "OrganizationId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "State" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          }
        },
        "description" : "Set the state of the portal (Turns on the portal in preview mode, or cut-over to fully to the new v2 portal)"
      },
      "SetStateResponse" : {
        "type" : "object",
        "properties" : {
          "Success" : {
            "type" : "boolean"
          }
        }
      },
      "EmailAddDomainResponse" : {
        "type" : "object",
        "properties" : {
          "DomainDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "ErrorMessage" : {
            "type" : "string"
          },
          "ErrorStatusCode" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 100, 101, 200, 201, 202, 203, 204, 205, 206, 300, 301, 302, 303, 304, 305, 306, 307, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 426, 500, 501, 502, 503, 504, 505 ]
          },
          "ErrorType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3 ]
          },
          "IsSuccess" : {
            "type" : "boolean"
          },
          "MailgunDomainCreated" : {
            "type" : "boolean"
          },
          "MailgunWebhooksCreated" : {
            "type" : "boolean"
          }
        }
      },
      "EmailVerifyDomainResponse" : {
        "type" : "object",
        "properties" : {
          "CNAMEValid" : {
            "type" : "boolean"
          },
          "DKIMValid" : {
            "type" : "boolean"
          },
          "DomainValid" : {
            "type" : "boolean"
          },
          "SPFValid" : {
            "type" : "boolean"
          },
          "event-data" : {
            "type" : "boolean"
          }
        }
      },
      "MSUserState" : {
        "type" : "object",
        "properties" : {
          "Features" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "enum" : [ 0, 1, 2, 3, 4, 5, 10, 20, 30, 45, 50, 51, 52, 53, 54, 55, 60, 65, 66, 70, 71, 80, 81, 82, 100, 101, 102, 103, 104, 105, 200, 201, 202, 203, 204, 205, 300, 301, 302, 400, 401, 402, 403, 404, 600, 601, 602, 603, 700, 701, 702, 703, 704, 800, 801, 802, 803, 850, 851, 852, 854, 855, 1000, 1100, 1101, 2000, 5000, 5001, 5050, 9000, 9001, 10000, 10001, 10002, 10003, 10004, 10005, 10050, 10051, 10052, 10100, 10101, 10102, 10103, 10200, 10300, 10301, 10302, 10303, 10304, 10305, 10400, 10401, 10500, 10501, 10600, 10601, 10700, 10800, 15000, 15001, 15003, 15004, 15100, 15200, 15900, 15901, 16000, 16001, 16002, 16101, 16102, 16104, 16105, 16107, 16108, 16109, 16110, 16200, 16201, 17000, 17001, 17002, 17003, 17004, 17005, 17006, 17007, 17008, 17009, 17010, 17011, 17012, 17013, 17014, 17015, 17016, 17017, 17018, 17100, 17200, 17300, 17400, 17500, 17501, 17502, 17503, 17504, 17505, 17506, 17600, 17601, 17602, 17603, 17604, 17605, 17700, 17701, 17702, 17703, 17800, 17801, 17802, 17900, 17901, 17950, 18000, 18001, 18002, 18003, 25000, 25001, 25200, 25202, 25203, 25204, 25400, 25600, 25800, 25801, 25802, 25900, 27001, 28000, 28050, 28051, 28052, 28100, 28101, 28200, 28250, 28300, 29000, 29051, 29101, 32767 ]
            }
          },
          "Settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "AvailableFeatures" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "enum" : [ 0, 1, 2, 3, 4, 5, 10, 20, 30, 45, 50, 51, 52, 53, 54, 55, 60, 65, 66, 70, 71, 80, 81, 82, 100, 101, 102, 103, 104, 105, 200, 201, 202, 203, 204, 205, 300, 301, 302, 400, 401, 402, 403, 404, 600, 601, 602, 603, 700, 701, 702, 703, 704, 800, 801, 802, 803, 850, 851, 852, 854, 855, 1000, 1100, 1101, 2000, 5000, 5001, 5050, 9000, 9001, 10000, 10001, 10002, 10003, 10004, 10005, 10050, 10051, 10052, 10100, 10101, 10102, 10103, 10200, 10300, 10301, 10302, 10303, 10304, 10305, 10400, 10401, 10500, 10501, 10600, 10601, 10700, 10800, 15000, 15001, 15003, 15004, 15100, 15200, 15900, 15901, 16000, 16001, 16002, 16101, 16102, 16104, 16105, 16107, 16108, 16109, 16110, 16200, 16201, 17000, 17001, 17002, 17003, 17004, 17005, 17006, 17007, 17008, 17009, 17010, 17011, 17012, 17013, 17014, 17015, 17016, 17017, 17018, 17100, 17200, 17300, 17400, 17500, 17501, 17502, 17503, 17504, 17505, 17506, 17600, 17601, 17602, 17603, 17604, 17605, 17700, 17701, 17702, 17703, 17800, 17801, 17802, 17900, 17901, 17950, 18000, 18001, 18002, 18003, 25000, 25001, 25200, 25202, 25203, 25204, 25400, 25600, 25800, 25801, 25802, 25900, 27001, 28000, 28050, 28051, 28052, 28100, 28101, 28200, 28250, 28300, 29000, 29051, 29101, 32767 ]
            }
          },
          "AvailableFeaturesForOrg" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "enum" : [ 0, 1, 2, 3, 4, 5, 10, 20, 30, 45, 50, 51, 52, 53, 54, 55, 60, 65, 66, 70, 71, 80, 81, 82, 100, 101, 102, 103, 104, 105, 200, 201, 202, 203, 204, 205, 300, 301, 302, 400, 401, 402, 403, 404, 600, 601, 602, 603, 700, 701, 702, 703, 704, 800, 801, 802, 803, 850, 851, 852, 854, 855, 1000, 1100, 1101, 2000, 5000, 5001, 5050, 9000, 9001, 10000, 10001, 10002, 10003, 10004, 10005, 10050, 10051, 10052, 10100, 10101, 10102, 10103, 10200, 10300, 10301, 10302, 10303, 10304, 10305, 10400, 10401, 10500, 10501, 10600, 10601, 10700, 10800, 15000, 15001, 15003, 15004, 15100, 15200, 15900, 15901, 16000, 16001, 16002, 16101, 16102, 16104, 16105, 16107, 16108, 16109, 16110, 16200, 16201, 17000, 17001, 17002, 17003, 17004, 17005, 17006, 17007, 17008, 17009, 17010, 17011, 17012, 17013, 17014, 17015, 17016, 17017, 17018, 17100, 17200, 17300, 17400, 17500, 17501, 17502, 17503, 17504, 17505, 17506, 17600, 17601, 17602, 17603, 17604, 17605, 17700, 17701, 17702, 17703, 17800, 17801, 17802, 17900, 17901, 17950, 18000, 18001, 18002, 18003, 25000, 25001, 25200, 25202, 25203, 25204, 25400, 25600, 25800, 25801, 25802, 25900, 27001, 28000, 28050, 28051, 28052, 28100, 28101, 28200, 28250, 28300, 29000, 29051, 29101, 32767 ]
            }
          },
          "FeatureSettingMeters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "Subscription" : {
            "type" : "string"
          },
          "Modules" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MSOrgModule"
            }
          }
        }
      },
      "MSOrgModule" : {
        "type" : "object",
        "properties" : {
          "Module" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true,
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ]
          },
          "Tier" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "IsEnabled" : {
            "type" : "boolean",
            "readOnly" : true
          }
        },
        "description" : "Entity"
      },
      "MSFeatureSettingLimitState" : {
        "type" : "object",
        "properties" : {
          "Limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "CurrentCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "FeatureSetting" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 31, 40, 65, 66, 67, 81, 82, 83, 200, 300, 301, 400, 401, 600, 601, 602, 603, 604, 700, 701, 3000, 3001, 3002, 9000, 9001, 9002, 9003, 9004, 9950, 10400, 10500, 10600, 16000, 16001, 16002, 16003, 16004, 16005, 16006, 16007, 16008, 16009, 16010, 16011, 16012, 16013, 16014, 16015, 16016, 16017, 16018, 17000, 17100, 17200, 17300, 17400, 17500, 17501, 17503, 17504, 17505, 17506, 17507, 17508, 17509, 17510, 17511, 17512, 17513, 17600, 17800, 18000, 25001, 25002, 25003, 25004, 25201, 25202, 25203, 25204, 25205, 25400, 25401, 25800, 25801, 25802, 25803, 25804, 25805, 25806, 25807, 26000, 28100, 29100, 29101, 29102 ]
          },
          "CanMakeRequest" : {
            "type" : "boolean"
          },
          "CanMakeOverageRequest" : {
            "type" : "boolean"
          },
          "CreditsRequestedToBeConsumed" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Interval" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 3, 4, 5 ]
          },
          "ResetInterval" : {
            "type" : "string"
          },
          "NextResetDateUTC" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "NamingRuleUsageResponse" : {
        "type" : "object",
        "properties" : {
          "Limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "CurrentUsage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "CanMakeRequest" : {
            "type" : "boolean"
          }
        }
      },
      "NavBarStructure" : {
        "type" : "object",
        "properties" : {
          "Items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NavBarModule"
            }
          },
          "IsCollapsed" : {
            "type" : "boolean"
          }
        }
      },
      "NavBarModule" : {
        "type" : "object",
        "properties" : {
          "DisplayName" : {
            "type" : "string"
          },
          "IsCustomName" : {
            "type" : "boolean"
          },
          "Icon" : {
            "type" : "string"
          },
          "SubItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NavBarModule"
            }
          },
          "Section" : {
            "type" : "string"
          },
          "NotificationCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Description" : {
            "type" : "string"
          },
          "Feature" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 10, 20, 30, 45, 50, 51, 52, 53, 54, 55, 60, 65, 66, 70, 71, 80, 81, 82, 100, 101, 102, 103, 104, 105, 200, 201, 202, 203, 204, 205, 300, 301, 302, 400, 401, 402, 403, 404, 600, 601, 602, 603, 700, 701, 702, 703, 704, 800, 801, 802, 803, 850, 851, 852, 854, 855, 1000, 1100, 1101, 2000, 5000, 5001, 5050, 9000, 9001, 10000, 10001, 10002, 10003, 10004, 10005, 10050, 10051, 10052, 10100, 10101, 10102, 10103, 10200, 10300, 10301, 10302, 10303, 10304, 10305, 10400, 10401, 10500, 10501, 10600, 10601, 10700, 10800, 15000, 15001, 15003, 15004, 15100, 15200, 15900, 15901, 16000, 16001, 16002, 16101, 16102, 16104, 16105, 16107, 16108, 16109, 16110, 16200, 16201, 17000, 17001, 17002, 17003, 17004, 17005, 17006, 17007, 17008, 17009, 17010, 17011, 17012, 17013, 17014, 17015, 17016, 17017, 17018, 17100, 17200, 17300, 17400, 17500, 17501, 17502, 17503, 17504, 17505, 17506, 17600, 17601, 17602, 17603, 17604, 17605, 17700, 17701, 17702, 17703, 17800, 17801, 17802, 17900, 17901, 17950, 18000, 18001, 18002, 18003, 25000, 25001, 25200, 25202, 25203, 25204, 25400, 25600, 25800, 25801, 25802, 25900, 27001, 28000, 28050, 28051, 28052, 28100, 28101, 28200, 28250, 28300, 29000, 29051, 29101, 32767 ]
          },
          "Flag" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3 ]
          },
          "Module" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 10, 11, 12, 13, 20, 21, 22, 23, 30, 40, 41, 42, 43, 16000, 16001, 16002, 17000, 17001, 17600, 17700, 17800, 17900, 18000, 28000 ]
          },
          "SortOrder" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MegaMenuModule" : {
        "type" : "object",
        "properties" : {
          "IsPinned" : {
            "type" : "boolean"
          },
          "DisplayName" : {
            "type" : "string"
          },
          "IsCustomName" : {
            "type" : "boolean"
          },
          "Icon" : {
            "type" : "string"
          },
          "SubItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NavBarModule"
            }
          },
          "Section" : {
            "type" : "string"
          },
          "NotificationCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Description" : {
            "type" : "string"
          },
          "Feature" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 10, 20, 30, 45, 50, 51, 52, 53, 54, 55, 60, 65, 66, 70, 71, 80, 81, 82, 100, 101, 102, 103, 104, 105, 200, 201, 202, 203, 204, 205, 300, 301, 302, 400, 401, 402, 403, 404, 600, 601, 602, 603, 700, 701, 702, 703, 704, 800, 801, 802, 803, 850, 851, 852, 854, 855, 1000, 1100, 1101, 2000, 5000, 5001, 5050, 9000, 9001, 10000, 10001, 10002, 10003, 10004, 10005, 10050, 10051, 10052, 10100, 10101, 10102, 10103, 10200, 10300, 10301, 10302, 10303, 10304, 10305, 10400, 10401, 10500, 10501, 10600, 10601, 10700, 10800, 15000, 15001, 15003, 15004, 15100, 15200, 15900, 15901, 16000, 16001, 16002, 16101, 16102, 16104, 16105, 16107, 16108, 16109, 16110, 16200, 16201, 17000, 17001, 17002, 17003, 17004, 17005, 17006, 17007, 17008, 17009, 17010, 17011, 17012, 17013, 17014, 17015, 17016, 17017, 17018, 17100, 17200, 17300, 17400, 17500, 17501, 17502, 17503, 17504, 17505, 17506, 17600, 17601, 17602, 17603, 17604, 17605, 17700, 17701, 17702, 17703, 17800, 17801, 17802, 17900, 17901, 17950, 18000, 18001, 18002, 18003, 25000, 25001, 25200, 25202, 25203, 25204, 25400, 25600, 25800, 25801, 25802, 25900, 27001, 28000, 28050, 28051, 28052, 28100, 28101, 28200, 28250, 28300, 29000, 29051, 29101, 32767 ]
          },
          "Flag" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3 ]
          },
          "Module" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 10, 11, 12, 13, 20, 21, 22, 23, 30, 40, 41, 42, 43, 16000, 16001, 16002, 17000, 17001, 17600, 17700, 17800, 17900, 18000, 28000 ]
          },
          "SortOrder" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SmsPlivoMessageReceivedRequest" : {
        "type" : "object",
        "properties" : {
          "From" : {
            "type" : "string"
          },
          "MessageUuid" : {
            "type" : "string"
          },
          "Text" : {
            "type" : "string"
          },
          "To" : {
            "type" : "string"
          },
          "TotalAmount" : {
            "type" : "number",
            "format" : "double"
          },
          "TotalRate" : {
            "type" : "number",
            "format" : "double"
          },
          "Type" : {
            "type" : "string"
          },
          "Units" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SmsPlivoMessageStatusReceivedRequest" : {
        "type" : "object",
        "properties" : {
          "ErrorCode" : {
            "type" : "string"
          },
          "From" : {
            "type" : "string"
          },
          "Mcc" : {
            "type" : "integer",
            "format" : "int32"
          },
          "MessageUuid" : {
            "type" : "string"
          },
          "Mnc" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Status" : {
            "type" : "string"
          },
          "To" : {
            "type" : "string"
          },
          "TotalAmount" : {
            "type" : "number",
            "format" : "double"
          },
          "TotalRate" : {
            "type" : "number",
            "format" : "double"
          },
          "Units" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SmsPlivoVoiceAnswerRequest" : {
        "type" : "object",
        "properties" : {
          "CallStatus" : {
            "type" : "string"
          },
          "CallUuid" : {
            "type" : "string"
          },
          "Direction" : {
            "type" : "string"
          },
          "Event" : {
            "type" : "string"
          },
          "From" : {
            "type" : "string"
          },
          "To" : {
            "type" : "string"
          }
        }
      },
      "SmsPlivoVoiceHangupRequest" : {
        "type" : "object",
        "properties" : {
          "BillDuration" : {
            "type" : "integer",
            "format" : "int32"
          },
          "CallerName" : {
            "type" : "string"
          },
          "CallStatus" : {
            "type" : "string"
          },
          "CallUuid" : {
            "type" : "string"
          },
          "Direction" : {
            "type" : "string"
          },
          "EndTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Event" : {
            "type" : "string"
          },
          "From" : {
            "type" : "string"
          },
          "HangupCause" : {
            "type" : "string"
          },
          "StartTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "To" : {
            "type" : "string"
          },
          "TotalCost" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "CloseProcessRequest" : {
        "type" : "object",
        "properties" : {
          "CloseReason" : {
            "type" : "integer",
            "format" : "int32"
          },
          "CloseNote" : {
            "type" : "string"
          }
        }
      },
      "ProcessDupeNameRequest" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "ParentId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ProcessId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ProcessType" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "GetProcessesRequest" : {
        "type" : "object",
        "properties" : {
          "Type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "Filter" : {
            "type" : "string"
          },
          "OrderBy" : {
            "type" : "string"
          },
          "Desc" : {
            "type" : "boolean"
          },
          "Limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "PastDueThreshold" : {
            "type" : "string",
            "description" : "This datetime determines which processes will have their NeedsAttention property flagged with a \"interview past due\" \r\nAny process that has a scheduled interview with a date *before* this date will be flagged. This is usually the \r\ndate of 12am on the current day in the current user's timezone.",
            "format" : "date-time"
          }
        }
      },
      "CreateProcessFromTemplateRequest" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "Owner" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Parent" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "ProcessTemplate" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "DueOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Regarding" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "AutoComplete" : {
            "type" : "boolean"
          },
          "ProcessRequestItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProcessTemplateItem"
            }
          },
          "ProcessType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "WorkflowItemId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "ProcessTemplateItem" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string"
          },
          "Title" : {
            "type" : "string"
          },
          "SortOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Action" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
          },
          "IsRequired" : {
            "type" : "boolean"
          },
          "RequiredEntityType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "RequiredEntitySubType" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "RequiredArtifactTypeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "InternalDetailsIsRequired" : {
            "type" : "boolean"
          },
          "DueOnIsRequired" : {
            "type" : "boolean"
          },
          "OwnersIsRequired" : {
            "type" : "boolean"
          },
          "InternalDetails" : {
            "type" : "string"
          },
          "ExternalDetails" : {
            "type" : "string"
          },
          "DueOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Owner" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "FormDefinitionId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "ArtifactAutoComplete" : {
            "type" : "boolean"
          },
          "AttachmentTypes" : {
            "$ref" : "#/components/schemas/MultiEntityLookup"
          },
          "AttachmentIds" : {
            "$ref" : "#/components/schemas/MultiEntityLookup"
          },
          "DelegatedUserIds" : {
            "$ref" : "#/components/schemas/MultiEntityLookup"
          },
          "Items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProcessTemplateItem"
            }
          }
        }
      },
      "ProcessTemplateTemplate" : {
        "type" : "object",
        "properties" : {
          "Title" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "Items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProcessTemplateItem"
            }
          },
          "ProcessType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          }
        }
      },
      "ProcessTemplateAction" : {
        "type" : "object",
        "properties" : {
          "EntityType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 150, 160, 161, 162, 163, 165, 220, 221, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 350, 500, 501, 502, 510, 511, 512, 513, 514, 700, 701, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 850, 851, 900, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 10000, 10001, 10002, 10003, 11000 ]
          },
          "EntityName" : {
            "type" : "string"
          },
          "ActionName" : {
            "type" : "string"
          },
          "Action" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
          },
          "SubTypeEntityType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 150, 160, 161, 162, 163, 165, 220, 221, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 350, 500, 501, 502, 510, 511, 512, 513, 514, 700, 701, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 850, 851, 900, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 10000, 10001, 10002, 10003, 11000 ]
          },
          "SubTypeEntityName" : {
            "type" : "string"
          },
          "AllowedSubTypeRecordIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          }
        }
      },
      "ProcessTemplateDupeNameRequest" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "TemplateId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ProcessType" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "GetTemplateForNewProcessRequest" : {
        "type" : "object",
        "properties" : {
          "TemplateId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ParentId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          }
        }
      },
      "DeletedRecordInfo" : {
        "type" : "object",
        "properties" : {
          "DeletionId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "EntityType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 150, 160, 161, 162, 163, 165, 220, 221, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 350, 500, 501, 502, 510, 511, 512, 513, 514, 700, 701, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 850, 851, 900, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 10000, 10001, 10002, 10003, 11000 ]
          },
          "DeletedById" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "DeletedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "DeletedRecord" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "DeletedRecordName" : {
            "type" : "string"
          },
          "ParentDeletedRecord" : {
            "$ref" : "#/components/schemas/DeletedRecordInfo"
          },
          "ChildDeletedRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeletedRecordInfo"
            }
          },
          "IsSafeToRestore" : {
            "type" : "boolean"
          }
        }
      },
      "RestoreResult" : {
        "type" : "object",
        "properties" : {
          "Success" : {
            "type" : "boolean"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Error" : {
            "type" : "string"
          }
        }
      },
      "Contact" : {
        "type" : "object",
        "properties" : {
          "Addresses" : {
            "$ref" : "#/components/schemas/RepoContactAddresses"
          },
          "Num" : {
            "type" : "integer",
            "format" : "int32"
          },
          "CreatedBy" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Description" : {
            "type" : "string"
          },
          "EmailAddresses" : {
            "$ref" : "#/components/schemas/RepoContactEmailAddresses"
          },
          "EntityStatus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ExternalPrimaryKey" : {
            "type" : "string"
          },
          "FirstName" : {
            "type" : "string"
          },
          "InstantAddresses" : {
            "$ref" : "#/components/schemas/RepoContactInstantAddresses"
          },
          "LastName" : {
            "type" : "string"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Name" : {
            "type" : "string"
          },
          "NickName" : {
            "type" : "string"
          },
          "Owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RepoRecordOwnerLookup"
            }
          },
          "PhoneNumbers" : {
            "$ref" : "#/components/schemas/RepoContactPhoneNumbers"
          },
          "Tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RepoRecordTagLookup"
            }
          },
          "UpdatedBy" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "Websites" : {
            "$ref" : "#/components/schemas/RepoContactUrls"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "OrgId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ChangedProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RepoContactAddresses" : {
        "type" : "object",
        "properties" : {
          "Business" : {
            "$ref" : "#/components/schemas/RepoAddress"
          },
          "Headquarters" : {
            "$ref" : "#/components/schemas/RepoAddress"
          },
          "Home" : {
            "$ref" : "#/components/schemas/RepoAddress"
          },
          "Other" : {
            "$ref" : "#/components/schemas/RepoAddress"
          }
        }
      },
      "RepoContactEmailAddresses" : {
        "type" : "object",
        "properties" : {
          "Other" : {
            "$ref" : "#/components/schemas/RepoEmailAddress"
          },
          "Personal" : {
            "$ref" : "#/components/schemas/RepoEmailAddress"
          },
          "Sales" : {
            "$ref" : "#/components/schemas/RepoEmailAddress"
          },
          "Support" : {
            "$ref" : "#/components/schemas/RepoEmailAddress"
          },
          "Work" : {
            "$ref" : "#/components/schemas/RepoEmailAddress"
          }
        }
      },
      "RepoContactInstantAddresses" : {
        "type" : "object",
        "properties" : {
          "Aim" : {
            "$ref" : "#/components/schemas/RepoInstantAddress"
          },
          "FacebookChat" : {
            "$ref" : "#/components/schemas/RepoInstantAddress"
          },
          "FaceTime" : {
            "$ref" : "#/components/schemas/RepoInstantAddress"
          },
          "GoogleTalk" : {
            "$ref" : "#/components/schemas/RepoInstantAddress"
          },
          "Icq" : {
            "$ref" : "#/components/schemas/RepoInstantAddress"
          },
          "Other" : {
            "$ref" : "#/components/schemas/RepoInstantAddress"
          },
          "Skype" : {
            "$ref" : "#/components/schemas/RepoInstantAddress"
          },
          "Twitter" : {
            "$ref" : "#/components/schemas/RepoInstantAddress"
          },
          "YahooMsg" : {
            "$ref" : "#/components/schemas/RepoInstantAddress"
          }
        }
      },
      "RepoRecordOwnerLookup" : {
        "type" : "object",
        "properties" : {
          "IsPrimary" : {
            "type" : "boolean"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Title" : {
            "type" : "string"
          }
        }
      },
      "RepoContactPhoneNumbers" : {
        "type" : "object",
        "properties" : {
          "Fax" : {
            "$ref" : "#/components/schemas/RepoPhoneNumber"
          },
          "Home" : {
            "$ref" : "#/components/schemas/RepoPhoneNumber"
          },
          "Main" : {
            "$ref" : "#/components/schemas/RepoPhoneNumber"
          },
          "Mobile" : {
            "$ref" : "#/components/schemas/RepoPhoneNumber"
          },
          "Other" : {
            "$ref" : "#/components/schemas/RepoPhoneNumber"
          },
          "Sales" : {
            "$ref" : "#/components/schemas/RepoPhoneNumber"
          },
          "Skype" : {
            "$ref" : "#/components/schemas/RepoPhoneNumber"
          },
          "Support" : {
            "$ref" : "#/components/schemas/RepoPhoneNumber"
          },
          "WorkDirect" : {
            "$ref" : "#/components/schemas/RepoPhoneNumber"
          },
          "WorkMain" : {
            "$ref" : "#/components/schemas/RepoPhoneNumber"
          }
        }
      },
      "RepoRecordTagLookup" : {
        "type" : "object",
        "properties" : {
          "CategoryId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Title" : {
            "type" : "string"
          }
        }
      },
      "RepoContactUrls" : {
        "type" : "object",
        "properties" : {
          "Blog" : {
            "$ref" : "#/components/schemas/RepoUrl"
          },
          "Business" : {
            "$ref" : "#/components/schemas/RepoUrl"
          },
          "Description" : {
            "$ref" : "#/components/schemas/RepoUrl"
          },
          "Facebook" : {
            "$ref" : "#/components/schemas/RepoUrl"
          },
          "LinkedIn" : {
            "$ref" : "#/components/schemas/RepoUrl"
          },
          "Other" : {
            "$ref" : "#/components/schemas/RepoUrl"
          },
          "Personal" : {
            "$ref" : "#/components/schemas/RepoUrl"
          }
        }
      },
      "RepoAddress" : {
        "type" : "object",
        "properties" : {
          "City" : {
            "type" : "string"
          },
          "Country" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "IsPrimary" : {
            "type" : "boolean"
          },
          "Line1" : {
            "type" : "string"
          },
          "State" : {
            "type" : "string"
          },
          "ZipCode" : {
            "type" : "string"
          },
          "DisplayName" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "RepoEmailAddress" : {
        "type" : "object",
        "properties" : {
          "IsPrimary" : {
            "type" : "boolean"
          },
          "Value" : {
            "type" : "string"
          },
          "EmailFlagTypeId" : {
            "$ref" : "#/components/schemas/RepoRecordLookup"
          },
          "DisplayName" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "RepoInstantAddress" : {
        "type" : "object",
        "properties" : {
          "Url" : {
            "type" : "string"
          },
          "IsPrimary" : {
            "type" : "boolean"
          },
          "Value" : {
            "type" : "string"
          },
          "DisplayName" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "RepoPhoneNumber" : {
        "type" : "object",
        "properties" : {
          "Extension" : {
            "type" : "string"
          },
          "IsPrimary" : {
            "type" : "boolean"
          },
          "Value" : {
            "type" : "string"
          },
          "DisplayName" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "RepoUrl" : {
        "type" : "object",
        "properties" : {
          "IsPrimary" : {
            "type" : "boolean"
          },
          "Value" : {
            "type" : "string"
          },
          "DisplayName" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "RingCentralUserState" : {
        "type" : "object",
        "properties" : {
          "Activated" : {
            "type" : "boolean"
          },
          "Available" : {
            "type" : "boolean"
          },
          "OrgId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "OrgName" : {
            "type" : "string"
          },
          "SmsEnabled" : {
            "type" : "boolean"
          },
          "UserId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Username" : {
            "type" : "string"
          },
          "WidgetEnabled" : {
            "type" : "boolean"
          },
          "TokenValid" : {
            "type" : "boolean"
          }
        }
      },
      "RingCentralUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "SmsEnabled" : {
            "type" : "boolean"
          },
          "WidgetEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "HubspotContactWordpressRequest" : {
        "type" : "object",
        "properties" : {
          "FirstName" : {
            "type" : "string"
          },
          "LastName" : {
            "type" : "string"
          },
          "Email" : {
            "type" : "string"
          },
          "Phone" : {
            "type" : "string"
          },
          "Company" : {
            "type" : "string"
          },
          "CompanySize" : {
            "type" : "string"
          },
          "Relationship" : {
            "type" : "string"
          },
          "Source" : {
            "type" : "string"
          },
          "SubscribeCrelateNews" : {
            "type" : "boolean"
          },
          "SaleWebinars" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "EbookNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RedirectResult" : {
        "type" : "object",
        "properties" : {
          "Location" : {
            "type" : "string",
            "readOnly" : true
          },
          "Request" : {
            "type" : "object",
            "properties" : { },
            "readOnly" : true
          }
        }
      },
      "SimilarJobTitleResponse" : {
        "type" : "object",
        "properties" : {
          "JobTitles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimilarJobTitle"
            }
          }
        }
      },
      "SimilarJobTitle" : {
        "type" : "object",
        "properties" : {
          "JobTitle" : {
            "type" : "string"
          },
          "Synonyms" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SemanticTermResult" : {
        "type" : "object",
        "properties" : {
          "Confidence" : {
            "type" : "number",
            "format" : "double"
          },
          "Text" : {
            "type" : "string"
          }
        }
      },
      "SearchContact" : {
        "type" : "object",
        "properties" : {
          "FirstName" : {
            "type" : "string"
          },
          "LastName" : {
            "type" : "string"
          },
          "CurrentPosition" : {
            "type" : "string"
          },
          "HasPhoneNumber" : {
            "type" : "boolean"
          },
          "PhoneNumber" : {
            "type" : "string"
          },
          "ContactType" : {
            "type" : "string"
          },
          "CityState" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          },
          "EntityStatus" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "WebhookDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "Deleted" : {
            "type" : "boolean"
          }
        }
      },
      "TimekeepingResponseEnvelope[BulkResponse[Guid]]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/BulkResponse[Guid]"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "BulkResponse[Guid]" : {
        "type" : "object",
        "properties" : {
          "Success" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          },
          "Failed" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          }
        }
      },
      "TimekeepingResponseEnvelope[ApiResponse]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/ApiResponse"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "TimekeepingResponseEnvelope[List[Guid]]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "TimekeepingRejectRequest" : {
        "type" : "object",
        "properties" : {
          "TargetId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Reason" : {
            "type" : "string"
          }
        }
      },
      "TimekeepingResponseEnvelope[AvailableForTimekeepingResponse]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/AvailableForTimekeepingResponse"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "AvailableForTimekeepingResponse" : {
        "type" : "object",
        "properties" : {
          "IsAvailable" : {
            "type" : "boolean"
          },
          "UnavailableReason" : {
            "type" : "string"
          }
        }
      },
      "TimekeepingResponseEnvelope[IEnumerable[CrelateEntity]]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "TimekeepingResponseEnvelope[IEnumerable[TimeCardFullResponse]]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimeCardFullResponse"
            }
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "TimeCardFullResponse" : {
        "type" : "object",
        "properties" : {
          "TimeCard" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "TimeEntries" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        }
      },
      "TimekeepingResponseEnvelope[PayPeriodEntity]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "TimekeepingResponseEnvelope[PayPeriodSheetResponse]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/PayPeriodSheetResponse"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "PayPeriodSheetResponse" : {
        "type" : "object",
        "properties" : {
          "PayPeriodId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "PayPeriodSheet" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "TimeCards" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "ExpenseEntries" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        }
      },
      "TimekeepingResponseEnvelope[IEnumerable[Guid]]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "SyncPayPeriodSheetRequest" : {
        "type" : "object",
        "properties" : {
          "EnsureSheet" : {
            "$ref" : "#/components/schemas/SavePayPeriodSheetRequest"
          },
          "RemoveTimeCards" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          },
          "RemoveExpenseEntries" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          }
        }
      },
      "SavePayPeriodSheetRequest" : {
        "type" : "object",
        "properties" : {
          "PayPeriodId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "TimeCards" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SaveTimeCardRequest"
            }
          },
          "ExpenseEntries" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        }
      },
      "SaveTimeCardRequest" : {
        "type" : "object",
        "properties" : {
          "TimeCard" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "TimeEntries" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        }
      },
      "SyncPayPeriodSheetOnBehalfOfRequest" : {
        "type" : "object",
        "properties" : {
          "EmployeeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "EnsureSheet" : {
            "$ref" : "#/components/schemas/SavePayPeriodSheetRequest"
          },
          "RemoveTimeCards" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          },
          "RemoveExpenseEntries" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          }
        }
      },
      "ApprovalsSettingsRequest" : {
        "type" : "object",
        "properties" : {
          "Enabled" : {
            "type" : "boolean"
          },
          "Required" : {
            "type" : "boolean"
          },
          "DueOnTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "DueOn" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4 ]
          }
        }
      },
      "TimekeepingResponseEnvelope[TimeCardFullResponse]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/TimeCardFullResponse"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "SortBy" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string"
          },
          "dir" : {
            "type" : "string"
          }
        }
      },
      "UnclaimedTimeCardsReportRequest" : {
        "type" : "object",
        "properties" : {
          "Filter" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "skip" : {
            "type" : "integer",
            "format" : "int32"
          },
          "take" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ReportResults[UnclaimedTimeCardsReportRow]" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UnclaimedTimeCardsReportRow"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Used for reporting services (i.e. TimeCardServiceReport) to return a subset list of objects\r\nand a total account of all the items found. \r\n\r\n<para>Note: These properties are starting with lowercase because the UI Grid expects the properties this way.</para>"
      },
      "UnclaimedTimeCardsReportRow" : {
        "type" : "object",
        "properties" : {
          "EmployeeName" : {
            "type" : "string"
          },
          "EmailAddress" : {
            "type" : "string"
          },
          "TimeType" : {
            "type" : "string"
          },
          "Job" : {
            "type" : "string"
          },
          "PayPeriodStart" : {
            "type" : "string"
          },
          "PayPeriodEnd" : {
            "type" : "string"
          },
          "PayRate" : {
            "type" : "string"
          },
          "CompanyName" : {
            "type" : "string"
          },
          "EstimatedEndDate" : {
            "type" : "string"
          }
        }
      },
      "TimekeepingResponseEnvelope[TimekeepingUsersState]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/TimekeepingUsersState"
          },
          "Error" : {
            "$ref" : "#/components/schemas/TimekeepingError"
          },
          "HasError" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "TimekeepingUsersState" : {
        "type" : "object",
        "properties" : {
          "Active" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Potential" : {
            "type" : "integer",
            "format" : "int32"
          },
          "SoftMaximumForTier" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UserContactResponseEnvelope[UserManagementAddUserResponse]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/UserManagementAddUserResponse"
          },
          "Error" : {
            "$ref" : "#/components/schemas/UserContactError"
          }
        }
      },
      "UserManagementAddUserResponse" : {
        "type" : "object",
        "properties" : {
          "UserId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "FirstName" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Username" : {
            "type" : "string"
          },
          "Password" : {
            "type" : "string"
          },
          "UserTypeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "LoginUrl" : {
            "type" : "string"
          },
          "PasswordNotSet" : {
            "type" : "boolean",
            "description" : "IF the user was added to the org, but the password could not be set\r\nbecause the user already had an account in a different org"
          },
          "ErrorMessage" : {
            "type" : "string",
            "description" : "Message to be shown to the user.  It can contain HTML markup so anything that looks like markup, but isn't should be properly escaped"
          },
          "Success" : {
            "type" : "boolean",
            "description" : "Whether the operation was a success or not"
          },
          "CurrentUserCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "TotalLicenseCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UserContactError" : {
        "type" : "object",
        "properties" : {
          "ErrorMessage" : {
            "type" : "string"
          },
          "ErrorTags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "StackTrace" : {
            "type" : "string"
          }
        }
      },
      "UserContactBadge" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "Color" : {
            "type" : "string"
          }
        }
      },
      "UserContactResponseEnvelope[Boolean]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "boolean"
          },
          "Error" : {
            "$ref" : "#/components/schemas/UserContactError"
          }
        }
      },
      "UserContactResponseEnvelope[IDictionary[Guid,Int32]]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "Error" : {
            "$ref" : "#/components/schemas/UserContactError"
          }
        }
      },
      "LinkUserContactRequest" : {
        "type" : "object",
        "properties" : {
          "UserId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "RoleType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 4, 5, 6, 7, 8, 9, 10 ]
          }
        }
      },
      "UserContactResponseEnvelope[ValidateUserContactResult]" : {
        "type" : "object",
        "properties" : {
          "Response" : {
            "$ref" : "#/components/schemas/ValidateUserContactResult"
          },
          "Error" : {
            "$ref" : "#/components/schemas/UserContactError"
          }
        }
      },
      "ValidateUserContactResult" : {
        "type" : "object",
        "properties" : {
          "Valid" : {
            "type" : "boolean"
          },
          "Reason" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1, 2, 3, 4, 5, 6 ]
          },
          "ReasonMessage" : {
            "type" : "string",
            "readOnly" : true
          },
          "UserLookup" : {
            "$ref" : "#/components/schemas/EntityLookup"
          }
        }
      },
      "GetFormResult" : {
        "type" : "object",
        "properties" : {
          "RequestType" : {
            "type" : "string"
          },
          "IsCompleted" : {
            "type" : "boolean"
          },
          "FormDef" : {
            "$ref" : "#/components/schemas/Form"
          },
          "DocumentType" : {
            "type" : "string"
          },
          "RequestedBy" : {
            "type" : "string"
          },
          "Error" : {
            "type" : "string"
          }
        }
      },
      "SaveFormRequest" : {
        "type" : "object",
        "properties" : {
          "Answers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "ArtifactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "SaveFormResult" : {
        "type" : "object",
        "properties" : {
          "Success" : {
            "type" : "boolean"
          },
          "Error" : {
            "type" : "string"
          }
        }
      },
      "SendFormRequestRequest" : {
        "type" : "object",
        "properties" : {
          "ContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Message" : {
            "type" : "string"
          },
          "TemplateId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "ProcessItemId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        },
        "description" : "Request object used by client when sending a Form Request"
      },
      "OrgAuditLogEvent" : {
        "type" : "object",
        "properties" : {
          "Action" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ActionDisplayName" : {
            "type" : "string"
          },
          "Details" : {
            "type" : "string"
          },
          "IpAddress" : {
            "type" : "string"
          },
          "RecordChangedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "RecordChangedAttributesJson" : {
            "type" : "string"
          },
          "RecordId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "RecordTitle" : {
            "type" : "string"
          },
          "RecordType" : {
            "type" : "string"
          },
          "RecordTypeDisplayName" : {
            "type" : "string"
          },
          "UserDisplayName" : {
            "type" : "string"
          },
          "UserEmail" : {
            "type" : "string"
          },
          "UserId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "When" : {
            "type" : "string",
            "format" : "date-time"
          },
          "PartitionKey" : {
            "type" : "string"
          },
          "RowKey" : {
            "type" : "string"
          },
          "Timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ETag" : {
            "type" : "string"
          }
        }
      },
      "OrgAuditLogItem" : {
        "type" : "object",
        "properties" : {
          "OrgAuditLog" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgAuditLogEvent"
            }
          },
          "PartitionKey" : {
            "type" : "string"
          },
          "RowKey" : {
            "type" : "string"
          }
        }
      },
      "SendDomainAuthDetail" : {
        "type" : "object",
        "properties" : {
          "domain" : {
            "type" : "string",
            "description" : "Domain to authenticate"
          },
          "to" : {
            "type" : "string",
            "description" : "Email address to send the authentication email to"
          }
        }
      },
      "EmailAddressFlagDetail" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "flagTypeId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          }
        }
      },
      "EmailFromAddress" : {
        "type" : "object",
        "properties" : {
          "CredentialTypeId" : {
            "type" : "string",
            "description" : "If this is a Credential Type of from email, set the type here",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Email" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "description" : "If this is a credential, Id of the credential entity",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "IsPrimary" : {
            "type" : "boolean",
            "description" : "If this is a Credential Type of form email, set the IsPrimary here"
          },
          "IsShared" : {
            "type" : "boolean",
            "description" : "If this is a Credential Type of form email, set the IsShared here"
          },
          "IsTemplateFrom" : {
            "type" : "boolean",
            "description" : "If true, this from address came from a template"
          },
          "Type" : {
            "type" : "integer",
            "description" : "Type of From Email. Credential and BulkEmail are the two main types. SystemEmail is a subset of BulkEmail",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3 ]
          },
          "UserId" : {
            "type" : "string",
            "description" : "Id of the user that owns this email address if any",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Inactive" : {
            "type" : "boolean"
          },
          "DisplayName" : {
            "type" : "string"
          }
        }
      },
      "ScorecardRatingsList" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        }
      },
      "CustomFormSaveResponse" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "StatusCode" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
          },
          "Message" : {
            "type" : "string"
          },
          "Usage" : {
            "$ref" : "#/components/schemas/CustomFormFormDefinitionUsage"
          },
          "FormResponses" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "FieldMappingResponse" : {
            "$ref" : "#/components/schemas/FieldMappingResult"
          }
        }
      },
      "CustomFormFormDefinitionUsage" : {
        "type" : "object",
        "properties" : {
          "Jobs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomFormFormDefintionUsageJobs"
            }
          },
          "VerbIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          },
          "CompletedCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "FieldMappingResult" : {
        "type" : "object",
        "properties" : {
          "StatusCode" : {
            "type" : "integer",
            "description" : "Status of the Field Mapping",
            "format" : "int32",
            "enum" : [ 0, 90, 91, 92, 93, 94 ]
          },
          "OverwriteEntity" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "This entity tracks the attributes and their values that will overwrite existing values"
          },
          "ExistingEntity" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "This entity tracks attributes and their values that will be overwritten"
          },
          "NetNewEntity" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "This entity tracks the attributes and their values that will be new to the entity, but will not be overwriting anything"
          }
        }
      },
      "CustomFormFormDefintionUsageJobs" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "CustomFormDefinitionEntities" : {
        "type" : "object",
        "properties" : {
          "FormDefinition" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "FormFields" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        }
      },
      "CustomFormFormFieldUsage" : {
        "type" : "object",
        "properties" : {
          "FormDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomFormFormFieldUsageFormDefinition"
            }
          },
          "Jobs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomFormFormDefintionUsageJobs"
            }
          },
          "VerbIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          },
          "CompletedCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CustomFormFormFieldUsageFormDefinition" : {
        "type" : "object",
        "properties" : {
          "FormTypeId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "QuestionCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Name" : {
            "type" : "string"
          }
        }
      },
      "GetDocumentListOptions" : {
        "type" : "object",
        "properties" : {
          "Types" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "enum" : [ 0, 1, 2 ]
            }
          },
          "AttachmentTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          },
          "AttachmentsFilter" : {
            "type" : "string"
          }
        }
      },
      "EntityDocumentOptions" : {
        "type" : "object",
        "properties" : {
          "TimezoneOffsetMinutes" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DocumentCollection" : {
        "type" : "object",
        "properties" : {
          "Attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DocumentItem"
            }
          },
          "Applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DocumentItem"
            }
          },
          "Forms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DocumentItem"
            }
          },
          "Total" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DocumentItem" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Type" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Title" : {
            "type" : "string"
          },
          "CreatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ModifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "FileName" : {
            "type" : "string"
          },
          "FileSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "IsImage" : {
            "type" : "boolean"
          },
          "IsDocument" : {
            "type" : "boolean"
          },
          "IsAudio" : {
            "type" : "boolean"
          },
          "ContentType" : {
            "type" : "string"
          },
          "EntityName" : {
            "type" : "string"
          },
          "Color" : {
            "type" : "string"
          },
          "TextColor" : {
            "type" : "string"
          },
          "BeingEditedByUser" : {
            "type" : "string"
          },
          "AdditionalInfo" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "ParentId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "Icon" : {
            "type" : "string"
          },
          "VerifiedById" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "VerifiedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Details" : {
            "type" : "string"
          },
          "IssuedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Name" : {
            "type" : "string"
          },
          "PrimaryArtifactIdentifier" : {
            "type" : "string"
          },
          "StatusId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "RevokedById" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "RevokedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ExpiresOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "PreventDelete" : {
            "type" : "boolean"
          },
          "TypeCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "CompletedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "FormId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "FormResponseId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "ApplicationId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "ArtifactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "ResumeToolboxResult" : {
        "type" : "object",
        "properties" : {
          "Success" : {
            "type" : "boolean"
          },
          "NewAttachmentId" : {
            "$ref" : "#/components/schemas/EntityLookup"
          },
          "UpdatedContactId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "SendSubmittalDetail" : {
        "type" : "object",
        "properties" : {
          "ValidationKey" : {
            "type" : "string"
          },
          "SubmittalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "UserId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AttachmentItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmailAttachment"
            }
          }
        }
      },
      "EmailAttachment" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "fileName" : {
            "type" : "string"
          }
        }
      },
      "ParseUsage" : {
        "type" : "object",
        "properties" : {
          "ParsesUsed" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ParsesRemaining" : {
            "type" : "integer",
            "format" : "int32"
          },
          "PeriodStart" : {
            "type" : "string",
            "format" : "date-time"
          },
          "PeriodEnd" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ResumeImportContact" : {
        "type" : "object",
        "properties" : {
          "DuplicateOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "Contact" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "BoardParameters" : {
        "type" : "object",
        "properties" : {
          "UserId" : {
            "type" : "string"
          },
          "StatusIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            }
          }
        }
      },
      "ValidateUserEmailResult" : {
        "type" : "object",
        "properties" : {
          "Valid" : {
            "type" : "boolean",
            "description" : "Can this email address be used for a crelate login?"
          },
          "Reason" : {
            "type" : "integer",
            "description" : "Why not?",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
          },
          "ReasonMessage" : {
            "type" : "string",
            "description" : "User-friendly message explaining why email is invalid",
            "readOnly" : true
          },
          "Email" : {
            "type" : "string",
            "description" : "The email address that was checked, cleaned up  (trimmed and spaces removed)"
          }
        },
        "description" : "Response object for ValidateUserEmailAddress helper"
      },
      "SignupInformation" : {
        "type" : "object",
        "properties" : {
          "companyName" : {
            "type" : "string"
          },
          "companySize" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "grecaptcha" : {
            "type" : "string"
          },
          "orgName" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "skipEmail" : {
            "type" : "boolean"
          },
          "typeFirm" : {
            "type" : "string"
          },
          "termsAccepted" : {
            "type" : "boolean"
          },
          "emailVerifyKey" : {
            "type" : "string",
            "description" : "Email verification bypass key"
          }
        }
      },
      "SignupResult" : {
        "type" : "object",
        "properties" : {
          "Success" : {
            "type" : "boolean"
          },
          "OrgId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "UserId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ProdEnvironment" : {
            "type" : "boolean"
          },
          "Reason" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8 ]
          },
          "MissingFields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "InvalidEmailMessage" : {
            "type" : "string"
          }
        },
        "description" : "Response object returned to server for final signup step"
      },
      "PortalSubmittalRecipient" : {
        "type" : "object",
        "properties" : {
          "SubmittalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "SharedLinkId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "SharedLinkName" : {
            "type" : "string"
          },
          "PortalHistoryId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "FullName" : {
            "type" : "string"
          },
          "Email" : {
            "type" : "string"
          },
          "Viewed" : {
            "type" : "boolean"
          },
          "ViewedOn" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "CreateSharedLinkSubmittalResult" : {
        "type" : "object",
        "properties" : {
          "SubmittalId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "AsyncJobId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "AcknowledgeRequest" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "module" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ]
          },
          "tier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "token" : {
            "type" : "string"
          },
          "orgId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "AcknowledgeResult" : {
        "type" : "object",
        "properties" : {
          "ModuleIsPurchased" : {
            "type" : "boolean"
          },
          "BillingAcknowledged" : {
            "type" : "boolean"
          }
        },
        "description" : "Result returned from AcknowledgeHostedPage"
      },
      "GetCheckoutRequest" : {
        "type" : "object",
        "properties" : {
          "level" : {
            "type" : "integer",
            "format" : "int32"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "period" : {
            "type" : "integer",
            "format" : "int32"
          },
          "priceid" : {
            "type" : "string"
          },
          "module" : {
            "type" : "integer",
            "format" : "int32"
          },
          "token" : {
            "type" : "string"
          },
          "orgId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "tier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateSubscriptionItemRequest"
            }
          }
        }
      },
      "UpdateSubscriptionItemRequest" : {
        "type" : "object",
        "properties" : {
          "module" : {
            "type" : "integer",
            "format" : "int32"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "tier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "addonPriceId" : {
            "type" : "string"
          }
        }
      },
      "ProductItem" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string"
          },
          "Module" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Tier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Level" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Primary" : {
            "type" : "boolean"
          },
          "ReadOnly" : {
            "type" : "boolean"
          },
          "Prices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductItemPrice"
            }
          },
          "ItemFamilyId" : {
            "type" : "string"
          }
        }
      },
      "ProductItemPrice" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string"
          },
          "Period" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
          },
          "PricePerMonth" : {
            "type" : "number",
            "format" : "double"
          },
          "PricePerYear" : {
            "type" : "number",
            "format" : "double"
          },
          "ParentItemId" : {
            "type" : "string"
          }
        }
      },
      "BillingSyncResult" : {
        "type" : "object",
        "properties" : {
          "Updated" : {
            "type" : "boolean"
          },
          "BillingSyncDisabled" : {
            "type" : "boolean"
          },
          "Log" : {
            "type" : "string"
          },
          "Errors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "SubscriptionIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "IsReadOnlyOrg" : {
            "type" : "boolean"
          },
          "OldLicenseType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5 ]
          },
          "NewLicenseType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5 ]
          },
          "OldOrgStatus" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1, 2, 3, 51, 90, 91, 92, 93, 94, 95 ]
          },
          "NewOrgStatus" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 1, 2, 3, 51, 90, 91, 92, 93, 94, 95 ]
          },
          "UpdatedModuleSystem" : {
            "type" : "boolean"
          },
          "ChangedIntervals" : {
            "type" : "boolean"
          },
          "ModuleSystemUpdates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModuleUpdate"
            }
          },
          "SetReadOnlyTo" : {
            "type" : "boolean"
          },
          "UpdatedYearlyInterval" : {
            "type" : "boolean"
          },
          "UpdatedMonthlyInterval" : {
            "type" : "boolean"
          }
        },
        "description" : "Result of a billing sync/refresh for an organization"
      },
      "ModuleUpdate" : {
        "type" : "object",
        "properties" : {
          "Module" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ]
          },
          "PrevTier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "NewTier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "OldLicenseCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "NewLicenseCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Details about module system modules that have been updated (returned as part of billing synchronization result)"
      },
      "SubscriptionCatalogItem" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "DescriptionHtml" : {
            "type" : "string"
          },
          "Module" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ]
          },
          "HasQuantity" : {
            "type" : "boolean"
          },
          "RequiresRecruitTier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "PriceType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "Terms" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "Beta" : {
            "type" : "boolean"
          },
          "ContactForPurchase" : {
            "type" : "boolean"
          },
          "Levels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionCatalogLevel"
            }
          }
        },
        "description" : "Represents an addon that can be purchased in the settings/subscription page"
      },
      "SubscriptionCatalogLevel" : {
        "type" : "object",
        "properties" : {
          "Tier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Name" : {
            "type" : "string"
          },
          "DescriptionHtml" : {
            "type" : "string"
          },
          "BestValue" : {
            "type" : "boolean"
          },
          "AllowPurchase" : {
            "type" : "boolean"
          }
        },
        "description" : "Defines a level of an addon that can be purchased"
      },
      "SubscriptionPricingInfo" : {
        "type" : "object",
        "properties" : {
          "Products" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductItem"
            }
          },
          "TrialEndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "UserCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Object returned from GetPricingForClassicSalesAndRecruiting"
      },
      "OrgSubscriptionState" : {
        "type" : "object",
        "properties" : {
          "UserCount" : {
            "type" : "integer",
            "description" : "Current number of standard users",
            "format" : "int32"
          },
          "FullUserLimit" : {
            "type" : "integer",
            "description" : "Number of standard user licenses purchased",
            "format" : "int32"
          },
          "HiringManagerCount" : {
            "type" : "integer",
            "description" : "Current number of huring manager users",
            "format" : "int32"
          },
          "HiringManagerLimit" : {
            "type" : "integer",
            "description" : "Maximum number of hiring manager users allowed",
            "format" : "int32"
          },
          "EmployeeUserCount" : {
            "type" : "integer",
            "description" : "Current number of employee users",
            "format" : "int32"
          },
          "EmployeeUserLimit" : {
            "type" : "integer",
            "description" : "Maximum number of employee users",
            "format" : "int32"
          },
          "FlexUsers" : {
            "type" : "integer",
            "description" : "For omni customers, the number of users included in a tier usually includes \r\na set of \"flex\" users which we want to let customers know they're getting these\r\nusers as a bonus on top of what they're paying for.",
            "format" : "int32"
          },
          "MainSubscription" : {
            "$ref" : "#/components/schemas/OrgSubscriptionDetails"
          },
          "MainSubscriptionInterval" : {
            "type" : "integer",
            "description" : "The billing interval of the main subscrioption",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
          },
          "MainSubscriptionIntervalName" : {
            "type" : "string",
            "description" : "The billing interval of the main subscription (human readable)"
          },
          "SubscriptionLevelName" : {
            "type" : "string",
            "description" : "Subscription level e.g. \"Professional\", \"Business\", or \"Business (Omni Tier 3)\""
          },
          "IsOmni" : {
            "type" : "boolean",
            "description" : "True if the org has an \"Omni\" subscription"
          },
          "ModuleUsage" : {
            "type" : "array",
            "description" : "Contains a list of all the modules and addons the org has purchased, including details\r\nsuch as total, used, and available license counts, meter usage, and pricing.",
            "items" : {
              "$ref" : "#/components/schemas/OrgModuleUsageState"
            }
          },
          "Catalog" : {
            "type" : "array",
            "description" : "The catalog of addons that are available to purchase (This is based on the SubscriptionCatalog\r\nbut also include org-specific details such as which addons are already purchased and which ones\r\nare allowed to be purchased for this org).",
            "items" : {
              "$ref" : "#/components/schemas/OrgSubCatalogItem"
            }
          },
          "IsNonStandardSubscription" : {
            "type" : "boolean"
          },
          "SubscriptionIssues" : {
            "type" : "string",
            "description" : "Lists any errors or irregularities in the org's subscriptions\r\nFor example: if the org has non-standard subscriptions, or if it's a test org"
          }
        },
        "description" : "Contains the state of the current organization's subscription \r\nUsed to return details needed to load the settings/subscription page"
      },
      "OrgSubscriptionDetails" : {
        "type" : "object",
        "properties" : {
          "OrgId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "Id" : {
            "type" : "string"
          },
          "CustomerId" : {
            "type" : "string"
          },
          "Status" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
          },
          "TrialPaid" : {
            "type" : "boolean"
          },
          "TrialEnd" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Plan" : {
            "$ref" : "#/components/schemas/OrgSubscriptionItem"
          },
          "Addons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgSubscriptionItem"
            }
          },
          "EndTrialAction" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4 ]
          },
          "Interval" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
          },
          "NextBillingDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ActivationDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "OrgModuleUsageState" : {
        "type" : "object",
        "properties" : {
          "Module" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ]
          },
          "Name" : {
            "type" : "string"
          },
          "TierName" : {
            "type" : "string"
          },
          "Tier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "UnitLabel" : {
            "type" : "string",
            "description" : "Label to use for the unit of licenses (e.g., \"text message licenses\")"
          },
          "UnitPrice" : {
            "type" : "number",
            "format" : "double"
          },
          "TotalPrice" : {
            "type" : "number",
            "format" : "double"
          },
          "Interval" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
          },
          "IntervalName" : {
            "type" : "string"
          },
          "AllowChangingQuantity" : {
            "type" : "boolean",
            "description" : "True if the user should be allowed to change the quantity of licenses for this module"
          },
          "PurchasedLicenses" : {
            "type" : "integer",
            "description" : "Number of licenses purchased (for modules that are not quantity-based this will be null)",
            "format" : "int32"
          },
          "UsedLicenses" : {
            "type" : "integer",
            "format" : "int32"
          },
          "AvailableLicenses" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Usage" : {
            "type" : "array",
            "description" : "List of details explaining the current usage of the module. Typically based on module system meters, but could be anything.\r\nexample: \"Used 44 message out of 1500 this month\"\r\nNote: these are strings of HTML",
            "items" : {
              "type" : "string"
            }
          },
          "Visible" : {
            "type" : "boolean",
            "description" : "If this module's usage should be visibly displayed on the settings/purchase page"
          },
          "SubscriptionId" : {
            "type" : "string",
            "description" : "The id of the subscription that contains this module"
          },
          "NextBillingDate" : {
            "type" : "string",
            "description" : "The next billing date for this module (i.e. when the subscription renews)",
            "format" : "date-time"
          }
        },
        "description" : "Contains details about the current org's usage of a specific module"
      },
      "OrgSubCatalogItem" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "DescriptionHtml" : {
            "type" : "string"
          },
          "Module" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ]
          },
          "HasQuantity" : {
            "type" : "boolean"
          },
          "Terms" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "RequiresRecruitTier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "UpgradeTo" : {
            "type" : "string"
          },
          "PriceType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "Beta" : {
            "type" : "boolean"
          },
          "ContactForPurchase" : {
            "type" : "boolean"
          },
          "Levels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgSubCatalogLevel"
            }
          }
        },
        "description" : "A SubscriptionCatalog item containing details about an addon module that can be purchase, \r\nbut this copy also contains details about the current org (which tier is purchased, etc)"
      },
      "OrgSubscriptionItem" : {
        "type" : "object",
        "properties" : {
          "Quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ItemPriceId" : {
            "type" : "string"
          },
          "Module" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Level" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Tier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ItemName" : {
            "type" : "string"
          },
          "ReadOnly" : {
            "type" : "boolean"
          },
          "Interval" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
          },
          "Status" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
          },
          "FamilyId" : {
            "type" : "string"
          },
          "UnitPrice" : {
            "type" : "number",
            "format" : "double"
          },
          "TotalPrice" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "OrgSubCatalogLevel" : {
        "type" : "object",
        "properties" : {
          "Tier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "AddOn" : {
            "$ref" : "#/components/schemas/SubscriptionCatalogLevel"
          },
          "Enabled" : {
            "type" : "boolean"
          },
          "ShowBuyButton" : {
            "type" : "boolean"
          },
          "Purchased" : {
            "type" : "boolean"
          },
          "ShowPrice" : {
            "type" : "boolean"
          },
          "ShowDefaultLevel" : {
            "type" : "boolean"
          },
          "MonthlyPricePerMonth" : {
            "type" : "number",
            "format" : "double"
          },
          "MonthlyPricePerYear" : {
            "type" : "number",
            "format" : "double"
          },
          "AnnualPricePerMonth" : {
            "type" : "number",
            "format" : "double"
          },
          "AnnualPricePerYear" : {
            "type" : "number",
            "format" : "double"
          },
          "BestValue" : {
            "type" : "boolean"
          }
        },
        "description" : "A SubscriptionCatalog addon level (e.g., \"Text messaging Level 2\") but this \r\nversion contains details specific to the corrent org (which tier is purchased, how much it cost, etc)"
      },
      "GetPricingRequest" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "orgId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "GenerateEmailRequestData" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7 ]
          },
          "reset" : {
            "type" : "boolean"
          },
          "currentCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ParsedVMSEmail" : {
        "type" : "object",
        "properties" : {
          "RecordId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "EmailBody" : {
            "type" : "string"
          },
          "parsedFields" : {
            "$ref" : "#/components/schemas/ParsedVMSEmailFields"
          },
          "OrganizationId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "ParsedVMSEmailFields" : {
        "type" : "object",
        "properties" : {
          "StartDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "EndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Status" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 200, 201, 202 ]
          },
          "ReqNumber" : {
            "type" : "string"
          },
          "Name" : {
            "type" : "string"
          },
          "Type" : {
            "type" : "string"
          },
          "Client" : {
            "type" : "string"
          },
          "JobCategory" : {
            "type" : "string"
          },
          "Duties" : {
            "type" : "string"
          },
          "Experience" : {
            "type" : "string"
          },
          "Keywords" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "RequiredSkills" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "AdditionalSkills" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "HoursPerDay" : {
            "type" : "integer",
            "format" : "int32"
          },
          "HoursPerWeek" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ContactName" : {
            "type" : "string"
          },
          "ContactPhone" : {
            "type" : "string"
          },
          "ContactEmail" : {
            "type" : "string"
          },
          "NumPositions" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Description" : {
            "type" : "string"
          },
          "Comments" : {
            "type" : "string"
          },
          "ManagerLocation" : {
            "type" : "string"
          },
          "Location" : {
            "type" : "string"
          },
          "StartAndEndDate" : {
            "type" : "string"
          },
          "Skills" : {
            "type" : "string"
          },
          "TotalHours" : {
            "type" : "integer",
            "format" : "int32"
          },
          "WebSites" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "VMSRecordRequest" : {
        "type" : "object",
        "properties" : {
          "EmailProcessorOption" : {
            "type" : "integer",
            "description" : "Inbound email processor that send the email contents",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "ExternalPrimaryKey" : {
            "type" : "string",
            "description" : "Email message id that will be saved to the _VMSRecord's ExteralPrimaryKey"
          },
          "RecipientEmailAddress" : {
            "type" : "string",
            "description" : "Recipient email address"
          },
          "EmailSubject" : {
            "type" : "string",
            "description" : "Subject line on the email"
          },
          "EmailBody" : {
            "type" : "string",
            "description" : "Body of the email. Ideally it is plain text, but if there is a version that preserves any links in the body, that is preferred"
          }
        }
      },
      "VMSQueueItem" : {
        "type" : "object",
        "properties" : {
          "OrganizationId" : {
            "type" : "string",
            "description" : "OrgnizationId of the org that owns this _VMSRecord",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "RecordId" : {
            "type" : "string",
            "description" : "Id of the _VMSRecord",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ExternalPrimaryKey" : {
            "type" : "string",
            "description" : "ExternalPrimaryKey to connect to the email service."
          },
          "RegistrationEnabled" : {
            "type" : "boolean",
            "description" : "Status of VMS Registration - enabled vs disabled."
          }
        }
      },
      "VMSUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "RecordId" : {
            "type" : "string",
            "description" : "Id of the _VMSRecord entity",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "OrganizationId" : {
            "type" : "string",
            "description" : "Id of the organization that this _VMS Record belongs to",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "ErrorDetails" : {
            "type" : "string",
            "description" : "The log of errors/comments which occurred while processing the record."
          },
          "StatusCode" : {
            "type" : "integer",
            "description" : "The detailed status code of VMS record processing.",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 20, 21, 22, 23, 24, 25, 80, 81, 82, 83, 84, 85, 86 ]
          }
        }
      },
      "VMSParseJobRequest" : {
        "type" : "object",
        "properties" : {
          "parsedFields" : {
            "$ref" : "#/components/schemas/ParsedVMSEmailFields"
          },
          "vmsRegistrationId" : {
            "type" : "string",
            "description" : "Id of the VMS Registration",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "WayupData" : {
        "type" : "object",
        "properties" : {
          "resume" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "job_id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "response_id" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          }
        }
      },
      "ZipApplyData" : {
        "type" : "object",
        "properties" : {
          "resume" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "job_id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "response_id" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          }
        }
      }
    }
  }
}